                    function qe(e) {
                        return B.create('missing-app-config-values', { valueName: e });
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const ze = 'installations',
                        Ge = 'installations-internal',
                        We = e => {
                            const t = e.getProvider('app').getImmediate(),
                                n = $e(t),
                                r = (0, i._getProvider)(t, 'heartbeat'),
                                o = { app: t, appConfig: n, heartbeatServiceProvider: r, _delete: () => Promise.resolve() };
                            return o;
                        },
                        He = e => {
                            const t = e.getProvider('app').getImmediate(),
                                n = (0, i._getProvider)(t, ze).getImmediate(),
                                r = { getId: () => Ue(n), getToken: e => Ve(n, e) };
                            return r;
                        };

                    function Ke() {
                        (0, i._registerComponent)(new a.wA(ze, We, 'PUBLIC')), (0, i._registerComponent)(new a.wA(Ge, He, 'PRIVATE'));
                    }
                    Ke(), (0, i.registerVersion)(N, R), (0, i.registerVersion)(N, R, 'esm2017');
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Qe = 'analytics',
                        Ye = 'firebase_id',
                        Xe = 'origin',
                        Je = 6e4,
                        Ze = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
                        et = 'https://www.googletagmanager.com/gtag/js',
                        tt = new o.Yd('@firebase/analytics'),
                        nt = {
                            ['already-exists']: 'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
                            ['already-initialized']: 'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
                            ['already-initialized-settings']: 'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
                            ['interop-component-reg-failed']: 'Firebase Analytics Interop Component failed to instantiate: {$reason}',
                            ['invalid-analytics-context']: 'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                            ['indexeddb-unavailable']: 'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                            ['fetch-throttle']: 'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                            ['config-fetch-failed']: 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
                            ['no-api-key']: 'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                            ['no-app-id']: 'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                            ['no-client-id']: 'The "client_id" field is empty.',
                            ['invalid-gtag-resource']: 'Trusted Types detected an invalid gtag resource: {$gtagURL}.'
                        },
                        rt = new s.LL('analytics', 'Analytics', nt);
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function it(e) {
                        if (!e.startsWith(et)) {
                            const t = rt.create('invalid-gtag-resource', { gtagURL: e });
                            return tt.warn(t.message), '';
                        }
                        return e;
                    }

                    function ot(e) {
                        return Promise.all(e.map(e => e.catch(e => e)));
                    }

                    function st(e, t) {
                        let n;
                        return window.trustedTypes && (n = window.trustedTypes.createPolicy(e, t)), n;
                    }

                    function at(e, t) {
                        const n = st('firebase-js-sdk-policy', { createScriptURL: it }),
                            r = document.createElement('script'),
                            i = `${et}?l=${e}&id=${t}`;
                        (r.src = n ? (null === n || void 0 === n ? void 0 : n.createScriptURL(i)) : i), (r.async = !0), document.head.appendChild(r);
                    }

                    function ut(e) {
                        let t = [];
                        return Array.isArray(window[e]) ? (t = window[e]) : (window[e] = t), t;
                    }
                    async function ct(e, t, n, r, i, o) {
                        const s = r[i];
                        try {
                            if (s) await t[s];
                            else {
                                const e = await ot(n),
                                    r = e.find(e => e.measurementId === i);
                                r && (await t[r.appId]);
                            }
                        } catch (a) {
                            tt.error(a);
                        }
                        e('config', i, o);
                    }
                    async function lt(e, t, n, r, i) {
                        try {
                            let o = [];
                            if (i && i['send_to']) {
                                let e = i['send_to'];
                                Array.isArray(e) || (e = [e]);
                                const r = await ot(n);
                                for (const n of e) {
                                    const e = r.find(e => e.measurementId === n),
                                        i = e && t[e.appId];
                                    if (!i) {
                                        o = [];
                                        break;
                                    }
                                    o.push(i);
                                }
                            }
                            0 === o.length && (o = Object.values(t)), await Promise.all(o), e('event', r, i || {});
                        } catch (o) {
                            tt.error(o);
                        }
                    }

                    function ht(e, t, n, r) {
                        async function i(i, ...o) {
                            try {
                                if ('event' === i) {
                                    const [r, i] = o;
                                    await lt(e, t, n, r, i);
                                } else if ('config' === i) {
                                    const [i, s] = o;
                                    await ct(e, t, n, r, i, s);
                                } else if ('consent' === i) {
                                    const [t] = o;
                                    e('consent', 'update', t);
                                } else if ('get' === i) {
                                    const [t, n, r] = o;
                                    e('get', t, n, r);
                                } else if ('set' === i) {
                                    const [t] = o;
                                    e('set', t);
                                } else e(i, ...o);
                            } catch (s) {
                                tt.error(s);
                            }
                        }
                        return i;
                    }

                    function ft(e, t, n, r, i) {
                        let o = function(...e) {
                            window[r].push(arguments);
                        };
                        return window[i] && 'function' === typeof window[i] && (o = window[i]), (window[i] = ht(o, e, t, n)), { gtagCore: o, wrappedGtag: window[i] };
                    }

                    function dt(e) {
                        const t = window.document.getElementsByTagName('script');
                        for (const n of Object.values(t))
                            if (n.src && n.src.includes(et) && n.src.includes(e)) return n;
                        return null;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const pt = 30,
                        gt = 1e3;
                    class mt {
                        constructor(e = {}, t = gt) {
                            (this.throttleMetadata = e), (this.intervalMillis = t);
                        }
                        getThrottleMetadata(e) {
                            return this.throttleMetadata[e];
                        }
                        setThrottleMetadata(e, t) {
                            this.throttleMetadata[e] = t;
                        }
                        deleteThrottleMetadata(e) {
                            delete this.throttleMetadata[e];
                        }
                    }
                    const vt = new mt();

                    function yt(e) {
                        return new Headers({ Accept: 'application/json', 'x-goog-api-key': e });
                    }
                    async function wt(e) {
                        var t;
                        const { appId: n, apiKey: r } = e,
                        i = { method: 'GET', headers: yt(r) },
                            o = Ze.replace('{app-id}', n),
                            s = await fetch(o, i);
                        if (200 !== s.status && 304 !== s.status) {
                            let e = '';
                            try {
                                const n = await s.json();
                                (null === (t = n.error) || void 0 === t ? void 0 : t.message) && (e = n.error.message);
                            } catch (a) {}
                            throw rt.create('config-fetch-failed', { httpStatus: s.status, responseMessage: e });
                        }
                        return s.json();
                    }
                    async function bt(e, t = vt, n) {
                        const { appId: r, apiKey: i, measurementId: o } = e.options;
                        if (!r) throw rt.create('no-app-id');
                        if (!i) {
                            if (o) return { measurementId: o, appId: r };
                            throw rt.create('no-api-key');
                        }
                        const s = t.getThrottleMetadata(r) || { backoffCount: 0, throttleEndTimeMillis: Date.now() },
                            a = new St();
                        return (
                            setTimeout(
                                async() => {
                                    a.abort();
                                },
                                void 0 !== n ? n : Je
                            ),
                            _t({ appId: r, apiKey: i, measurementId: o }, s, a, t)
                        );
                    }
                    async function _t(e, { throttleEndTimeMillis: t, backoffCount: n }, r, i = vt) {
                        var o;
                        const { appId: a, measurementId: u } = e;
                        try {
                            await It(r, t);
                        } catch (c) {
                            if (u)
                                return (
                                    tt.warn(
                                        `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${u} provided in the "measurementId" field in the local Firebase config. [${null === c || void 0 === c ? void 0 : c.message}]`
                                    ), { appId: a, measurementId: u }
                                );
                            throw c;
                        }
                        try {
                            const t = await wt(e);
                            return i.deleteThrottleMetadata(a), t;
                        } catch (c) {
                            const t = c;
                            if (!Et(t)) {
                                if ((i.deleteThrottleMetadata(a), u))
                                    return (
                                        tt.warn(
                                            `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${u} provided in the "measurementId" field in the local Firebase config. [${null === t || void 0 === t ? void 0 : t.message}]`
                                        ), { appId: a, measurementId: u }
                                    );
                                throw c;
                            }
                            const l =
                                503 === Number(null === (o = null === t || void 0 === t ? void 0 : t.customData) || void 0 === o ? void 0 : o.httpStatus) ?
                                (0, s.$s)(n, i.intervalMillis, pt) :
                                (0, s.$s)(n, i.intervalMillis),
                                h = { throttleEndTimeMillis: Date.now() + l, backoffCount: n + 1 };
                            return i.setThrottleMetadata(a, h), tt.debug(`Calling attemptFetch again in ${l} millis`), _t(e, h, r, i);
                        }
                    }

                    function It(e, t) {
                        return new Promise((n, r) => {
                            const i = Math.max(t - Date.now(), 0),
                                o = setTimeout(n, i);
                            e.addEventListener(() => {
                                clearTimeout(o), r(rt.create('fetch-throttle', { throttleEndTimeMillis: t }));
                            });
                        });
                    }

                    function Et(e) {
                        if (!(e instanceof s.ZR) || !e.customData) return !1;
                        const t = Number(e.customData['httpStatus']);
                        return 429 === t || 500 === t || 503 === t || 504 === t;
                    }
                    class St {
                        constructor() {
                            this.listeners = [];
                        }
                        addEventListener(e) {
                            this.listeners.push(e);
                        }
                        abort() {
                            this.listeners.forEach(e => e());
                        }
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    let Tt, At;
                    async function xt(e, t, n, r, i) {
                        if (i && i.global) e('event', n, r);
                        else {
                            const i = await t,
                                o = Object.assign(Object.assign({}, r), { send_to: i });
                            e('event', n, o);
                        }
                    }
                    async function Ct(e, t, n, r) {
                        if (r && r.global) return e('set', { screen_name: n }), Promise.resolve(); {
                            const r = await t;
                            e('config', r, { update: !0, screen_name: n });
                        }
                    }
                    async function kt(e, t, n, r) {
                        if (r && r.global) return e('set', { user_id: n }), Promise.resolve(); {
                            const r = await t;
                            e('config', r, { update: !0, user_id: n });
                        }
                    }
                    async function Ot(e, t, n, r) {
                        if (r && r.global) {
                            const t = {};
                            for (const e of Object.keys(n)) t[`user_properties.${e}`] = n[e];
                            return e('set', t), Promise.resolve();
                        } {
                            const r = await t;
                            e('config', r, { update: !0, user_properties: n });
                        }
                    }
                    async function Nt(e, t) {
                        const n = await e;
                        window[`ga-disable-${n}`] = !t;
                    }

                    function Rt(e) {
                        At = e;
                    }

                    function Pt(e) {
                        Tt = e;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Dt() {
                        if (!(0, s.hl)())
                            return tt.warn(rt.create('indexeddb-unavailable', { errorInfo: 'IndexedDB is not available in this environment.' }).message), !1;
                        try {
                            await (0, s.eu)();
                        } catch (e) {
                            return tt.warn(rt.create('indexeddb-unavailable', { errorInfo: null === e || void 0 === e ? void 0 : e.toString() }).message), !1;
                        }
                        return !0;
                    }
                    async function Lt(e, t, n, r, i, o, s) {
                        var a;
                        const u = bt(e);
                        u
                            .then(t => {
                                (n[t.measurementId] = t.appId),
                                e.options.measurementId &&
                                    t.measurementId !== e.options.measurementId &&
                                    tt.warn(
                                        `The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${t.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                    );
                            })
                            .catch(e => tt.error(e)),
                            t.push(u);
                        const c = Dt().then(e => (e ? r.getId() : void 0)),
                            [l, h] = await Promise.all([u, c]);
                        dt(o) || at(o, l.measurementId), At && (i('consent', 'default', At), Rt(void 0)), i('js', new Date());
                        const f = null !== (a = null === s || void 0 === s ? void 0 : s.config) && void 0 !== a ? a : {};
                        return (
                            (f[Xe] = 'firebase'),
                            (f.update = !0),
                            null != h && (f[Ye] = h),
                            i('config', l.measurementId, f),
                            Tt && (i('set', Tt), Pt(void 0)),
                            l.measurementId
                        );
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class jt {
                        constructor(e) {
                            this.app = e;
                        }
                        _delete() {
                            return delete Mt[this.app.options.appId], Promise.resolve();
                        }
                    }
                    let Mt = {},
                        Ft = [];
                    const Ut = {};
                    let Vt,
                        Bt,
                        $t = 'dataLayer',
                        qt = 'gtag',
                        zt = !1;

                    function Gt(e) {
                        if (zt) throw rt.create('already-initialized');
                        e.dataLayerName && ($t = e.dataLayerName), e.gtagName && (qt = e.gtagName);
                    }

                    function Wt() {
                        const e = [];
                        if (((0, s.ru)() && e.push('This is a browser extension environment.'), (0, s.zI)() || e.push('Cookies are not available.'), e.length > 0)) {
                            const t = e.map((e, t) => `(${t + 1}) ${e}`).join(' '),
                                n = rt.create('invalid-analytics-context', { errorInfo: t });
                            tt.warn(n.message);
                        }
                    }

                    function Ht(e, t, n) {
                        Wt();
                        const r = e.options.appId;
                        if (!r) throw rt.create('no-app-id');
                        if (!e.options.apiKey) {
                            if (!e.options.measurementId) throw rt.create('no-api-key');
                            tt.warn(
                                `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                            );
                        }
                        if (null != Mt[r]) throw rt.create('already-exists', { id: r });
                        if (!zt) {
                            ut($t);
                            const { wrappedGtag: e, gtagCore: t } = ft(Mt, Ft, Ut, $t, qt);
                            (Bt = e), (Vt = t), (zt = !0);
                        }
                        Mt[r] = Lt(e, Ft, Ut, t, Vt, $t, n);
                        const i = new jt(e);
                        return i;
                    }
                    async function Kt() {
                        if ((0, s.ru)()) return !1;
                        if (!(0, s.zI)()) return !1;
                        if (!(0, s.hl)()) return !1;
                        try {
                            const e = await (0, s.eu)();
                            return e;
                        } catch (e) {
                            return !1;
                        }
                    }

                    function Qt(e, t, n) {
                        (e = (0, s.m9)(e)), Ct(Bt, Mt[e.app.options.appId], t, n).catch(e => tt.error(e));
                    }

                    function Yt(e, t, n) {
                        (e = (0, s.m9)(e)), kt(Bt, Mt[e.app.options.appId], t, n).catch(e => tt.error(e));
                    }

                    function Xt(e, t, n) {
                        (e = (0, s.m9)(e)), Ot(Bt, Mt[e.app.options.appId], t, n).catch(e => tt.error(e));
                    }

                    function Jt(e, t) {
                        (e = (0, s.m9)(e)), Nt(Mt[e.app.options.appId], t).catch(e => tt.error(e));
                    }

                    function Zt(e, t, n, r) {
                        (e = (0, s.m9)(e)), xt(Bt, Mt[e.app.options.appId], t, n, r).catch(e => tt.error(e));
                    }
                    const en = '@firebase/analytics',
                        tn = '0.10.0';

                    function nn() {
                        function e(e) {
                            try {
                                const t = e.getProvider(Qe).getImmediate();
                                return { logEvent: (e, n, r) => Zt(t, e, n, r) };
                            } catch (t) {
                                throw rt.create('interop-component-reg-failed', { reason: t });
                            }
                        }
                        (0, i._registerComponent)(
                            new a.wA(
                                Qe,
                                (e, { options: t }) => {
                                    const n = e.getProvider('app').getImmediate(),
                                        r = e.getProvider('installations-internal').getImmediate();
                                    return Ht(n, r, t);
                                },
                                'PUBLIC'
                            )
                        ),
                        (0, i._registerComponent)(new a.wA('analytics-internal', e, 'PRIVATE')),
                        (0, i.registerVersion)(en, tn),
                        (0, i.registerVersion)(en, tn, 'esm2017');
                    }
                    nn();
                    const rn = '@firebase/analytics-compat',
                        on = '0.2.6';
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class sn {
                        constructor(e, t) {
                            (this.app = e), (this._delegate = t);
                        }
                        logEvent(e, t, n) {
                            Zt(this._delegate, e, t, n);
                        }
                        setCurrentScreen(e, t) {
                            Qt(this._delegate, e, t);
                        }
                        setUserId(e, t) {
                            Yt(this._delegate, e, t);
                        }
                        setUserProperties(e, t) {
                            Xt(this._delegate, e, t);
                        }
                        setAnalyticsCollectionEnabled(e) {
                            Jt(this._delegate, e);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    var an;
                    (function(e) {
                        (e['ADD_SHIPPING_INFO'] = 'add_shipping_info'),
                        (e['ADD_PAYMENT_INFO'] = 'add_payment_info'),
                        (e['ADD_TO_CART'] = 'add_to_cart'),
                        (e['ADD_TO_WISHLIST'] = 'add_to_wishlist'),
                        (e['BEGIN_CHECKOUT'] = 'begin_checkout'),
                        (e['CHECKOUT_PROGRESS'] = 'checkout_progress'),
                        (e['EXCEPTION'] = 'exception'),
                        (e['GENERATE_LEAD'] = 'generate_lead'),
                        (e['LOGIN'] = 'login'),
                        (e['PAGE_VIEW'] = 'page_view'),
                        (e['PURCHASE'] = 'purchase'),
                        (e['REFUND'] = 'refund'),
                        (e['REMOVE_FROM_CART'] = 'remove_from_cart'),
                        (e['SCREEN_VIEW'] = 'screen_view'),
                        (e['SEARCH'] = 'search'),
                        (e['SELECT_CONTENT'] = 'select_content'),
                        (e['SELECT_ITEM'] = 'select_item'),
                        (e['SELECT_PROMOTION'] = 'select_promotion'),
                        (e['SET_CHECKOUT_OPTION'] = 'set_checkout_option'),
                        (e['SHARE'] = 'share'),
                        (e['SIGN_UP'] = 'sign_up'),
                        (e['TIMING_COMPLETE'] = 'timing_complete'),
                        (e['VIEW_CART'] = 'view_cart'),
                        (e['VIEW_ITEM'] = 'view_item'),
                        (e['VIEW_ITEM_LIST'] = 'view_item_list'),
                        (e['VIEW_PROMOTION'] = 'view_promotion'),
                        (e['VIEW_SEARCH_RESULTS'] = 'view_search_results');
                    })(an || (an = {}));
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const un = e => {
                        const t = e.getProvider('app-compat').getImmediate(),
                            n = e.getProvider('analytics').getImmediate();
                        return new sn(t, n);
                    };

                    function cn() {
                        const e = { Analytics: sn, settings: Gt, isSupported: Kt, EventName: an };
                        r.Z.INTERNAL.registerComponent(new a.wA('analytics-compat', un, 'PUBLIC').setServiceProps(e).setMultipleInstances(!0));
                    }
                    cn(), r.Z.registerVersion(rn, on);
                },
                44866: (e, t, n) => {
                    'use strict';
                    n.d(t, { Z: () => r.Z });
                    var r = n(98180),
                        i = 'firebase',
                        o = '9.23.0';
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    r.Z.registerVersion(i, o, 'app-compat');
                },
                87481: (e, t, n) => {
                    'use strict';
                    var r = n(98180),
                        i = n(74444),
                        o = n(25816);

                    function s(e, t) {
                        var n = {};
                        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
                        if (null != e && 'function' === typeof Object.getOwnPropertySymbols) {
                            var i = 0;
                            for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
                                t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
                        }
                        return n;
                    }
                    Object.create;
                    Object.create;
                    var a = n(53333),
                        u = n(8463);
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const c = {
                            FACEBOOK: 'facebook.com',
                            GITHUB: 'github.com',
                            GOOGLE: 'google.com',
                            PASSWORD: 'password',
                            PHONE: 'phone',
                            TWITTER: 'twitter.com'
                        },
                        l = {
                            EMAIL_SIGNIN: 'EMAIL_SIGNIN',
                            PASSWORD_RESET: 'PASSWORD_RESET',
                            RECOVER_EMAIL: 'RECOVER_EMAIL',
                            REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',
                            VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',
                            VERIFY_EMAIL: 'VERIFY_EMAIL'
                        };
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function h() {
                        return {
                            ['admin-restricted-operation']: 'This operation is restricted to administrators only.',
                            ['argument-error']: '',
                            ['app-not-authorized']: "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
                            ['app-not-installed']: 'The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.',
                            ['captcha-check-failed']: 'The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.',
                            ['code-expired']: 'The SMS code has expired. Please re-send the verification code to try again.',
                            ['cordova-not-ready']: 'Cordova framework is not ready.',
                            ['cors-unsupported']: 'This browser is not supported.',
                            ['credential-already-in-use']: 'This credential is already associated with a different user account.',
                            ['custom-token-mismatch']: 'The custom token corresponds to a different audience.',
                            ['requires-recent-login']: 'This operation is sensitive and requires recent authentication. Log in again before retrying this request.',
                            ['dependent-sdk-initialized-before-auth']: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
                            ['dynamic-link-not-activated']: 'Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.',
                            ['email-change-needs-verification']: 'Multi-factor users must always have a verified email.',
                            ['email-already-in-use']: 'The email address is already in use by another account.',
                            ['emulator-config-failed']: 'Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling "connectAuthEmulator()" sooner.',
                            ['expired-action-code']: 'The action code has expired.',
                            ['cancelled-popup-request']: 'This operation has been cancelled due to another conflicting popup being opened.',
                            ['internal-error']: 'An internal AuthError has occurred.',
                            ['invalid-app-credential']: 'The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.',
                            ['invalid-app-id']: 'The mobile app identifier is not registed for the current project.',
                            ['invalid-user-token']: "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
                            ['invalid-auth-event']: 'An internal AuthError has occurred.',
                            ['invalid-verification-code']: 'The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.',
                            ['invalid-continue-uri']: 'The continue URL provided in the request is invalid.',
                            ['invalid-cordova-configuration']: 'The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.',
                            ['invalid-custom-token']: 'The custom token format is incorrect. Please check the documentation.',
                            ['invalid-dynamic-link-domain']: 'The provided dynamic link domain is not configured or authorized for the current project.',
                            ['invalid-email']: 'The email address is badly formatted.',
                            ['invalid-emulator-scheme']: 'Emulator URL must start with a valid scheme (http:// or https://).',
                            ['invalid-api-key']: 'Your API key is invalid, please check you have copied it correctly.',
                            ['invalid-cert-hash']: 'The SHA-1 certificate hash provided is invalid.',
                            ['invalid-credential']: 'The supplied auth credential is malformed or has expired.',
                            ['invalid-message-payload']: 'The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.',
                            ['invalid-multi-factor-session']: 'The request does not contain a valid proof of first factor successful sign-in.',
                            ['invalid-oauth-provider']: 'EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.',
                            ['invalid-oauth-client-id']: 'The OAuth client ID provided is either invalid or does not match the specified API key.',
                            ['unauthorized-domain']: 'This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.',
                            ['invalid-action-code']: 'The action code is invalid. This can happen if the code is malformed, expired, or has already been used.',
                            ['wrong-password']: 'The password is invalid or the user does not have a password.',
                            ['invalid-persistence-type']: 'The specified persistence type is invalid. It can only be local, session or none.',
                            ['invalid-phone-number']: 'The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].',
                            ['invalid-provider-id']: 'The specified provider ID is invalid.',
                            ['invalid-recipient-email']: 'The email corresponding to this action failed to send as the provided recipient email address is invalid.',
                            ['invalid-sender']: 'The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.',
                            ['invalid-verification-id']: 'The verification ID used to create the phone auth credential is invalid.',
                            ['invalid-tenant-id']: "The Auth instance's tenant ID is invalid.",
                            ['login-blocked']: 'Login blocked by user-provided method: {$originalMessage}',
                            ['missing-android-pkg-name']: 'An Android Package Name must be provided if the Android App is required to be installed.',
                            ['auth-domain-config-required']: 'Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.',
                            ['missing-app-credential']: 'The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.',
                            ['missing-verification-code']: 'The phone auth credential was created with an empty SMS verification code.',
                            ['missing-continue-uri']: 'A continue URL must be provided in the request.',
                            ['missing-iframe-start']: 'An internal AuthError has occurred.',
                            ['missing-ios-bundle-id']: 'An iOS Bundle ID must be provided if an App Store ID is provided.',
                            ['missing-or-invalid-nonce']: 'The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.',
                            ['missing-password']: 'A non-empty password must be provided',
                            ['missing-multi-factor-info']: 'No second factor identifier is provided.',
                            ['missing-multi-factor-session']: 'The request is missing proof of first factor successful sign-in.',
                            ['missing-phone-number']: 'To send verification codes, provide a phone number for the recipient.',
                            ['missing-verification-id']: 'The phone auth credential was created with an empty verification ID.',
                            ['app-deleted']: 'This instance of FirebaseApp has been deleted.',
                            ['multi-factor-info-not-found']: 'The user does not have a second factor matching the identifier provided.',
                            ['multi-factor-auth-required']: 'Proof of ownership of a second factor is required to complete sign-in.',
                            ['account-exists-with-different-credential']: 'An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.',
                            ['network-request-failed']: 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',
                            ['no-auth-event']: 'An internal AuthError has occurred.',
                            ['no-such-provider']: 'User was not linked to an account with the given provider.',
                            ['null-user']: 'A null user object was provided as the argument for an operation which requires a non-null user object.',
                            ['operation-not-allowed']: 'The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.',
                            ['operation-not-supported-in-this-environment']: 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
                            ['popup-blocked']: 'Unable to establish a connection with the popup. It may have been blocked by the browser.',
                            ['popup-closed-by-user']: 'The popup has been closed by the user before finalizing the operation.',
                            ['provider-already-linked']: 'User can only be linked to one identity for the given provider.',
                            ['quota-exceeded']: "The project's quota for this operation has been exceeded.",
                            ['redirect-cancelled-by-user']: 'The redirect operation has been cancelled by the user before finalizing.',
                            ['redirect-operation-pending']: 'A redirect sign-in operation is already pending.',
                            ['rejected-credential']: 'The request contains malformed or mismatching credentials.',
                            ['second-factor-already-in-use']: 'The second factor is already enrolled on this account.',
                            ['maximum-second-factor-count-exceeded']: 'The maximum allowed number of second factors on a user has been exceeded.',
                            ['tenant-id-mismatch']: "The provided tenant ID does not match the Auth instance's tenant ID",
                            ['timeout']: 'The operation has timed out.',
                            ['user-token-expired']: "The user's credential is no longer valid. The user must sign in again.",
                            ['too-many-requests']: 'We have blocked all requests from this device due to unusual activity. Try again later.',
                            ['unauthorized-continue-uri']: 'The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.',
                            ['unsupported-first-factor']: 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',
                            ['unsupported-persistence-type']: 'The current environment does not support the specified persistence type.',
                            ['unsupported-tenant-operation']: 'This operation is not supported in a multi-tenant context.',
                            ['unverified-email']: 'The operation requires a verified email.',
                            ['user-cancelled']: 'The user did not grant your application the permissions it requested.',
                            ['user-not-found']: 'There is no user record corresponding to this identifier. The user may have been deleted.',
                            ['user-disabled']: 'The user account has been disabled by an administrator.',
                            ['user-mismatch']: 'The supplied credentials do not correspond to the previously signed in user.',
                            ['user-signed-out']: '',
                            ['weak-password']: 'The password must be 6 characters long or more.',
                            ['web-storage-unsupported']: 'This browser is not supported or 3rd party cookies and data may be disabled.',
                            ['already-initialized']: 'initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.',
                            ['missing-recaptcha-token']: 'The reCAPTCHA token is missing when sending request to the backend.',
                            ['invalid-recaptcha-token']: 'The reCAPTCHA token is invalid when sending request to the backend.',
                            ['invalid-recaptcha-action']: 'The reCAPTCHA action is invalid when sending request to the backend.',
                            ['recaptcha-not-enabled']: 'reCAPTCHA Enterprise integration is not enabled for this project.',
                            ['missing-client-type']: 'The reCAPTCHA client type is missing when sending request to the backend.',
                            ['missing-recaptcha-version']: 'The reCAPTCHA version is missing when sending request to the backend.',
                            ['invalid-req-type']: 'Invalid request parameters.',
                            ['invalid-recaptcha-version']: 'The reCAPTCHA version is invalid when sending request to the backend.'
                        };
                    }

                    function f() {
                        return {
                            ['dependent-sdk-initialized-before-auth']: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.'
                        };
                    }
                    const d = h,
                        p = f,
                        g = new i.LL('auth', 'Firebase', f()),
                        m = new a.Yd('@firebase/auth');

                    function v(e, ...t) {
                        m.logLevel <= a['in'].WARN && m.warn(`Auth (${o.SDK_VERSION}): ${e}`, ...t);
                    }

                    function y(e, ...t) {
                        m.logLevel <= a['in'].ERROR && m.error(`Auth (${o.SDK_VERSION}): ${e}`, ...t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function w(e, ...t) {
                        throw E(e, ...t);
                    }

                    function b(e, ...t) {
                        return E(e, ...t);
                    }

                    function _(e, t, n) {
                        const r = Object.assign(Object.assign({}, p()), {
                                [t]: n }),
                            o = new i.LL('auth', 'Firebase', r);
                        return o.create(t, { appName: e.name });
                    }

                    function I(e, t, n) {
                        const r = n;
                        if (!(t instanceof r))
                            throw (
                                (r.name !== t.constructor.name && w(e, 'argument-error'),
                                    _(
                                        e,
                                        'argument-error',
                                        `Type of ${t.constructor.name} does not match expected instance.Did you pass a reference from a different Auth SDK?`
                                    ))
                            );
                    }

                    function E(e, ...t) {
                        if ('string' !== typeof e) {
                            const n = t[0],
                                r = [...t.slice(1)];
                            return r[0] && (r[0].appName = e.name), e._errorFactory.create(n, ...r);
                        }
                        return g.create(e, ...t);
                    }

                    function S(e, t, ...n) {
                        if (!e) throw E(t, ...n);
                    }

                    function T(e) {
                        const t = 'INTERNAL ASSERTION FAILED: ' + e;
                        throw (y(t), new Error(t));
                    }

                    function A(e, t) {
                        e || T(t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function x() {
                        var e;
                        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.href)) || '';
                    }

                    function C() {
                        return 'http:' === k() || 'https:' === k();
                    }

                    function k() {
                        var e;
                        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.protocol)) || null;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function O() {
                        return (!(
                            'undefined' !== typeof navigator &&
                            navigator &&
                            'onLine' in navigator &&
                            'boolean' === typeof navigator.onLine &&
                            (C() || (0, i.ru)() || 'connection' in navigator)
                        ) || navigator.onLine);
                    }

                    function N() {
                        if ('undefined' === typeof navigator) return null;
                        const e = navigator;
                        return (e.languages && e.languages[0]) || e.language || null;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class R {
                        constructor(e, t) {
                            (this.shortDelay = e),
                            (this.longDelay = t),
                            A(t > e, 'Short delay should be less than long delay!'),
                                (this.isMobile = (0, i.uI)() || (0, i.b$)());
                        }
                        get() {
                            return O() ? (this.isMobile ? this.longDelay : this.shortDelay) : Math.min(5e3, this.shortDelay);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function P(e, t) {
                        A(e.emulator, 'Emulator should always be set here');
                        const { url: n } = e.emulator;
                        return t ? `${n}${t.startsWith('/') ? t.slice(1) : t}` : n;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class D {
                        static initialize(e, t, n) {
                            (this.fetchImpl = e), t && (this.headersImpl = t), n && (this.responseImpl = n);
                        }
                        static fetch() {
                            return this.fetchImpl ?
                                this.fetchImpl :
                                'undefined' !== typeof self && 'fetch' in self ?
                                self.fetch :
                                void T('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
                        }
                        static headers() {
                            return this.headersImpl ?
                                this.headersImpl :
                                'undefined' !== typeof self && 'Headers' in self ?
                                self.Headers :
                                void T('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
                        }
                        static response() {
                            return this.responseImpl ?
                                this.responseImpl :
                                'undefined' !== typeof self && 'Response' in self ?
                                self.Response :
                                void T('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const L = {
                            ['CREDENTIAL_MISMATCH']: 'custom-token-mismatch',
                            ['MISSING_CUSTOM_TOKEN']: 'internal-error',
                            ['INVALID_IDENTIFIER']: 'invalid-email',
                            ['MISSING_CONTINUE_URI']: 'internal-error',
                            ['INVALID_PASSWORD']: 'wrong-password',
                            ['MISSING_PASSWORD']: 'missing-password',
                            ['EMAIL_EXISTS']: 'email-already-in-use',
                            ['PASSWORD_LOGIN_DISABLED']: 'operation-not-allowed',
                            ['INVALID_IDP_RESPONSE']: 'invalid-credential',
                            ['INVALID_PENDING_TOKEN']: 'invalid-credential',
                            ['FEDERATED_USER_ID_ALREADY_LINKED']: 'credential-already-in-use',
                            ['MISSING_REQ_TYPE']: 'internal-error',
                            ['EMAIL_NOT_FOUND']: 'user-not-found',
                            ['RESET_PASSWORD_EXCEED_LIMIT']: 'too-many-requests',
                            ['EXPIRED_OOB_CODE']: 'expired-action-code',
                            ['INVALID_OOB_CODE']: 'invalid-action-code',
                            ['MISSING_OOB_CODE']: 'internal-error',
                            ['CREDENTIAL_TOO_OLD_LOGIN_AGAIN']: 'requires-recent-login',
                            ['INVALID_ID_TOKEN']: 'invalid-user-token',
                            ['TOKEN_EXPIRED']: 'user-token-expired',
                            ['USER_NOT_FOUND']: 'user-token-expired',
                            ['TOO_MANY_ATTEMPTS_TRY_LATER']: 'too-many-requests',
                            ['INVALID_CODE']: 'invalid-verification-code',
                            ['INVALID_SESSION_INFO']: 'invalid-verification-id',
                            ['INVALID_TEMPORARY_PROOF']: 'invalid-credential',
                            ['MISSING_SESSION_INFO']: 'missing-verification-id',
                            ['SESSION_EXPIRED']: 'code-expired',
                            ['MISSING_ANDROID_PACKAGE_NAME']: 'missing-android-pkg-name',
                            ['UNAUTHORIZED_DOMAIN']: 'unauthorized-continue-uri',
                            ['INVALID_OAUTH_CLIENT_ID']: 'invalid-oauth-client-id',
                            ['ADMIN_ONLY_OPERATION']: 'admin-restricted-operation',
                            ['INVALID_MFA_PENDING_CREDENTIAL']: 'invalid-multi-factor-session',
                            ['MFA_ENROLLMENT_NOT_FOUND']: 'multi-factor-info-not-found',
                            ['MISSING_MFA_ENROLLMENT_ID']: 'missing-multi-factor-info',
                            ['MISSING_MFA_PENDING_CREDENTIAL']: 'missing-multi-factor-session',
                            ['SECOND_FACTOR_EXISTS']: 'second-factor-already-in-use',
                            ['SECOND_FACTOR_LIMIT_EXCEEDED']: 'maximum-second-factor-count-exceeded',
                            ['BLOCKING_FUNCTION_ERROR_RESPONSE']: 'internal-error',
                            ['RECAPTCHA_NOT_ENABLED']: 'recaptcha-not-enabled',
                            ['MISSING_RECAPTCHA_TOKEN']: 'missing-recaptcha-token',
                            ['INVALID_RECAPTCHA_TOKEN']: 'invalid-recaptcha-token',
                            ['INVALID_RECAPTCHA_ACTION']: 'invalid-recaptcha-action',
                            ['MISSING_CLIENT_TYPE']: 'missing-client-type',
                            ['MISSING_RECAPTCHA_VERSION']: 'missing-recaptcha-version',
                            ['INVALID_RECAPTCHA_VERSION']: 'invalid-recaptcha-version',
                            ['INVALID_REQ_TYPE']: 'invalid-req-type'
                        },
                        j = new R(3e4, 6e4);
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function M(e, t) {
                        return e.tenantId && !t.tenantId ? Object.assign(Object.assign({}, t), { tenantId: e.tenantId }) : t;
                    }
                    async function F(e, t, n, r, o = {}) {
                        return U(e, o, async() => {
                            let o = {},
                                s = {};
                            r && ('GET' === t ? (s = r) : (o = { body: JSON.stringify(r) }));
                            const a = (0, i.xO)(Object.assign({ key: e.config.apiKey }, s)).slice(1),
                                u = await e._getAdditionalHeaders();
                            return (
                                (u['Content-Type'] = 'application/json'),
                                e.languageCode && (u['X-Firebase-Locale'] = e.languageCode),
                                D.fetch()(B(e, e.config.apiHost, n, a), Object.assign({ method: t, headers: u, referrerPolicy: 'no-referrer' }, o))
                            );
                        });
                    }
                    async function U(e, t, n) {
                        e._canInitEmulator = !1;
                        const r = Object.assign(Object.assign({}, L), t);
                        try {
                            const t = new $(e),
                                i = await Promise.race([n(), t.promise]);
                            t.clearNetworkTimeout();
                            const o = await i.json();
                            if ('needConfirmation' in o) throw q(e, 'account-exists-with-different-credential', o);
                            if (i.ok && !('errorMessage' in o)) return o; {
                                const t = i.ok ? o.errorMessage : o.error.message,
                                    [n, s] = t.split(' : ');
                                if ('FEDERATED_USER_ID_ALREADY_LINKED' === n) throw q(e, 'credential-already-in-use', o);
                                if ('EMAIL_EXISTS' === n) throw q(e, 'email-already-in-use', o);
                                if ('USER_DISABLED' === n) throw q(e, 'user-disabled', o);
                                const a = r[n] || n.toLowerCase().replace(/[_\s]+/g, '-');
                                if (s) throw _(e, a, s);
                                w(e, a);
                            }
                        } catch (o) {
                            if (o instanceof i.ZR) throw o;
                            w(e, 'network-request-failed', { message: String(o) });
                        }
                    }
                    async function V(e, t, n, r, i = {}) {
                        const o = await F(e, t, n, r, i);
                        return 'mfaPendingCredential' in o && w(e, 'multi-factor-auth-required', { _serverResponse: o }), o;
                    }

                    function B(e, t, n, r) {
                        const i = `${t}${n}?${r}`;
                        return e.config.emulator ? P(e.config, i) : `${e.config.apiScheme}://${i}`;
                    }
                    class $ {
                        constructor(e) {
                            (this.auth = e),
                            (this.timer = null),
                            (this.promise = new Promise((e, t) => {
                                this.timer = setTimeout(() => t(b(this.auth, 'network-request-failed')), j.get());
                            }));
                        }
                        clearNetworkTimeout() {
                            clearTimeout(this.timer);
                        }
                    }

                    function q(e, t, n) {
                        const r = { appName: e.name };
                        n.email && (r.email = n.email), n.phoneNumber && (r.phoneNumber = n.phoneNumber);
                        const i = b(e, t, r);
                        return (i.customData._tokenResponse = n), i;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function z(e, t) {
                        return F(e, 'POST', '/v1/accounts:delete', t);
                    }
                    async function G(e, t) {
                        return F(e, 'POST', '/v1/accounts:update', t);
                    }
                    async function W(e, t) {
                        return F(e, 'POST', '/v1/accounts:lookup', t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function H(e) {
                        if (e)
                            try {
                                const t = new Date(Number(e));
                                if (!isNaN(t.getTime())) return t.toUTCString();
                            } catch (t) {}
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function K(e, t = !1) {
                        const n = (0, i.m9)(e),
                            r = await n.getIdToken(t),
                            o = Y(r);
                        S(o && o.exp && o.auth_time && o.iat, n.auth, 'internal-error');
                        const s = 'object' === typeof o.firebase ? o.firebase : void 0,
                            a = null === s || void 0 === s ? void 0 : s['sign_in_provider'];
                        return {
                            claims: o,
                            token: r,
                            authTime: H(Q(o.auth_time)),
                            issuedAtTime: H(Q(o.iat)),
                            expirationTime: H(Q(o.exp)),
                            signInProvider: a || null,
                            signInSecondFactor: (null === s || void 0 === s ? void 0 : s['sign_in_second_factor']) || null
                        };
                    }

                    function Q(e) {
                        return 1e3 * Number(e);
                    }

                    function Y(e) {
                        const [t, n, r] = e.split('.');
                        if (void 0 === t || void 0 === n || void 0 === r) return y('JWT malformed, contained fewer than 3 sections'), null;
                        try {
                            const e = (0, i.tV)(n);
                            return e ? JSON.parse(e) : (y('Failed to decode base64 JWT payload'), null);
                        } catch (o) {
                            return y('Caught error parsing JWT payload as JSON', null === o || void 0 === o ? void 0 : o.toString()), null;
                        }
                    }

                    function X(e) {
                        const t = Y(e);
                        return (
                            S(t, 'internal-error'),
                            S('undefined' !== typeof t.exp, 'internal-error'),
                            S('undefined' !== typeof t.iat, 'internal-error'),
                            Number(t.exp) - Number(t.iat)
                        );
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function J(e, t, n = !1) {
                        if (n) return t;
                        try {
                            return await t;
                        } catch (r) {
                            throw (r instanceof i.ZR && Z(r) && e.auth.currentUser === e && (await e.auth.signOut()), r);
                        }
                    }

                    function Z({ code: e }) {
                        return 'auth/user-disabled' === e || 'auth/user-token-expired' === e;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class ee {
                        constructor(e) {
                            (this.user = e), (this.isRunning = !1), (this.timerId = null), (this.errorBackoff = 3e4);
                        }
                        _start() {
                            this.isRunning || ((this.isRunning = !0), this.schedule());
                        }
                        _stop() {
                            this.isRunning && ((this.isRunning = !1), null !== this.timerId && clearTimeout(this.timerId));
                        }
                        getInterval(e) {
                            var t;
                            if (e) {
                                const e = this.errorBackoff;
                                return (this.errorBackoff = Math.min(2 * this.errorBackoff, 96e4)), e;
                            } {
                                this.errorBackoff = 3e4;
                                const e = null !== (t = this.user.stsTokenManager.expirationTime) && void 0 !== t ? t : 0,
                                    n = e - Date.now() - 3e5;
                                return Math.max(0, n);
                            }
                        }
                        schedule(e = !1) {
                            if (!this.isRunning) return;
                            const t = this.getInterval(e);
                            this.timerId = setTimeout(async() => {
                                await this.iteration();
                            }, t);
                        }
                        async iteration() {
                            try {
                                await this.user.getIdToken(!0);
                            } catch (e) {
                                return void('auth/network-request-failed' === (null === e || void 0 === e ? void 0 : e.code) && this.schedule(!0));
                            }
                            this.schedule();
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class te {
                        constructor(e, t) {
                            (this.createdAt = e), (this.lastLoginAt = t), this._initializeTime();
                        }
                        _initializeTime() {
                            (this.lastSignInTime = H(this.lastLoginAt)), (this.creationTime = H(this.createdAt));
                        }
                        _copy(e) {
                            (this.createdAt = e.createdAt), (this.lastLoginAt = e.lastLoginAt), this._initializeTime();
                        }
                        toJSON() {
                            return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
                        }
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function ne(e) {
                        var t;
                        const n = e.auth,
                            r = await e.getIdToken(),
                            i = await J(e, W(n, { idToken: r }));
                        S(null === i || void 0 === i ? void 0 : i.users.length, n, 'internal-error');
                        const o = i.users[0];
                        e._notifyReloadListener(o);
                        const s = (null === (t = o.providerUserInfo) || void 0 === t ? void 0 : t.length) ? oe(o.providerUserInfo) : [],
                            a = ie(e.providerData, s),
                            u = e.isAnonymous,
                            c = !(e.email && o.passwordHash) && !(null === a || void 0 === a ? void 0 : a.length),
                            l = !!u && c,
                            h = {
                                uid: o.localId,
                                displayName: o.displayName || null,
                                photoURL: o.photoUrl || null,
                                email: o.email || null,
                                emailVerified: o.emailVerified || !1,
                                phoneNumber: o.phoneNumber || null,
                                tenantId: o.tenantId || null,
                                providerData: a,
                                metadata: new te(o.createdAt, o.lastLoginAt),
                                isAnonymous: l
                            };
                        Object.assign(e, h);
                    }
                    async function re(e) {
                        const t = (0, i.m9)(e);
                        await ne(t), await t.auth._persistUserIfCurrent(t), t.auth._notifyListenersIfCurrent(t);
                    }

                    function ie(e, t) {
                        const n = e.filter(e => !t.some(t => t.providerId === e.providerId));
                        return [...n, ...t];
                    }

                    function oe(e) {
                        return e.map(e => {
                            var { providerId: t } = e,
                            n = s(e, ['providerId']);
                            return {
                                providerId: t,
                                uid: n.rawId || '',
                                displayName: n.displayName || null,
                                email: n.email || null,
                                phoneNumber: n.phoneNumber || null,
                                photoURL: n.photoUrl || null
                            };
                        });
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function se(e, t) {
                        const n = await U(e, {}, async() => {
                            const n = (0, i.xO)({ grant_type: 'refresh_token', refresh_token: t }).slice(1),
                                { tokenApiHost: r, apiKey: o } = e.config,
                                s = B(e, r, '/v1/token', `key=${o}`),
                                a = await e._getAdditionalHeaders();
                            return (a['Content-Type'] = 'application/x-www-form-urlencoded'), D.fetch()(s, { method: 'POST', headers: a, body: n });
                        });
                        return { accessToken: n.access_token, expiresIn: n.expires_in, refreshToken: n.refresh_token };
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class ae {
                        constructor() {
                            (this.refreshToken = null), (this.accessToken = null), (this.expirationTime = null);
                        }
                        get isExpired() {
                            return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
                        }
                        updateFromServerResponse(e) {
                            S(e.idToken, 'internal-error'),
                                S('undefined' !== typeof e.idToken, 'internal-error'),
                                S('undefined' !== typeof e.refreshToken, 'internal-error');
                            const t = 'expiresIn' in e && 'undefined' !== typeof e.expiresIn ? Number(e.expiresIn) : X(e.idToken);
                            this.updateTokensAndExpiration(e.idToken, e.refreshToken, t);
                        }
                        async getToken(e, t = !1) {
                            return (
                                S(!this.accessToken || this.refreshToken, e, 'user-token-expired'),
                                t || !this.accessToken || this.isExpired ?
                                this.refreshToken ?
                                (await this.refresh(e, this.refreshToken), this.accessToken) :
                                null :
                                this.accessToken
                            );
                        }
                        clearRefreshToken() {
                            this.refreshToken = null;
                        }
                        async refresh(e, t) {
                            const { accessToken: n, refreshToken: r, expiresIn: i } = await se(e, t);
                            this.updateTokensAndExpiration(n, r, Number(i));
                        }
                        updateTokensAndExpiration(e, t, n) {
                            (this.refreshToken = t || null), (this.accessToken = e || null), (this.expirationTime = Date.now() + 1e3 * n);
                        }
                        static fromJSON(e, t) {
                            const { refreshToken: n, accessToken: r, expirationTime: i } = t,
                            o = new ae();
                            return (
                                n && (S('string' === typeof n, 'internal-error', { appName: e }), (o.refreshToken = n)),
                                r && (S('string' === typeof r, 'internal-error', { appName: e }), (o.accessToken = r)),
                                i && (S('number' === typeof i, 'internal-error', { appName: e }), (o.expirationTime = i)),
                                o
                            );
                        }
                        toJSON() {
                            return { refreshToken: this.refreshToken, accessToken: this.accessToken, expirationTime: this.expirationTime };
                        }
                        _assign(e) {
                            (this.accessToken = e.accessToken), (this.refreshToken = e.refreshToken), (this.expirationTime = e.expirationTime);
                        }
                        _clone() {
                            return Object.assign(new ae(), this.toJSON());
                        }
                        _performRefresh() {
                            return T('not implemented');
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function ue(e, t) {
                        S('string' === typeof e || 'undefined' === typeof e, 'internal-error', { appName: t });
                    }
                    class ce {
                        constructor(e) {
                            var { uid: t, auth: n, stsTokenManager: r } = e,
                            i = s(e, ['uid', 'auth', 'stsTokenManager']);
                            (this.providerId = 'firebase'),
                            (this.proactiveRefresh = new ee(this)),
                            (this.reloadUserInfo = null),
                            (this.reloadListener = null),
                            (this.uid = t),
                            (this.auth = n),
                            (this.stsTokenManager = r),
                            (this.accessToken = r.accessToken),
                            (this.displayName = i.displayName || null),
                            (this.email = i.email || null),
                            (this.emailVerified = i.emailVerified || !1),
                            (this.phoneNumber = i.phoneNumber || null),
                            (this.photoURL = i.photoURL || null),
                            (this.isAnonymous = i.isAnonymous || !1),
                            (this.tenantId = i.tenantId || null),
                            (this.providerData = i.providerData ? [...i.providerData] : []),
                            (this.metadata = new te(i.createdAt || void 0, i.lastLoginAt || void 0));
                        }
                        async getIdToken(e) {
                            const t = await J(this, this.stsTokenManager.getToken(this.auth, e));
                            return (
                                S(t, this.auth, 'internal-error'),
                                this.accessToken !== t &&
                                ((this.accessToken = t), await this.auth._persistUserIfCurrent(this), this.auth._notifyListenersIfCurrent(this)),
                                t
                            );
                        }
                        getIdTokenResult(e) {
                            return K(this, e);
                        }
                        reload() {
                            return re(this);
                        }
                        _assign(e) {
                            this !== e &&
                                (S(this.uid === e.uid, this.auth, 'internal-error'),
                                    (this.displayName = e.displayName),
                                    (this.photoURL = e.photoURL),
                                    (this.email = e.email),
                                    (this.emailVerified = e.emailVerified),
                                    (this.phoneNumber = e.phoneNumber),
                                    (this.isAnonymous = e.isAnonymous),
                                    (this.tenantId = e.tenantId),
                                    (this.providerData = e.providerData.map(e => Object.assign({}, e))),
                                    this.metadata._copy(e.metadata),
                                    this.stsTokenManager._assign(e.stsTokenManager));
                        }
                        _clone(e) {
                            const t = new ce(Object.assign(Object.assign({}, this), { auth: e, stsTokenManager: this.stsTokenManager._clone() }));
                            return t.metadata._copy(this.metadata), t;
                        }
                        _onReload(e) {
                            S(!this.reloadListener, this.auth, 'internal-error'),
                                (this.reloadListener = e),
                                this.reloadUserInfo && (this._notifyReloadListener(this.reloadUserInfo), (this.reloadUserInfo = null));
                        }
                        _notifyReloadListener(e) {
                            this.reloadListener ? this.reloadListener(e) : (this.reloadUserInfo = e);
                        }
                        _startProactiveRefresh() {
                            this.proactiveRefresh._start();
                        }
                        _stopProactiveRefresh() {
                            this.proactiveRefresh._stop();
                        }
                        async _updateTokensIfNecessary(e, t = !1) {
                            let n = !1;
                            e.idToken && e.idToken !== this.stsTokenManager.accessToken && (this.stsTokenManager.updateFromServerResponse(e), (n = !0)),
                                t && (await ne(this)),
                                await this.auth._persistUserIfCurrent(this),
                                n && this.auth._notifyListenersIfCurrent(this);
                        }
                        async delete() {
                            const e = await this.getIdToken();
                            return await J(this, z(this.auth, { idToken: e })), this.stsTokenManager.clearRefreshToken(), this.auth.signOut();
                        }
                        toJSON() {
                            return Object.assign(
                                Object.assign({
                                        uid: this.uid,
                                        email: this.email || void 0,
                                        emailVerified: this.emailVerified,
                                        displayName: this.displayName || void 0,
                                        isAnonymous: this.isAnonymous,
                                        photoURL: this.photoURL || void 0,
                                        phoneNumber: this.phoneNumber || void 0,
                                        tenantId: this.tenantId || void 0,
                                        providerData: this.providerData.map(e => Object.assign({}, e)),
                                        stsTokenManager: this.stsTokenManager.toJSON(),
                                        _redirectEventId: this._redirectEventId
                                    },
                                    this.metadata.toJSON()
                                ), { apiKey: this.auth.config.apiKey, appName: this.auth.name }
                            );
                        }
                        get refreshToken() {
                            return this.stsTokenManager.refreshToken || '';
                        }
                        static _fromJSON(e, t) {
                            var n, r, i, o, s, a, u, c;
                            const l = null !== (n = t.displayName) && void 0 !== n ? n : void 0,
                                h = null !== (r = t.email) && void 0 !== r ? r : void 0,
                                f = null !== (i = t.phoneNumber) && void 0 !== i ? i : void 0,
                                d = null !== (o = t.photoURL) && void 0 !== o ? o : void 0,
                                p = null !== (s = t.tenantId) && void 0 !== s ? s : void 0,
                                g = null !== (a = t._redirectEventId) && void 0 !== a ? a : void 0,
                                m = null !== (u = t.createdAt) && void 0 !== u ? u : void 0,
                                v = null !== (c = t.lastLoginAt) && void 0 !== c ? c : void 0,
                                { uid: y, emailVerified: w, isAnonymous: b, providerData: _, stsTokenManager: I } = t;
                            S(y && I, e, 'internal-error');
                            const E = ae.fromJSON(this.name, I);
                            S('string' === typeof y, e, 'internal-error'),
                                ue(l, e.name),
                                ue(h, e.name),
                                S('boolean' === typeof w, e, 'internal-error'),
                                S('boolean' === typeof b, e, 'internal-error'),
                                ue(f, e.name),
                                ue(d, e.name),
                                ue(p, e.name),
                                ue(g, e.name),
                                ue(m, e.name),
                                ue(v, e.name);
                            const T = new ce({
                                uid: y,
                                auth: e,
                                email: h,
                                emailVerified: w,
                                displayName: l,
                                isAnonymous: b,
                                photoURL: d,
                                phoneNumber: f,
                                tenantId: p,
                                stsTokenManager: E,
                                createdAt: m,
                                lastLoginAt: v
                            });
                            return _ && Array.isArray(_) && (T.providerData = _.map(e => Object.assign({}, e))), g && (T._redirectEventId = g), T;
                        }
                        static async _fromIdTokenResponse(e, t, n = !1) {
                            const r = new ae();
                            r.updateFromServerResponse(t);
                            const i = new ce({ uid: t.localId, auth: e, stsTokenManager: r, isAnonymous: n });
                            return await ne(i), i;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const le = new Map();

                    function he(e) {
                        A(e instanceof Function, 'Expected a class definition');
                        let t = le.get(e);
                        return t ? (A(t instanceof e, 'Instance stored in cache mismatched with class'), t) : ((t = new e()), le.set(e, t), t);
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class fe {
                        constructor() {
                            (this.type = 'NONE'), (this.storage = {});
                        }
                        async _isAvailable() {
                            return !0;
                        }
                        async _set(e, t) {
                            this.storage[e] = t;
                        }
                        async _get(e) {
                            const t = this.storage[e];
                            return void 0 === t ? null : t;
                        }
                        async _remove(e) {
                            delete this.storage[e];
                        }
                        _addListener(e, t) {}
                        _removeListener(e, t) {}
                    }
                    fe.type = 'NONE';
                    const de = fe;
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function pe(e, t, n) {
                        return `firebase:${e}:${t}:${n}`;
                    }
                    class ge {
                        constructor(e, t, n) {
                            (this.persistence = e), (this.auth = t), (this.userKey = n);
                            const { config: r, name: i } = this.auth;
                            (this.fullUserKey = pe(this.userKey, r.apiKey, i)),
                            (this.fullPersistenceKey = pe('persistence', r.apiKey, i)),
                            (this.boundEventHandler = t._onStorageEvent.bind(t)),
                            this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
                        }
                        setCurrentUser(e) {
                            return this.persistence._set(this.fullUserKey, e.toJSON());
                        }
                        async getCurrentUser() {
                            const e = await this.persistence._get(this.fullUserKey);
                            return e ? ce._fromJSON(this.auth, e) : null;
                        }
                        removeCurrentUser() {
                            return this.persistence._remove(this.fullUserKey);
                        }
                        savePersistenceForRedirect() {
                            return this.persistence._set(this.fullPersistenceKey, this.persistence.type);
                        }
                        async setPersistence(e) {
                            if (this.persistence === e) return;
                            const t = await this.getCurrentUser();
                            return await this.removeCurrentUser(), (this.persistence = e), t ? this.setCurrentUser(t) : void 0;
                        }
                        delete() {
                            this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);
                        }
                        static async create(e, t, n = 'authUser') {
                            if (!t.length) return new ge(he(de), e, n);
                            const r = (
                                await Promise.all(
                                    t.map(async e => {
                                        if (await e._isAvailable()) return e;
                                    })
                                )
                            ).filter(e => e);
                            let i = r[0] || he(de);
                            const o = pe(n, e.config.apiKey, e.name);
                            let s = null;
                            for (const c of t)
                                try {
                                    const t = await c._get(o);
                                    if (t) {
                                        const n = ce._fromJSON(e, t);
                                        c !== i && (s = n), (i = c);
                                        break;
                                    }
                                } catch (u) {}
                            const a = r.filter(e => e._shouldAllowMigration);
                            return i._shouldAllowMigration && a.length ?
                                ((i = a[0]),
                                    s && (await i._set(o, s.toJSON())),
                                    await Promise.all(
                                        t.map(async e => {
                                            if (e !== i)
                                                try {
                                                    await e._remove(o);
                                                } catch (u) {}
                                        })
                                    ),
                                    new ge(i, e, n)) :
                                new ge(i, e, n);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function me(e) {
                        const t = e.toLowerCase();
                        if (t.includes('opera/') || t.includes('opr/') || t.includes('opios/')) return 'Opera';
                        if (be(t)) return 'IEMobile';
                        if (t.includes('msie') || t.includes('trident/')) return 'IE';
                        if (t.includes('edge/')) return 'Edge';
                        if (ve(t)) return 'Firefox';
                        if (t.includes('silk/')) return 'Silk';
                        if (Ie(t)) return 'Blackberry';
                        if (Ee(t)) return 'Webos';
                        if (ye(t)) return 'Safari';
                        if ((t.includes('chrome/') || we(t)) && !t.includes('edge/')) return 'Chrome';
                        if (_e(t)) return 'Android'; {
                            const t = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,
                                n = e.match(t);
                            if (2 === (null === n || void 0 === n ? void 0 : n.length)) return n[1];
                        }
                        return 'Other';
                    }

                    function ve(e = (0, i.z$)()) {
                        return /firefox\//i.test(e);
                    }

                    function ye(e = (0, i.z$)()) {
                        const t = e.toLowerCase();
                        return t.includes('safari/') && !t.includes('chrome/') && !t.includes('crios/') && !t.includes('android');
                    }

                    function we(e = (0, i.z$)()) {
                        return /crios\//i.test(e);
                    }

                    function be(e = (0, i.z$)()) {
                        return /iemobile/i.test(e);
                    }

                    function _e(e = (0, i.z$)()) {
                        return /android/i.test(e);
                    }

                    function Ie(e = (0, i.z$)()) {
                        return /blackberry/i.test(e);
                    }

                    function Ee(e = (0, i.z$)()) {
                        return /webos/i.test(e);
                    }

                    function Se(e = (0, i.z$)()) {
                        return /iphone|ipad|ipod/i.test(e) || (/macintosh/i.test(e) && /mobile/i.test(e));
                    }

                    function Te(e = (0, i.z$)()) {
                        return /(iPad|iPhone|iPod).*OS 7_\d/i.test(e) || /(iPad|iPhone|iPod).*OS 8_\d/i.test(e);
                    }

                    function Ae(e = (0, i.z$)()) {
                        var t;
                        return Se(e) && !!(null === (t = window.navigator) || void 0 === t ? void 0 : t.standalone);
                    }

                    function xe() {
                        return (0, i.w1)() && 10 === document.documentMode;
                    }

                    function Ce(e = (0, i.z$)()) {
                        return Se(e) || _e(e) || Ee(e) || Ie(e) || /windows phone/i.test(e) || be(e);
                    }

                    function ke() {
                        try {
                            return !(!window || window === window.top);
                        } catch (e) {
                            return !1;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Oe(e, t = []) {
                        let n;
                        switch (e) {
                            case 'Browser':
                                n = me((0, i.z$)());
                                break;
                            case 'Worker':
                                n = `${me((0, i.z$)())}-${e}`;
                                break;
                            default:
                                n = e;
                        }
                        const r = t.length ? t.join(',') : 'FirebaseCore-web';
                        return `${n}/JsCore/${o.SDK_VERSION}/${r}`;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Ne(e) {
                        return (await F(e, 'GET', '/v1/recaptchaParams')).recaptchaSiteKey || '';
                    }
                    async function Re(e, t) {
                        return F(e, 'GET', '/v2/recaptchaConfig', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Pe(e) {
                        return void 0 !== e && void 0 !== e.getResponse;
                    }

                    function De(e) {
                        return void 0 !== e && void 0 !== e.enterprise;
                    }
                    class Le {
                        constructor(e) {
                            if (((this.siteKey = ''), (this.emailPasswordEnabled = !1), void 0 === e.recaptchaKey)) throw new Error('recaptchaKey undefined');
                            (this.siteKey = e.recaptchaKey.split('/')[3]),
                            (this.emailPasswordEnabled = e.recaptchaEnforcementState.some(
                                e => 'EMAIL_PASSWORD_PROVIDER' === e.provider && 'OFF' !== e.enforcementState
                            ));
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function je() {
                        var e, t;
                        return null !== (t = null === (e = document.getElementsByTagName('head')) || void 0 === e ? void 0 : e[0]) && void 0 !== t ? t : document;
                    }

                    function Me(e) {
                        return new Promise((t, n) => {
                            const r = document.createElement('script');
                            r.setAttribute('src', e),
                                (r.onload = t),
                                (r.onerror = e => {
                                    const t = b('internal-error');
                                    (t.customData = e), n(t);
                                }),
                                (r.type = 'text/javascript'),
                                (r.charset = 'UTF-8'),
                                je().appendChild(r);
                        });
                    }

                    function Fe(e) {
                        return `__${e}${Math.floor(1e6 * Math.random())}`;
                    }
                    const Ue = 'https://www.google.com/recaptcha/enterprise.js?render=',
                        Ve = 'recaptcha-enterprise',
                        Be = 'NO_RECAPTCHA';
                    class $e {
                        constructor(e) {
                            (this.type = Ve), (this.auth = We(e));
                        }
                        async verify(e = 'verify', t = !1) {
                            async function n(e) {
                                if (!t) {
                                    if (null == e.tenantId && null != e._agentRecaptchaConfig) return e._agentRecaptchaConfig.siteKey;
                                    if (null != e.tenantId && void 0 !== e._tenantRecaptchaConfigs[e.tenantId]) return e._tenantRecaptchaConfigs[e.tenantId].siteKey;
                                }
                                return new Promise(async(t, n) => {
                                    Re(e, { clientType: 'CLIENT_TYPE_WEB', version: 'RECAPTCHA_ENTERPRISE' })
                                        .then(r => {
                                            if (void 0 !== r.recaptchaKey) {
                                                const n = new Le(r);
                                                return null == e.tenantId ? (e._agentRecaptchaConfig = n) : (e._tenantRecaptchaConfigs[e.tenantId] = n), t(n.siteKey);
                                            }
                                            n(new Error('recaptcha Enterprise site key undefined'));
                                        })
                                        .catch(e => {
                                            n(e);
                                        });
                                });
                            }

                            function r(t, n, r) {
                                const i = window.grecaptcha;
                                De(i) ?
                                    i.enterprise.ready(() => {
                                        i.enterprise
                                            .execute(t, { action: e })
                                            .then(e => {
                                                n(e);
                                            })
                                            .catch(() => {
                                                n(Be);
                                            });
                                    }) :
                                    r(Error('No reCAPTCHA enterprise script loaded.'));
                            }
                            return new Promise((e, i) => {
                                n(this.auth)
                                    .then(n => {
                                        if (!t && De(window.grecaptcha)) r(n, e, i);
                                        else {
                                            if ('undefined' === typeof window) return void i(new Error('RecaptchaVerifier is only supported in browser'));
                                            Me(Ue + n)
                                                .then(() => {
                                                    r(n, e, i);
                                                })
                                                .catch(e => {
                                                    i(e);
                                                });
                                        }
                                    })
                                    .catch(e => {
                                        i(e);
                                    });
                            });
                        }
                    }
                    async function qe(e, t, n, r = !1) {
                        const i = new $e(e);
                        let o;
                        try {
                            o = await i.verify(n);
                        } catch (a) {
                            o = await i.verify(n, !0);
                        }
                        const s = Object.assign({}, t);
                        return (
                            r ? Object.assign(s, { captchaResp: o }) : Object.assign(s, { captchaResponse: o }),
                            Object.assign(s, { clientType: 'CLIENT_TYPE_WEB' }),
                            Object.assign(s, { recaptchaVersion: 'RECAPTCHA_ENTERPRISE' }),
                            s
                        );
                    }
                    /**
                     * @license
                     * Copyright 2022 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class ze {
                        constructor(e) {
                            (this.auth = e), (this.queue = []);
                        }
                        pushCallback(e, t) {
                            const n = t =>
                                new Promise((n, r) => {
                                    try {
                                        const r = e(t);
                                        n(r);
                                    } catch (i) {
                                        r(i);
                                    }
                                });
                            (n.onAbort = t), this.queue.push(n);
                            const r = this.queue.length - 1;
                            return () => {
                                this.queue[r] = () => Promise.resolve();
                            };
                        }
                        async runMiddleware(e) {
                            if (this.auth.currentUser === e) return;
                            const t = [];
                            try {
                                for (const n of this.queue) await n(e), n.onAbort && t.push(n.onAbort);
                            } catch (n) {
                                t.reverse();
                                for (const e of t)
                                    try {
                                        e();
                                    } catch (r) {}
                                throw this.auth._errorFactory.create('login-blocked', { originalMessage: null === n || void 0 === n ? void 0 : n.message });
                            }
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Ge {
                        constructor(e, t, n, r) {
                            (this.app = e),
                            (this.heartbeatServiceProvider = t),
                            (this.appCheckServiceProvider = n),
                            (this.config = r),
                            (this.currentUser = null),
                            (this.emulatorConfig = null),
                            (this.operations = Promise.resolve()),
                            (this.authStateSubscription = new He(this)),
                            (this.idTokenSubscription = new He(this)),
                            (this.beforeStateQueue = new ze(this)),
                            (this.redirectUser = null),
                            (this.isProactiveRefreshEnabled = !1),
                            (this._canInitEmulator = !0),
                            (this._isInitialized = !1),
                            (this._deleted = !1),
                            (this._initializationPromise = null),
                            (this._popupRedirectResolver = null),
                            (this._errorFactory = g),
                            (this._agentRecaptchaConfig = null),
                            (this._tenantRecaptchaConfigs = {}),
                            (this.lastNotifiedUid = void 0),
                            (this.languageCode = null),
                            (this.tenantId = null),
                            (this.settings = { appVerificationDisabledForTesting: !1 }),
                            (this.frameworks = []),
                            (this.name = e.name),
                            (this.clientVersion = r.sdkClientVersion);
                        }
                        _initializeWithPersistence(e, t) {
                            return (
                                t && (this._popupRedirectResolver = he(t)),
                                (this._initializationPromise = this.queue(async() => {
                                    var n, r;
                                    if (!this._deleted && ((this.persistenceManager = await ge.create(this, e)), !this._deleted)) {
                                        if (null === (n = this._popupRedirectResolver) || void 0 === n ? void 0 : n._shouldInitProactively)
                                            try {
                                                await this._popupRedirectResolver._initialize(this);
                                            } catch (i) {}
                                        await this.initializeCurrentUser(t),
                                            (this.lastNotifiedUid = (null === (r = this.currentUser) || void 0 === r ? void 0 : r.uid) || null),
                                            this._deleted || (this._isInitialized = !0);
                                    }
                                })),
                                this._initializationPromise
                            );
                        }
                        async _onStorageEvent() {
                            if (this._deleted) return;
                            const e = await this.assertedPersistence.getCurrentUser();
                            return this.currentUser || e ?
                                this.currentUser && e && this.currentUser.uid === e.uid ?
                                (this._currentUser._assign(e), void(await this.currentUser.getIdToken())) :
                                void(await this._updateCurrentUser(e, !0)) :
                                void 0;
                        }
                        async initializeCurrentUser(e) {
                            var t;
                            const n = await this.assertedPersistence.getCurrentUser();
                            let r = n,
                                i = !1;
                            if (e && this.config.authDomain) {
                                await this.getOrInitRedirectPersistenceManager();
                                const n = null === (t = this.redirectUser) || void 0 === t ? void 0 : t._redirectEventId,
                                    o = null === r || void 0 === r ? void 0 : r._redirectEventId,
                                    s = await this.tryRedirectSignIn(e);
                                (n && n !== o) || !(null === s || void 0 === s ? void 0 : s.user) || ((r = s.user), (i = !0));
                            }
                            if (!r) return this.directlySetCurrentUser(null);
                            if (!r._redirectEventId) {
                                if (i)
                                    try {
                                        await this.beforeStateQueue.runMiddleware(r);
                                    } catch (o) {
                                        (r = n), this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(o));
                                    }
                                return r ? this.reloadAndSetCurrentUserOrClear(r) : this.directlySetCurrentUser(null);
                            }
                            return (
                                S(this._popupRedirectResolver, this, 'argument-error'),
                                await this.getOrInitRedirectPersistenceManager(),
                                this.redirectUser && this.redirectUser._redirectEventId === r._redirectEventId ?
                                this.directlySetCurrentUser(r) :
                                this.reloadAndSetCurrentUserOrClear(r)
                            );
                        }
                        async tryRedirectSignIn(e) {
                            let t = null;
                            try {
                                t = await this._popupRedirectResolver._completeRedirectFn(this, e, !0);
                            } catch (n) {
                                await this._setRedirectUser(null);
                            }
                            return t;
                        }
                        async reloadAndSetCurrentUserOrClear(e) {
                            try {
                                await ne(e);
                            } catch (t) {
                                if ('auth/network-request-failed' !== (null === t || void 0 === t ? void 0 : t.code)) return this.directlySetCurrentUser(null);
                            }
                            return this.directlySetCurrentUser(e);
                        }
                        useDeviceLanguage() {
                            this.languageCode = N();
                        }
                        async _delete() {
                            this._deleted = !0;
                        }
                        async updateCurrentUser(e) {
                            const t = e ? (0, i.m9)(e) : null;
                            return t && S(t.auth.config.apiKey === this.config.apiKey, this, 'invalid-user-token'), this._updateCurrentUser(t && t._clone(this));
                        }
                        async _updateCurrentUser(e, t = !1) {
                            if (!this._deleted)
                                return (
                                    e && S(this.tenantId === e.tenantId, this, 'tenant-id-mismatch'),
                                    t || (await this.beforeStateQueue.runMiddleware(e)),
                                    this.queue(async() => {
                                        await this.directlySetCurrentUser(e), this.notifyAuthListeners();
                                    })
                                );
                        }
                        async signOut() {
                            return (
                                await this.beforeStateQueue.runMiddleware(null),
                                (this.redirectPersistenceManager || this._popupRedirectResolver) && (await this._setRedirectUser(null)),
                                this._updateCurrentUser(null, !0)
                            );
                        }
                        setPersistence(e) {
                            return this.queue(async() => {
                                await this.assertedPersistence.setPersistence(he(e));
                            });
                        }
                        async initializeRecaptchaConfig() {
                            const e = await Re(this, { clientType: 'CLIENT_TYPE_WEB', version: 'RECAPTCHA_ENTERPRISE' }),
                                t = new Le(e);
                            if (
                                (null == this.tenantId ? (this._agentRecaptchaConfig = t) : (this._tenantRecaptchaConfigs[this.tenantId] = t), t.emailPasswordEnabled)
                            ) {
                                const e = new $e(this);
                                e.verify();
                            }
                        }
                        _getRecaptchaConfig() {
                            return null == this.tenantId ? this._agentRecaptchaConfig : this._tenantRecaptchaConfigs[this.tenantId];
                        }
                        _getPersistence() {
                            return this.assertedPersistence.persistence.type;
                        }
                        _updateErrorMap(e) {
                            this._errorFactory = new i.LL('auth', 'Firebase', e());
                        }
                        onAuthStateChanged(e, t, n) {
                            return this.registerStateListener(this.authStateSubscription, e, t, n);
                        }
                        beforeAuthStateChanged(e, t) {
                            return this.beforeStateQueue.pushCallback(e, t);
                        }
                        onIdTokenChanged(e, t, n) {
                            return this.registerStateListener(this.idTokenSubscription, e, t, n);
                        }
                        toJSON() {
                            var e;
                            return {
                                apiKey: this.config.apiKey,
                                authDomain: this.config.authDomain,
                                appName: this.name,
                                currentUser: null === (e = this._currentUser) || void 0 === e ? void 0 : e.toJSON()
                            };
                        }
                        async _setRedirectUser(e, t) {
                            const n = await this.getOrInitRedirectPersistenceManager(t);
                            return null === e ? n.removeCurrentUser() : n.setCurrentUser(e);
                        }
                        async getOrInitRedirectPersistenceManager(e) {
                            if (!this.redirectPersistenceManager) {
                                const t = (e && he(e)) || this._popupRedirectResolver;
                                S(t, this, 'argument-error'),
                                    (this.redirectPersistenceManager = await ge.create(this, [he(t._redirectPersistence)], 'redirectUser')),
                                    (this.redirectUser = await this.redirectPersistenceManager.getCurrentUser());
                            }
                            return this.redirectPersistenceManager;
                        }
                        async _redirectUserForId(e) {
                            var t, n;
                            return (
                                this._isInitialized && (await this.queue(async() => {})),
                                (null === (t = this._currentUser) || void 0 === t ? void 0 : t._redirectEventId) === e ?
                                this._currentUser :
                                (null === (n = this.redirectUser) || void 0 === n ? void 0 : n._redirectEventId) === e ?
                                this.redirectUser :
                                null
                            );
                        }
                        async _persistUserIfCurrent(e) {
                            if (e === this.currentUser) return this.queue(async() => this.directlySetCurrentUser(e));
                        }
                        _notifyListenersIfCurrent(e) {
                            e === this.currentUser && this.notifyAuthListeners();
                        }
                        _key() {
                            return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
                        }
                        _startProactiveRefresh() {
                            (this.isProactiveRefreshEnabled = !0), this.currentUser && this._currentUser._startProactiveRefresh();
                        }
                        _stopProactiveRefresh() {
                            (this.isProactiveRefreshEnabled = !1), this.currentUser && this._currentUser._stopProactiveRefresh();
                        }
                        get _currentUser() {
                            return this.currentUser;
                        }
                        notifyAuthListeners() {
                            var e, t;
                            if (!this._isInitialized) return;
                            this.idTokenSubscription.next(this.currentUser);
                            const n = null !== (t = null === (e = this.currentUser) || void 0 === e ? void 0 : e.uid) && void 0 !== t ? t : null;
                            this.lastNotifiedUid !== n && ((this.lastNotifiedUid = n), this.authStateSubscription.next(this.currentUser));
                        }
                        registerStateListener(e, t, n, r) {
                            if (this._deleted) return () => {};
                            const i = 'function' === typeof t ? t : t.next.bind(t),
                                o = this._isInitialized ? Promise.resolve() : this._initializationPromise;
                            return S(o, this, 'internal-error'), o.then(() => i(this.currentUser)), 'function' === typeof t ? e.addObserver(t, n, r) : e.addObserver(t);
                        }
                        async directlySetCurrentUser(e) {
                            this.currentUser && this.currentUser !== e && this._currentUser._stopProactiveRefresh(),
                                e && this.isProactiveRefreshEnabled && e._startProactiveRefresh(),
                                (this.currentUser = e),
                                e ? await this.assertedPersistence.setCurrentUser(e) : await this.assertedPersistence.removeCurrentUser();
                        }
                        queue(e) {
                            return (this.operations = this.operations.then(e, e)), this.operations;
                        }
                        get assertedPersistence() {
                            return S(this.persistenceManager, this, 'internal-error'), this.persistenceManager;
                        }
                        _logFramework(e) {
                            e &&
                                !this.frameworks.includes(e) &&
                                (this.frameworks.push(e), this.frameworks.sort(), (this.clientVersion = Oe(this.config.clientPlatform, this._getFrameworks())));
                        }
                        _getFrameworks() {
                            return this.frameworks;
                        }
                        async _getAdditionalHeaders() {
                            var e;
                            const t = {
                                ['X-Client-Version']: this.clientVersion };
                            this.app.options.appId && (t['X-Firebase-gmpid'] = this.app.options.appId);
                            const n = await (null === (e = this.heartbeatServiceProvider.getImmediate({ optional: !0 })) || void 0 === e ?
                                void 0 :
                                e.getHeartbeatsHeader());
                            n && (t['X-Firebase-Client'] = n);
                            const r = await this._getAppCheckToken();
                            return r && (t['X-Firebase-AppCheck'] = r), t;
                        }
                        async _getAppCheckToken() {
                            var e;
                            const t = await (null === (e = this.appCheckServiceProvider.getImmediate({ optional: !0 })) || void 0 === e ? void 0 : e.getToken());
                            return (
                                (null === t || void 0 === t ? void 0 : t.error) && v(`Error while retrieving App Check token: ${t.error}`),
                                null === t || void 0 === t ? void 0 : t.token
                            );
                        }
                    }

                    function We(e) {
                        return (0, i.m9)(e);
                    }
                    class He {
                        constructor(e) {
                            (this.auth = e), (this.observer = null), (this.addObserver = (0, i.ne)(e => (this.observer = e)));
                        }
                        get next() {
                            return S(this.observer, this.auth, 'internal-error'), this.observer.next.bind(this.observer);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Ke(e, t) {
                        const n = (null === t || void 0 === t ? void 0 : t.persistence) || [],
                            r = (Array.isArray(n) ? n : [n]).map(he);
                        (null === t || void 0 === t ? void 0 : t.errorMap) && e._updateErrorMap(t.errorMap),
                            e._initializeWithPersistence(r, null === t || void 0 === t ? void 0 : t.popupRedirectResolver);
                    }

                    function Qe(e, t, n) {
                        const r = We(e);
                        S(r._canInitEmulator, r, 'emulator-config-failed'), S(/^https?:\/\//.test(t), r, 'invalid-emulator-scheme');
                        const i = !!(null === n || void 0 === n ? void 0 : n.disableWarnings),
                            o = Ye(t),
                            { host: s, port: a } = Xe(t),
                            u = null === a ? '' : `:${a}`;
                        (r.config.emulator = { url: `${o}//${s}${u}/` }),
                        (r.settings.appVerificationDisabledForTesting = !0),
                        (r.emulatorConfig = Object.freeze({ host: s, port: a, protocol: o.replace(':', ''), options: Object.freeze({ disableWarnings: i }) })),
                        i || Ze();
                    }

                    function Ye(e) {
                        const t = e.indexOf(':');
                        return t < 0 ? '' : e.substr(0, t + 1);
                    }

                    function Xe(e) {
                        const t = Ye(e),
                            n = /(\/\/)?([^?#/]+)/.exec(e.substr(t.length));
                        if (!n) return { host: '', port: null };
                        const r = n[2].split('@').pop() || '',
                            i = /^(\[[^\]]+\])(:|$)/.exec(r);
                        if (i) {
                            const e = i[1];
                            return { host: e, port: Je(r.substr(e.length + 1)) };
                        } {
                            const [e, t] = r.split(':');
                            return { host: e, port: Je(t) };
                        }
                    }

                    function Je(e) {
                        if (!e) return null;
                        const t = Number(e);
                        return isNaN(t) ? null : t;
                    }

                    function Ze() {
                        function e() {
                            const e = document.createElement('p'),
                                t = e.style;
                            (e.innerText = 'Running in emulator mode. Do not use with production credentials.'),
                            (t.position = 'fixed'),
                            (t.width = '100%'),
                            (t.backgroundColor = '#ffffff'),
                            (t.border = '.1em solid #000000'),
                            (t.color = '#b50000'),
                            (t.bottom = '0px'),
                            (t.left = '0px'),
                            (t.margin = '0px'),
                            (t.zIndex = '10000'),
                            (t.textAlign = 'center'),
                            e.classList.add('firebase-emulator-warning'),
                                document.body.appendChild(e);
                        }
                        'undefined' !== typeof console &&
                            'function' === typeof console.info &&
                            console.info(
                                'WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.'
                            ),
                            'undefined' !== typeof window &&
                            'undefined' !== typeof document &&
                            ('loading' === document.readyState ? window.addEventListener('DOMContentLoaded', e) : e());
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class et {
                        constructor(e, t) {
                            (this.providerId = e), (this.signInMethod = t);
                        }
                        toJSON() {
                            return T('not implemented');
                        }
                        _getIdTokenResponse(e) {
                            return T('not implemented');
                        }
                        _linkToIdToken(e, t) {
                            return T('not implemented');
                        }
                        _getReauthenticationResolver(e) {
                            return T('not implemented');
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function tt(e, t) {
                        return F(e, 'POST', '/v1/accounts:resetPassword', M(e, t));
                    }
                    async function nt(e, t) {
                        return F(e, 'POST', '/v1/accounts:update', t);
                    }
                    async function rt(e, t) {
                        return F(e, 'POST', '/v1/accounts:update', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function it(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithPassword', M(e, t));
                    }
                    async function ot(e, t) {
                        return F(e, 'POST', '/v1/accounts:sendOobCode', M(e, t));
                    }
                    async function st(e, t) {
                        return ot(e, t);
                    }
                    async function at(e, t) {
                        return ot(e, t);
                    }
                    async function ut(e, t) {
                        return ot(e, t);
                    }
                    async function ct(e, t) {
                        return ot(e, t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function lt(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithEmailLink', M(e, t));
                    }
                    async function ht(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithEmailLink', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class ft extends et {
                        constructor(e, t, n, r = null) {
                            super('password', n), (this._email = e), (this._password = t), (this._tenantId = r);
                        }
                        static _fromEmailAndPassword(e, t) {
                            return new ft(e, t, 'password');
                        }
                        static _fromEmailAndCode(e, t, n = null) {
                            return new ft(e, t, 'emailLink', n);
                        }
                        toJSON() {
                            return { email: this._email, password: this._password, signInMethod: this.signInMethod, tenantId: this._tenantId };
                        }
                        static fromJSON(e) {
                            const t = 'string' === typeof e ? JSON.parse(e) : e;
                            if ((null === t || void 0 === t ? void 0 : t.email) && (null === t || void 0 === t ? void 0 : t.password)) {
                                if ('password' === t.signInMethod) return this._fromEmailAndPassword(t.email, t.password);
                                if ('emailLink' === t.signInMethod) return this._fromEmailAndCode(t.email, t.password, t.tenantId);
                            }
                            return null;
                        }
                        async _getIdTokenResponse(e) {
                            var t;
                            switch (this.signInMethod) {
                                case 'password':
                                    const n = { returnSecureToken: !0, email: this._email, password: this._password, clientType: 'CLIENT_TYPE_WEB' };
                                    if (null === (t = e._getRecaptchaConfig()) || void 0 === t ? void 0 : t.emailPasswordEnabled) {
                                        const t = await qe(e, n, 'signInWithPassword');
                                        return it(e, t);
                                    }
                                    return it(e, n).catch(async t => {
                                        if ('auth/missing-recaptcha-token' === t.code) {
                                            console.log(
                                                'Sign-in with email address and password is protected by reCAPTCHA for this project. Automatically triggering the reCAPTCHA flow and restarting the sign-in flow.'
                                            );
                                            const t = await qe(e, n, 'signInWithPassword');
                                            return it(e, t);
                                        }
                                        return Promise.reject(t);
                                    });
                                case 'emailLink':
                                    return lt(e, { email: this._email, oobCode: this._password });
                                default:
                                    w(e, 'internal-error');
                            }
                        }
                        async _linkToIdToken(e, t) {
                            switch (this.signInMethod) {
                                case 'password':
                                    return nt(e, { idToken: t, returnSecureToken: !0, email: this._email, password: this._password });
                                case 'emailLink':
                                    return ht(e, { idToken: t, email: this._email, oobCode: this._password });
                                default:
                                    w(e, 'internal-error');
                            }
                        }
                        _getReauthenticationResolver(e) {
                            return this._getIdTokenResponse(e);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function dt(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithIdp', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const pt = 'http://localhost';
                    class gt extends et {
                        constructor() {
                            super(...arguments), (this.pendingToken = null);
                        }
                        static _fromParams(e) {
                            const t = new gt(e.providerId, e.signInMethod);
                            return (
                                e.idToken || e.accessToken ?
                                (e.idToken && (t.idToken = e.idToken),
                                    e.accessToken && (t.accessToken = e.accessToken),
                                    e.nonce && !e.pendingToken && (t.nonce = e.nonce),
                                    e.pendingToken && (t.pendingToken = e.pendingToken)) :
                                e.oauthToken && e.oauthTokenSecret ?
                                ((t.accessToken = e.oauthToken), (t.secret = e.oauthTokenSecret)) :
                                w('argument-error'),
                                t
                            );
                        }
                        toJSON() {
                            return {
                                idToken: this.idToken,
                                accessToken: this.accessToken,
                                secret: this.secret,
                                nonce: this.nonce,
                                pendingToken: this.pendingToken,
                                providerId: this.providerId,
                                signInMethod: this.signInMethod
                            };
                        }
                        static fromJSON(e) {
                            const t = 'string' === typeof e ? JSON.parse(e) : e,
                                { providerId: n, signInMethod: r } = t,
                                i = s(t, ['providerId', 'signInMethod']);
                            if (!n || !r) return null;
                            const o = new gt(n, r);
                            return (
                                (o.idToken = i.idToken || void 0),
                                (o.accessToken = i.accessToken || void 0),
                                (o.secret = i.secret),
                                (o.nonce = i.nonce),
                                (o.pendingToken = i.pendingToken || null),
                                o
                            );
                        }
                        _getIdTokenResponse(e) {
                            const t = this.buildRequest();
                            return dt(e, t);
                        }
                        _linkToIdToken(e, t) {
                            const n = this.buildRequest();
                            return (n.idToken = t), dt(e, n);
                        }
                        _getReauthenticationResolver(e) {
                            const t = this.buildRequest();
                            return (t.autoCreate = !1), dt(e, t);
                        }
                        buildRequest() {
                            const e = { requestUri: pt, returnSecureToken: !0 };
                            if (this.pendingToken) e.pendingToken = this.pendingToken;
                            else {
                                const t = {};
                                this.idToken && (t['id_token'] = this.idToken),
                                    this.accessToken && (t['access_token'] = this.accessToken),
                                    this.secret && (t['oauth_token_secret'] = this.secret),
                                    (t['providerId'] = this.providerId),
                                    this.nonce && !this.pendingToken && (t['nonce'] = this.nonce),
                                    (e.postBody = (0, i.xO)(t));
                            }
                            return e;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function mt(e, t) {
                        return F(e, 'POST', '/v1/accounts:sendVerificationCode', M(e, t));
                    }
                    async function vt(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithPhoneNumber', M(e, t));
                    }
                    async function yt(e, t) {
                        const n = await V(e, 'POST', '/v1/accounts:signInWithPhoneNumber', M(e, t));
                        if (n.temporaryProof) throw q(e, 'account-exists-with-different-credential', n);
                        return n;
                    }
                    const wt = {
                        ['USER_NOT_FOUND']: 'user-not-found' };
                    async function bt(e, t) {
                        const n = Object.assign(Object.assign({}, t), { operation: 'REAUTH' });
                        return V(e, 'POST', '/v1/accounts:signInWithPhoneNumber', M(e, n), wt);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class _t extends et {
                        constructor(e) {
                            super('phone', 'phone'), (this.params = e);
                        }
                        static _fromVerification(e, t) {
                            return new _t({ verificationId: e, verificationCode: t });
                        }
                        static _fromTokenResponse(e, t) {
                            return new _t({ phoneNumber: e, temporaryProof: t });
                        }
                        _getIdTokenResponse(e) {
                            return vt(e, this._makeVerificationRequest());
                        }
                        _linkToIdToken(e, t) {
                            return yt(e, Object.assign({ idToken: t }, this._makeVerificationRequest()));
                        }
                        _getReauthenticationResolver(e) {
                            return bt(e, this._makeVerificationRequest());
                        }
                        _makeVerificationRequest() {
                            const { temporaryProof: e, phoneNumber: t, verificationId: n, verificationCode: r } = this.params;
                            return e && t ? { temporaryProof: e, phoneNumber: t } : { sessionInfo: n, code: r };
                        }
                        toJSON() {
                            const e = { providerId: this.providerId };
                            return (
                                this.params.phoneNumber && (e.phoneNumber = this.params.phoneNumber),
                                this.params.temporaryProof && (e.temporaryProof = this.params.temporaryProof),
                                this.params.verificationCode && (e.verificationCode = this.params.verificationCode),
                                this.params.verificationId && (e.verificationId = this.params.verificationId),
                                e
                            );
                        }
                        static fromJSON(e) {
                            'string' === typeof e && (e = JSON.parse(e));
                            const { verificationId: t, verificationCode: n, phoneNumber: r, temporaryProof: i } = e;
                            return n || t || r || i ? new _t({ verificationId: t, verificationCode: n, phoneNumber: r, temporaryProof: i }) : null;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function It(e) {
                        switch (e) {
                            case 'recoverEmail':
                                return 'RECOVER_EMAIL';
                            case 'resetPassword':
                                return 'PASSWORD_RESET';
                            case 'signIn':
                                return 'EMAIL_SIGNIN';
                            case 'verifyEmail':
                                return 'VERIFY_EMAIL';
                            case 'verifyAndChangeEmail':
                                return 'VERIFY_AND_CHANGE_EMAIL';
                            case 'revertSecondFactorAddition':
                                return 'REVERT_SECOND_FACTOR_ADDITION';
                            default:
                                return null;
                        }
                    }

                    function Et(e) {
                        const t = (0, i.zd)((0, i.pd)(e))['link'],
                            n = t ? (0, i.zd)((0, i.pd)(t))['deep_link_id'] : null,
                            r = (0, i.zd)((0, i.pd)(e))['deep_link_id'],
                            o = r ? (0, i.zd)((0, i.pd)(r))['link'] : null;
                        return o || r || n || t || e;
                    }
                    class St {
                        constructor(e) {
                            var t, n, r, o, s, a;
                            const u = (0, i.zd)((0, i.pd)(e)),
                                c = null !== (t = u['apiKey']) && void 0 !== t ? t : null,
                                l = null !== (n = u['oobCode']) && void 0 !== n ? n : null,
                                h = It(null !== (r = u['mode']) && void 0 !== r ? r : null);
                            S(c && l && h, 'argument-error'),
                                (this.apiKey = c),
                                (this.operation = h),
                                (this.code = l),
                                (this.continueUrl = null !== (o = u['continueUrl']) && void 0 !== o ? o : null),
                                (this.languageCode = null !== (s = u['languageCode']) && void 0 !== s ? s : null),
                                (this.tenantId = null !== (a = u['tenantId']) && void 0 !== a ? a : null);
                        }
                        static parseLink(e) {
                            const t = Et(e);
                            try {
                                return new St(t);
                            } catch (n) {
                                return null;
                            }
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Tt {
                        constructor() {
                            this.providerId = Tt.PROVIDER_ID;
                        }
                        static credential(e, t) {
                            return ft._fromEmailAndPassword(e, t);
                        }
                        static credentialWithLink(e, t) {
                            const n = St.parseLink(t);
                            return S(n, 'argument-error'), ft._fromEmailAndCode(e, n.code, n.tenantId);
                        }
                    }
                    (Tt.PROVIDER_ID = 'password'), (Tt.EMAIL_PASSWORD_SIGN_IN_METHOD = 'password'), (Tt.EMAIL_LINK_SIGN_IN_METHOD = 'emailLink');
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class At {
                        constructor(e) {
                            (this.providerId = e), (this.defaultLanguageCode = null), (this.customParameters = {});
                        }
                        setDefaultLanguage(e) {
                            this.defaultLanguageCode = e;
                        }
                        setCustomParameters(e) {
                            return (this.customParameters = e), this;
                        }
                        getCustomParameters() {
                            return this.customParameters;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class xt extends At {
                        constructor() {
                            super(...arguments), (this.scopes = []);
                        }
                        addScope(e) {
                            return this.scopes.includes(e) || this.scopes.push(e), this;
                        }
                        getScopes() {
                            return [...this.scopes];
                        }
                    }
                    class Ct extends xt {
                        static credentialFromJSON(e) {
                            const t = 'string' === typeof e ? JSON.parse(e) : e;
                            return S('providerId' in t && 'signInMethod' in t, 'argument-error'), gt._fromParams(t);
                        }
                        credential(e) {
                            return this._credential(Object.assign(Object.assign({}, e), { nonce: e.rawNonce }));
                        }
                        _credential(e) {
                            return (
                                S(e.idToken || e.accessToken, 'argument-error'),
                                gt._fromParams(Object.assign(Object.assign({}, e), { providerId: this.providerId, signInMethod: this.providerId }))
                            );
                        }
                        static credentialFromResult(e) {
                            return Ct.oauthCredentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return Ct.oauthCredentialFromTaggedObject(e.customData || {});
                        }
                        static oauthCredentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e) return null;
                            const { oauthIdToken: t, oauthAccessToken: n, oauthTokenSecret: r, pendingToken: i, nonce: o, providerId: s } = e;
                            if (!n && !r && !t && !i) return null;
                            if (!s) return null;
                            try {
                                return new Ct(s)._credential({ idToken: t, accessToken: n, nonce: o, pendingToken: i });
                            } catch (a) {
                                return null;
                            }
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class kt extends xt {
                        constructor() {
                            super('facebook.com');
                        }
                        static credential(e) {
                            return gt._fromParams({ providerId: kt.PROVIDER_ID, signInMethod: kt.FACEBOOK_SIGN_IN_METHOD, accessToken: e });
                        }
                        static credentialFromResult(e) {
                            return kt.credentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return kt.credentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e || !('oauthAccessToken' in e)) return null;
                            if (!e.oauthAccessToken) return null;
                            try {
                                return kt.credential(e.oauthAccessToken);
                            } catch (t) {
                                return null;
                            }
                        }
                    }
                    (kt.FACEBOOK_SIGN_IN_METHOD = 'facebook.com'), (kt.PROVIDER_ID = 'facebook.com');
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Ot extends xt {
                        constructor() {
                            super('google.com'), this.addScope('profile');
                        }
                        static credential(e, t) {
                            return gt._fromParams({ providerId: Ot.PROVIDER_ID, signInMethod: Ot.GOOGLE_SIGN_IN_METHOD, idToken: e, accessToken: t });
                        }
                        static credentialFromResult(e) {
                            return Ot.credentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return Ot.credentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e) return null;
                            const { oauthIdToken: t, oauthAccessToken: n } = e;
                            if (!t && !n) return null;
                            try {
                                return Ot.credential(t, n);
                            } catch (r) {
                                return null;
                            }
                        }
                    }
                    (Ot.GOOGLE_SIGN_IN_METHOD = 'google.com'), (Ot.PROVIDER_ID = 'google.com');
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Nt extends xt {
                        constructor() {
                            super('github.com');
                        }
                        static credential(e) {
                            return gt._fromParams({ providerId: Nt.PROVIDER_ID, signInMethod: Nt.GITHUB_SIGN_IN_METHOD, accessToken: e });
                        }
                        static credentialFromResult(e) {
                            return Nt.credentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return Nt.credentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e || !('oauthAccessToken' in e)) return null;
                            if (!e.oauthAccessToken) return null;
                            try {
                                return Nt.credential(e.oauthAccessToken);
                            } catch (t) {
                                return null;
                            }
                        }
                    }
                    (Nt.GITHUB_SIGN_IN_METHOD = 'github.com'), (Nt.PROVIDER_ID = 'github.com');
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Rt = 'http://localhost';
                    class Pt extends et {
                        constructor(e, t) {
                            super(e, e), (this.pendingToken = t);
                        }
                        _getIdTokenResponse(e) {
                            const t = this.buildRequest();
                            return dt(e, t);
                        }
                        _linkToIdToken(e, t) {
                            const n = this.buildRequest();
                            return (n.idToken = t), dt(e, n);
                        }
                        _getReauthenticationResolver(e) {
                            const t = this.buildRequest();
                            return (t.autoCreate = !1), dt(e, t);
                        }
                        toJSON() {
                            return { signInMethod: this.signInMethod, providerId: this.providerId, pendingToken: this.pendingToken };
                        }
                        static fromJSON(e) {
                            const t = 'string' === typeof e ? JSON.parse(e) : e,
                                { providerId: n, signInMethod: r, pendingToken: i } = t;
                            return n && r && i && n === r ? new Pt(n, i) : null;
                        }
                        static _create(e, t) {
                            return new Pt(e, t);
                        }
                        buildRequest() {
                            return { requestUri: Rt, returnSecureToken: !0, pendingToken: this.pendingToken };
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Dt = 'saml.';
                    class Lt extends At {
                        constructor(e) {
                            S(e.startsWith(Dt), 'argument-error'), super(e);
                        }
                        static credentialFromResult(e) {
                            return Lt.samlCredentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return Lt.samlCredentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromJSON(e) {
                            const t = Pt.fromJSON(e);
                            return S(t, 'argument-error'), t;
                        }
                        static samlCredentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e) return null;
                            const { pendingToken: t, providerId: n } = e;
                            if (!t || !n) return null;
                            try {
                                return Pt._create(n, t);
                            } catch (r) {
                                return null;
                            }
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class jt extends xt {
                        constructor() {
                            super('twitter.com');
                        }
                        static credential(e, t) {
                            return gt._fromParams({ providerId: jt.PROVIDER_ID, signInMethod: jt.TWITTER_SIGN_IN_METHOD, oauthToken: e, oauthTokenSecret: t });
                        }
                        static credentialFromResult(e) {
                            return jt.credentialFromTaggedObject(e);
                        }
                        static credentialFromError(e) {
                            return jt.credentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e) return null;
                            const { oauthAccessToken: t, oauthTokenSecret: n } = e;
                            if (!t || !n) return null;
                            try {
                                return jt.credential(t, n);
                            } catch (r) {
                                return null;
                            }
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Mt(e, t) {
                        return V(e, 'POST', '/v1/accounts:signUp', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    (jt.TWITTER_SIGN_IN_METHOD = 'twitter.com'), (jt.PROVIDER_ID = 'twitter.com');
                    class Ft {
                        constructor(e) {
                            (this.user = e.user), (this.providerId = e.providerId), (this._tokenResponse = e._tokenResponse), (this.operationType = e.operationType);
                        }
                        static async _fromIdTokenResponse(e, t, n, r = !1) {
                            const i = await ce._fromIdTokenResponse(e, n, r),
                                o = Ut(n),
                                s = new Ft({ user: i, providerId: o, _tokenResponse: n, operationType: t });
                            return s;
                        }
                        static async _forOperation(e, t, n) {
                            await e._updateTokensIfNecessary(n, !0);
                            const r = Ut(n);
                            return new Ft({ user: e, providerId: r, _tokenResponse: n, operationType: t });
                        }
                    }

                    function Ut(e) {
                        return e.providerId ? e.providerId : 'phoneNumber' in e ? 'phone' : null;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Vt(e) {
                        var t;
                        const n = We(e);
                        if ((await n._initializationPromise, null === (t = n.currentUser) || void 0 === t ? void 0 : t.isAnonymous))
                            return new Ft({ user: n.currentUser, providerId: null, operationType: 'signIn' });
                        const r = await Mt(n, { returnSecureToken: !0 }),
                            i = await Ft._fromIdTokenResponse(n, 'signIn', r, !0);
                        return await n._updateCurrentUser(i.user), i;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Bt extends i.ZR {
                        constructor(e, t, n, r) {
                            var i;
                            super(t.code, t.message),
                                (this.operationType = n),
                                (this.user = r),
                                Object.setPrototypeOf(this, Bt.prototype),
                                (this.customData = {
                                    appName: e.name,
                                    tenantId: null !== (i = e.tenantId) && void 0 !== i ? i : void 0,
                                    _serverResponse: t.customData._serverResponse,
                                    operationType: n
                                });
                        }
                        static _fromErrorAndOperation(e, t, n, r) {
                            return new Bt(e, t, n, r);
                        }
                    }

                    function $t(e, t, n, r) {
                        const i = 'reauthenticate' === t ? n._getReauthenticationResolver(e) : n._getIdTokenResponse(e);
                        return i.catch(n => {
                            if ('auth/multi-factor-auth-required' === n.code) throw Bt._fromErrorAndOperation(e, n, t, r);
                            throw n;
                        });
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function qt(e) {
                        return new Set(e.map(({ providerId: e }) => e).filter(e => !!e));
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function zt(e, t) {
                        const n = (0, i.m9)(e);
                        await Wt(!0, n, t);
                        const { providerUserInfo: r } = await G(n.auth, { idToken: await n.getIdToken(), deleteProvider: [t] }),
                            o = qt(r || []);
                        return (
                            (n.providerData = n.providerData.filter(e => o.has(e.providerId))),
                            o.has('phone') || (n.phoneNumber = null),
                            await n.auth._persistUserIfCurrent(n),
                            n
                        );
                    }
                    async function Gt(e, t, n = !1) {
                        const r = await J(e, t._linkToIdToken(e.auth, await e.getIdToken()), n);
                        return Ft._forOperation(e, 'link', r);
                    }
                    async function Wt(e, t, n) {
                        await ne(t);
                        const r = qt(t.providerData),
                            i = !1 === e ? 'provider-already-linked' : 'no-such-provider';
                        S(r.has(n) === e, t.auth, i);
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Ht(e, t, n = !1) {
                        const { auth: r } = e,
                        i = 'reauthenticate';
                        try {
                            const o = await J(e, $t(r, i, t, e), n);
                            S(o.idToken, r, 'internal-error');
                            const s = Y(o.idToken);
                            S(s, r, 'internal-error');
                            const { sub: a } = s;
                            return S(e.uid === a, r, 'user-mismatch'), Ft._forOperation(e, i, o);
                        } catch (o) {
                            throw ('auth/user-not-found' === (null === o || void 0 === o ? void 0 : o.code) && w(r, 'user-mismatch'), o);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Kt(e, t, n = !1) {
                        const r = 'signIn',
                            i = await $t(e, r, t),
                            o = await Ft._fromIdTokenResponse(e, r, i);
                        return n || (await e._updateCurrentUser(o.user)), o;
                    }
                    async function Qt(e, t) {
                        return Kt(We(e), t);
                    }
                    async function Yt(e, t) {
                        const n = (0, i.m9)(e);
                        return await Wt(!1, n, t.providerId), Gt(n, t);
                    }
                    async function Xt(e, t) {
                        return Ht((0, i.m9)(e), t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Jt(e, t) {
                        return V(e, 'POST', '/v1/accounts:signInWithCustomToken', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function Zt(e, t) {
                        const n = We(e),
                            r = await Jt(n, { token: t, returnSecureToken: !0 }),
                            i = await Ft._fromIdTokenResponse(n, 'signIn', r);
                        return await n._updateCurrentUser(i.user), i;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class en {
                        constructor(e, t) {
                            (this.factorId = e),
                            (this.uid = t.mfaEnrollmentId),
                            (this.enrollmentTime = new Date(t.enrolledAt).toUTCString()),
                            (this.displayName = t.displayName);
                        }
                        static _fromServerResponse(e, t) {
                            return 'phoneInfo' in t ? tn._fromServerResponse(e, t) : 'totpInfo' in t ? nn._fromServerResponse(e, t) : w(e, 'internal-error');
                        }
                    }
                    class tn extends en {
                        constructor(e) {
                            super('phone', e), (this.phoneNumber = e.phoneInfo);
                        }
                        static _fromServerResponse(e, t) {
                            return new tn(t);
                        }
                    }
                    class nn extends en {
                        constructor(e) {
                            super('totp', e);
                        }
                        static _fromServerResponse(e, t) {
                            return new nn(t);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function rn(e, t, n) {
                        var r;
                        S((null === (r = n.url) || void 0 === r ? void 0 : r.length) > 0, e, 'invalid-continue-uri'),
                            S('undefined' === typeof n.dynamicLinkDomain || n.dynamicLinkDomain.length > 0, e, 'invalid-dynamic-link-domain'),
                            (t.continueUrl = n.url),
                            (t.dynamicLinkDomain = n.dynamicLinkDomain),
                            (t.canHandleCodeInApp = n.handleCodeInApp),
                            n.iOS && (S(n.iOS.bundleId.length > 0, e, 'missing-ios-bundle-id'), (t.iOSBundleId = n.iOS.bundleId)),
                            n.android &&
                            (S(n.android.packageName.length > 0, e, 'missing-android-pkg-name'),
                                (t.androidInstallApp = n.android.installApp),
                                (t.androidMinimumVersionCode = n.android.minimumVersion),
                                (t.androidPackageName = n.android.packageName));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function on(e, t, n) {
                        var r;
                        const i = We(e),
                            o = { requestType: 'PASSWORD_RESET', email: t, clientType: 'CLIENT_TYPE_WEB' };
                        if (null === (r = i._getRecaptchaConfig()) || void 0 === r ? void 0 : r.emailPasswordEnabled) {
                            const e = await qe(i, o, 'getOobCode', !0);
                            n && rn(i, e, n), await at(i, e);
                        } else
                            n && rn(i, o, n),
                            await at(i, o).catch(async e => {
                                if ('auth/missing-recaptcha-token' !== e.code) return Promise.reject(e); {
                                    console.log(
                                        'Password resets are protected by reCAPTCHA for this project. Automatically triggering the reCAPTCHA flow and restarting the password reset flow.'
                                    );
                                    const e = await qe(i, o, 'getOobCode', !0);
                                    n && rn(i, e, n), await at(i, e);
                                }
                            });
                    }
                    async function sn(e, t, n) {
                        await tt((0, i.m9)(e), { oobCode: t, newPassword: n });
                    }
                    async function an(e, t) {
                        await rt((0, i.m9)(e), { oobCode: t });
                    }
                    async function un(e, t) {
                        const n = (0, i.m9)(e),
                            r = await tt(n, { oobCode: t }),
                            o = r.requestType;
                        switch ((S(o, n, 'internal-error'), o)) {
                            case 'EMAIL_SIGNIN':
                                break;
                            case 'VERIFY_AND_CHANGE_EMAIL':
                                S(r.newEmail, n, 'internal-error');
                                break;
                            case 'REVERT_SECOND_FACTOR_ADDITION':
                                S(r.mfaInfo, n, 'internal-error');
                            default:
                                S(r.email, n, 'internal-error');
                        }
                        let s = null;
                        return (
                            r.mfaInfo && (s = en._fromServerResponse(We(n), r.mfaInfo)), {
                                data: {
                                    email: ('VERIFY_AND_CHANGE_EMAIL' === r.requestType ? r.newEmail : r.email) || null,
                                    previousEmail: ('VERIFY_AND_CHANGE_EMAIL' === r.requestType ? r.email : r.newEmail) || null,
                                    multiFactorInfo: s
                                },
                                operation: o
                            }
                        );
                    }
                    async function cn(e, t) {
                        const { data: n } = await un((0, i.m9)(e), t);
                        return n.email;
                    }
                    async function ln(e, t, n) {
                        var r;
                        const i = We(e),
                            o = { returnSecureToken: !0, email: t, password: n, clientType: 'CLIENT_TYPE_WEB' };
                        let s;
                        if (null === (r = i._getRecaptchaConfig()) || void 0 === r ? void 0 : r.emailPasswordEnabled) {
                            const e = await qe(i, o, 'signUpPassword');
                            s = Mt(i, e);
                        } else
                            s = Mt(i, o).catch(async e => {
                                if ('auth/missing-recaptcha-token' === e.code) {
                                    console.log(
                                        'Sign-up is protected by reCAPTCHA for this project. Automatically triggering the reCAPTCHA flow and restarting the sign-up flow.'
                                    );
                                    const e = await qe(i, o, 'signUpPassword');
                                    return Mt(i, e);
                                }
                                return Promise.reject(e);
                            });
                        const a = await s.catch(e => Promise.reject(e)),
                            u = await Ft._fromIdTokenResponse(i, 'signIn', a);
                        return await i._updateCurrentUser(u.user), u;
                    }

                    function hn(e, t, n) {
                        return Qt((0, i.m9)(e), Tt.credential(t, n));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function fn(e, t, n) {
                        var r;
                        const i = We(e),
                            o = { requestType: 'EMAIL_SIGNIN', email: t, clientType: 'CLIENT_TYPE_WEB' };

                        function s(e, t) {
                            S(t.handleCodeInApp, i, 'argument-error'), t && rn(i, e, t);
                        }
                        if (null === (r = i._getRecaptchaConfig()) || void 0 === r ? void 0 : r.emailPasswordEnabled) {
                            const e = await qe(i, o, 'getOobCode', !0);
                            s(e, n), await ut(i, e);
                        } else
                            s(o, n),
                            await ut(i, o).catch(async e => {
                                if ('auth/missing-recaptcha-token' !== e.code) return Promise.reject(e); {
                                    console.log(
                                        'Email link sign-in is protected by reCAPTCHA for this project. Automatically triggering the reCAPTCHA flow and restarting the sign-in flow.'
                                    );
                                    const e = await qe(i, o, 'getOobCode', !0);
                                    s(e, n), await ut(i, e);
                                }
                            });
                    }

                    function dn(e, t) {
                        const n = St.parseLink(t);
                        return 'EMAIL_SIGNIN' === (null === n || void 0 === n ? void 0 : n.operation);
                    }
                    async function pn(e, t, n) {
                        const r = (0, i.m9)(e),
                            o = Tt.credentialWithLink(t, n || x());
                        return S(o._tenantId === (r.tenantId || null), r, 'tenant-id-mismatch'), Qt(r, o);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function gn(e, t) {
                        return F(e, 'POST', '/v1/accounts:createAuthUri', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function mn(e, t) {
                        const n = C() ? x() : 'http://localhost',
                            r = { identifier: t, continueUri: n },
                            { signinMethods: o } = await gn((0, i.m9)(e), r);
                        return o || [];
                    }
                    async function vn(e, t) {
                        const n = (0, i.m9)(e),
                            r = await e.getIdToken(),
                            o = { requestType: 'VERIFY_EMAIL', idToken: r };
                        t && rn(n.auth, o, t);
                        const { email: s } = await st(n.auth, o);
                        s !== e.email && (await e.reload());
                    }
                    async function yn(e, t, n) {
                        const r = (0, i.m9)(e),
                            o = await e.getIdToken(),
                            s = { requestType: 'VERIFY_AND_CHANGE_EMAIL', idToken: o, newEmail: t };
                        n && rn(r.auth, s, n);
                        const { email: a } = await ct(r.auth, s);
                        a !== e.email && (await e.reload());
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function wn(e, t) {
                        return F(e, 'POST', '/v1/accounts:update', t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function bn(e, { displayName: t, photoURL: n }) {
                        if (void 0 === t && void 0 === n) return;
                        const r = (0, i.m9)(e),
                            o = await r.getIdToken(),
                            s = { idToken: o, displayName: t, photoUrl: n, returnSecureToken: !0 },
                            a = await J(r, wn(r.auth, s));
                        (r.displayName = a.displayName || null), (r.photoURL = a.photoUrl || null);
                        const u = r.providerData.find(({ providerId: e }) => 'password' === e);
                        u && ((u.displayName = r.displayName), (u.photoURL = r.photoURL)), await r._updateTokensIfNecessary(a);
                    }

                    function _n(e, t) {
                        return En((0, i.m9)(e), t, null);
                    }

                    function In(e, t) {
                        return En((0, i.m9)(e), null, t);
                    }
                    async function En(e, t, n) {
                        const { auth: r } = e,
                        i = await e.getIdToken(),
                            o = { idToken: i, returnSecureToken: !0 };
                        t && (o.email = t), n && (o.password = n);
                        const s = await J(e, nt(r, o));
                        await e._updateTokensIfNecessary(s, !0);
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Sn(e) {
                        var t, n;
                        if (!e) return null;
                        const { providerId: r } = e,
                        i = e.rawUserInfo ? JSON.parse(e.rawUserInfo) : {},
                            o = e.isNewUser || 'identitytoolkit#SignupNewUserResponse' === e.kind;
                        if (!r && (null === e || void 0 === e ? void 0 : e.idToken)) {
                            const r = null === (n = null === (t = Y(e.idToken)) || void 0 === t ? void 0 : t.firebase) || void 0 === n ? void 0 : n['sign_in_provider'];
                            if (r) {
                                const e = 'anonymous' !== r && 'custom' !== r ? r : null;
                                return new Tn(o, e);
                            }
                        }
                        if (!r) return null;
                        switch (r) {
                            case 'facebook.com':
                                return new xn(o, i);
                            case 'github.com':
                                return new Cn(o, i);
                            case 'google.com':
                                return new kn(o, i);
                            case 'twitter.com':
                                return new On(o, i, e.screenName || null);
                            case 'custom':
                            case 'anonymous':
                                return new Tn(o, null);
                            default:
                                return new Tn(o, r, i);
                        }
                    }
                    class Tn {
                        constructor(e, t, n = {}) {
                            (this.isNewUser = e), (this.providerId = t), (this.profile = n);
                        }
                    }
                    class An extends Tn {
                        constructor(e, t, n, r) {
                            super(e, t, n), (this.username = r);
                        }
                    }
                    class xn extends Tn {
                        constructor(e, t) {
                            super(e, 'facebook.com', t);
                        }
                    }
                    class Cn extends An {
                        constructor(e, t) {
                            super(
                                e,
                                'github.com',
                                t,
                                'string' === typeof(null === t || void 0 === t ? void 0 : t.login) ? (null === t || void 0 === t ? void 0 : t.login) : null
                            );
                        }
                    }
                    class kn extends Tn {
                        constructor(e, t) {
                            super(e, 'google.com', t);
                        }
                    }
                    class On extends An {
                        constructor(e, t, n) {
                            super(e, 'twitter.com', t, n);
                        }
                    }

                    function Nn(e) {
                        const { user: t, _tokenResponse: n } = e;
                        return t.isAnonymous && !n ? { providerId: null, isNewUser: !1, profile: null } : Sn(n);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Rn {
                        constructor(e, t, n) {
                            (this.type = e), (this.credential = t), (this.auth = n);
                        }
                        static _fromIdtoken(e, t) {
                            return new Rn('enroll', e, t);
                        }
                        static _fromMfaPendingCredential(e) {
                            return new Rn('signin', e);
                        }
                        toJSON() {
                            const e = 'enroll' === this.type ? 'idToken' : 'pendingCredential';
                            return { multiFactorSession: {
                                    [e]: this.credential } };
                        }
                        static fromJSON(e) {
                            var t, n;
                            if (null === e || void 0 === e ? void 0 : e.multiFactorSession) {
                                if (null === (t = e.multiFactorSession) || void 0 === t ? void 0 : t.pendingCredential)
                                    return Rn._fromMfaPendingCredential(e.multiFactorSession.pendingCredential);
                                if (null === (n = e.multiFactorSession) || void 0 === n ? void 0 : n.idToken) return Rn._fromIdtoken(e.multiFactorSession.idToken);
                            }
                            return null;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Pn {
                        constructor(e, t, n) {
                            (this.session = e), (this.hints = t), (this.signInResolver = n);
                        }
                        static _fromError(e, t) {
                            const n = We(e),
                                r = t.customData._serverResponse,
                                i = (r.mfaInfo || []).map(e => en._fromServerResponse(n, e));
                            S(r.mfaPendingCredential, n, 'internal-error');
                            const o = Rn._fromMfaPendingCredential(r.mfaPendingCredential);
                            return new Pn(o, i, async e => {
                                const i = await e._process(n, o);
                                delete r.mfaInfo, delete r.mfaPendingCredential;
                                const s = Object.assign(Object.assign({}, r), { idToken: i.idToken, refreshToken: i.refreshToken });
                                switch (t.operationType) {
                                    case 'signIn':
                                        const e = await Ft._fromIdTokenResponse(n, t.operationType, s);
                                        return await n._updateCurrentUser(e.user), e;
                                    case 'reauthenticate':
                                        return S(t.user, n, 'internal-error'), Ft._forOperation(t.user, t.operationType, s);
                                    default:
                                        w(n, 'internal-error');
                                }
                            });
                        }
                        async resolveSignIn(e) {
                            const t = e;
                            return this.signInResolver(t);
                        }
                    }

                    function Dn(e, t) {
                        var n;
                        const r = (0, i.m9)(e),
                            o = t;
                        return (
                            S(t.customData.operationType, r, 'argument-error'),
                            S(null === (n = o.customData._serverResponse) || void 0 === n ? void 0 : n.mfaPendingCredential, r, 'argument-error'),
                            Pn._fromError(r, o)
                        );
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Ln(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaEnrollment:start', M(e, t));
                    }

                    function jn(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaEnrollment:finalize', M(e, t));
                    }

                    function Mn(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaEnrollment:start', M(e, t));
                    }

                    function Fn(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaEnrollment:finalize', M(e, t));
                    }

                    function Un(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaEnrollment:withdraw', M(e, t));
                    }
                    class Vn {
                        constructor(e) {
                            (this.user = e),
                            (this.enrolledFactors = []),
                            e._onReload(t => {
                                t.mfaInfo && (this.enrolledFactors = t.mfaInfo.map(t => en._fromServerResponse(e.auth, t)));
                            });
                        }
                        static _fromUser(e) {
                            return new Vn(e);
                        }
                        async getSession() {
                            return Rn._fromIdtoken(await this.user.getIdToken(), this.user.auth);
                        }
                        async enroll(e, t) {
                            const n = e,
                                r = await this.getSession(),
                                i = await J(this.user, n._process(this.user.auth, r, t));
                            return await this.user._updateTokensIfNecessary(i), this.user.reload();
                        }
                        async unenroll(e) {
                            const t = 'string' === typeof e ? e : e.uid,
                                n = await this.user.getIdToken();
                            try {
                                const e = await J(this.user, Un(this.user.auth, { idToken: n, mfaEnrollmentId: t }));
                                (this.enrolledFactors = this.enrolledFactors.filter(({ uid: e }) => e !== t)),
                                await this.user._updateTokensIfNecessary(e),
                                    await this.user.reload();
                            } catch (r) {
                                throw r;
                            }
                        }
                    }
                    const Bn = new WeakMap();

                    function $n(e) {
                        const t = (0, i.m9)(e);
                        return Bn.has(t) || Bn.set(t, Vn._fromUser(t)), Bn.get(t);
                    }
                    const qn = '__sak';
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class zn {
                        constructor(e, t) {
                            (this.storageRetriever = e), (this.type = t);
                        }
                        _isAvailable() {
                            try {
                                return this.storage ? (this.storage.setItem(qn, '1'), this.storage.removeItem(qn), Promise.resolve(!0)) : Promise.resolve(!1);
                            } catch (e) {
                                return Promise.resolve(!1);
                            }
                        }
                        _set(e, t) {
                            return this.storage.setItem(e, JSON.stringify(t)), Promise.resolve();
                        }
                        _get(e) {
                            const t = this.storage.getItem(e);
                            return Promise.resolve(t ? JSON.parse(t) : null);
                        }
                        _remove(e) {
                            return this.storage.removeItem(e), Promise.resolve();
                        }
                        get storage() {
                            return this.storageRetriever();
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Gn() {
                        const e = (0, i.z$)();
                        return ye(e) || Se(e);
                    }
                    const Wn = 1e3,
                        Hn = 10;
                    class Kn extends zn {
                        constructor() {
                            super(() => window.localStorage, 'LOCAL'),
                                (this.boundEventHandler = (e, t) => this.onStorageEvent(e, t)),
                                (this.listeners = {}),
                                (this.localCache = {}),
                                (this.pollTimer = null),
                                (this.safariLocalStorageNotSynced = Gn() && ke()),
                                (this.fallbackToPolling = Ce()),
                                (this._shouldAllowMigration = !0);
                        }
                        forAllChangedKeys(e) {
                            for (const t of Object.keys(this.listeners)) {
                                const n = this.storage.getItem(t),
                                    r = this.localCache[t];
                                n !== r && e(t, r, n);
                            }
                        }
                        onStorageEvent(e, t = !1) {
                            if (!e.key)
                                return void this.forAllChangedKeys((e, t, n) => {
                                    this.notifyListeners(e, n);
                                });
                            const n = e.key;
                            if ((t ? this.detachListener() : this.stopPolling(), this.safariLocalStorageNotSynced)) {
                                const r = this.storage.getItem(n);
                                if (e.newValue !== r) null !== e.newValue ? this.storage.setItem(n, e.newValue) : this.storage.removeItem(n);
                                else if (this.localCache[n] === e.newValue && !t) return;
                            }
                            const r = () => {
                                    const e = this.storage.getItem(n);
                                    (t || this.localCache[n] !== e) && this.notifyListeners(n, e);
                                },
                                i = this.storage.getItem(n);
                            xe() && i !== e.newValue && e.newValue !== e.oldValue ? setTimeout(r, Hn) : r();
                        }
                        notifyListeners(e, t) {
                            this.localCache[e] = t;
                            const n = this.listeners[e];
                            if (n)
                                for (const r of Array.from(n)) r(t ? JSON.parse(t) : t);
                        }
                        startPolling() {
                            this.stopPolling(),
                                (this.pollTimer = setInterval(() => {
                                    this.forAllChangedKeys((e, t, n) => {
                                        this.onStorageEvent(new StorageEvent('storage', { key: e, oldValue: t, newValue: n }), !0);
                                    });
                                }, Wn));
                        }
                        stopPolling() {
                            this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
                        }
                        attachListener() {
                            window.addEventListener('storage', this.boundEventHandler);
                        }
                        detachListener() {
                            window.removeEventListener('storage', this.boundEventHandler);
                        }
                        _addListener(e, t) {
                            0 === Object.keys(this.listeners).length && (this.fallbackToPolling ? this.startPolling() : this.attachListener()),
                                this.listeners[e] || ((this.listeners[e] = new Set()), (this.localCache[e] = this.storage.getItem(e))),
                                this.listeners[e].add(t);
                        }
                        _removeListener(e, t) {
                            this.listeners[e] && (this.listeners[e].delete(t), 0 === this.listeners[e].size && delete this.listeners[e]),
                                0 === Object.keys(this.listeners).length && (this.detachListener(), this.stopPolling());
                        }
                        async _set(e, t) {
                            await super._set(e, t), (this.localCache[e] = JSON.stringify(t));
                        }
                        async _get(e) {
                            const t = await super._get(e);
                            return (this.localCache[e] = JSON.stringify(t)), t;
                        }
                        async _remove(e) {
                            await super._remove(e), delete this.localCache[e];
                        }
                    }
                    Kn.type = 'LOCAL';
                    const Qn = Kn;
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Yn extends zn {
                        constructor() {
                            super(() => window.sessionStorage, 'SESSION');
                        }
                        _addListener(e, t) {}
                        _removeListener(e, t) {}
                    }
                    Yn.type = 'SESSION';
                    const Xn = Yn;
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Jn(e) {
                        return Promise.all(
                            e.map(async e => {
                                try {
                                    const t = await e;
                                    return { fulfilled: !0, value: t };
                                } catch (t) {
                                    return { fulfilled: !1, reason: t };
                                }
                            })
                        );
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Zn {
                        constructor(e) {
                            (this.eventTarget = e), (this.handlersMap = {}), (this.boundEventHandler = this.handleEvent.bind(this));
                        }
                        static _getInstance(e) {
                            const t = this.receivers.find(t => t.isListeningto(e));
                            if (t) return t;
                            const n = new Zn(e);
                            return this.receivers.push(n), n;
                        }
                        isListeningto(e) {
                            return this.eventTarget === e;
                        }
                        async handleEvent(e) {
                            const t = e,
                                { eventId: n, eventType: r, data: i } = t.data,
                                o = this.handlersMap[r];
                            if (!(null === o || void 0 === o ? void 0 : o.size)) return;
                            t.ports[0].postMessage({ status: 'ack', eventId: n, eventType: r });
                            const s = Array.from(o).map(async e => e(t.origin, i)),
                                a = await Jn(s);
                            t.ports[0].postMessage({ status: 'done', eventId: n, eventType: r, response: a });
                        }
                        _subscribe(e, t) {
                            0 === Object.keys(this.handlersMap).length && this.eventTarget.addEventListener('message', this.boundEventHandler),
                                this.handlersMap[e] || (this.handlersMap[e] = new Set()),
                                this.handlersMap[e].add(t);
                        }
                        _unsubscribe(e, t) {
                            this.handlersMap[e] && t && this.handlersMap[e].delete(t),
                                (t && 0 !== this.handlersMap[e].size) || delete this.handlersMap[e],
                                0 === Object.keys(this.handlersMap).length && this.eventTarget.removeEventListener('message', this.boundEventHandler);
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function er(e = '', t = 10) {
                        let n = '';
                        for (let r = 0; r < t; r++) n += Math.floor(10 * Math.random());
                        return e + n;
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    Zn.receivers = [];
                    class tr {
                        constructor(e) {
                            (this.target = e), (this.handlers = new Set());
                        }
                        removeMessageHandler(e) {
                            e.messageChannel && (e.messageChannel.port1.removeEventListener('message', e.onMessage), e.messageChannel.port1.close()),
                                this.handlers.delete(e);
                        }
                        async _send(e, t, n = 50) {
                            const r = 'undefined' !== typeof MessageChannel ? new MessageChannel() : null;
                            if (!r) throw new Error('connection_unavailable');
                            let i, o;
                            return new Promise((s, a) => {
                                const u = er('', 20);
                                r.port1.start();
                                const c = setTimeout(() => {
                                    a(new Error('unsupported_event'));
                                }, n);
                                (o = {
                                    messageChannel: r,
                                    onMessage(e) {
                                        const t = e;
                                        if (t.data.eventId === u)
                                            switch (t.data.status) {
                                                case 'ack':
                                                    clearTimeout(c),
                                                        (i = setTimeout(() => {
                                                            a(new Error('timeout'));
                                                        }, 3e3));
                                                    break;
                                                case 'done':
                                                    clearTimeout(i), s(t.data.response);
                                                    break;
                                                default:
                                                    clearTimeout(c), clearTimeout(i), a(new Error('invalid_response'));
                                                    break;
                                            }
                                    }
                                }),
                                this.handlers.add(o),
                                    r.port1.addEventListener('message', o.onMessage),
                                    this.target.postMessage({ eventType: e, eventId: u, data: t }, [r.port2]);
                            }).finally(() => {
                                o && this.removeMessageHandler(o);
                            });
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function nr() {
                        return window;
                    }

                    function rr(e) {
                        nr().location.href = e;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC.
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function ir() {
                        return 'undefined' !== typeof nr()['WorkerGlobalScope'] && 'function' === typeof nr()['importScripts'];
                    }
                    async function or() {
                        if (!(null === navigator || void 0 === navigator ? void 0 : navigator.serviceWorker)) return null;
                        try {
                            const e = await navigator.serviceWorker.ready;
                            return e.active;
                        } catch (e) {
                            return null;
                        }
                    }

                    function sr() {
                        var e;
                        return (
                            (null === (e = null === navigator || void 0 === navigator ? void 0 : navigator.serviceWorker) || void 0 === e ? void 0 : e.controller) ||
                            null
                        );
                    }

                    function ar() {
                        return ir() ? self : null;
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const ur = 'firebaseLocalStorageDb',
                        cr = 1,
                        lr = 'firebaseLocalStorage',
                        hr = 'fbase_key';
                    class fr {
                        constructor(e) {
                            this.request = e;
                        }
                        toPromise() {
                            return new Promise((e, t) => {
                                this.request.addEventListener('success', () => {
                                        e(this.request.result);
                                    }),
                                    this.request.addEventListener('error', () => {
                                        t(this.request.error);
                                    });
                            });
                        }
                    }

                    function dr(e, t) {
                        return e.transaction([lr], t ? 'readwrite' : 'readonly').objectStore(lr);
                    }

                    function pr() {
                        const e = indexedDB.deleteDatabase(ur);
                        return new fr(e).toPromise();
                    }

                    function gr() {
                        const e = indexedDB.open(ur, cr);
                        return new Promise((t, n) => {
                            e.addEventListener('error', () => {
                                    n(e.error);
                                }),
                                e.addEventListener('upgradeneeded', () => {
                                    const t = e.result;
                                    try {
                                        t.createObjectStore(lr, { keyPath: hr });
                                    } catch (r) {
                                        n(r);
                                    }
                                }),
                                e.addEventListener('success', async() => {
                                    const n = e.result;
                                    n.objectStoreNames.contains(lr) ? t(n) : (n.close(), await pr(), t(await gr()));
                                });
                        });
                    }
                    async function mr(e, t, n) {
                        const r = dr(e, !0).put({
                            [hr]: t, value: n });
                        return new fr(r).toPromise();
                    }
                    async function vr(e, t) {
                        const n = dr(e, !1).get(t),
                            r = await new fr(n).toPromise();
                        return void 0 === r ? null : r.value;
                    }

                    function yr(e, t) {
                        const n = dr(e, !0).delete(t);
                        return new fr(n).toPromise();
                    }
                    const wr = 800,
                        br = 3;
                    class _r {
                        constructor() {
                            (this.type = 'LOCAL'),
                            (this._shouldAllowMigration = !0),
                            (this.listeners = {}),
                            (this.localCache = {}),
                            (this.pollTimer = null),
                            (this.pendingWrites = 0),
                            (this.receiver = null),
                            (this.sender = null),
                            (this.serviceWorkerReceiverAvailable = !1),
                            (this.activeServiceWorker = null),
                            (this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(
                                () => {},
                                () => {}
                            ));
                        }
                        async _openDb() {
                            return this.db || (this.db = await gr()), this.db;
                        }
                        async _withRetries(e) {
                            let t = 0;
                            while (1)
                                try {
                                    const t = await this._openDb();
                                    return await e(t);
                                } catch (n) {
                                    if (t++ > br) throw n;
                                    this.db && (this.db.close(), (this.db = void 0));
                                }
                        }
                        async initializeServiceWorkerMessaging() {
                            return ir() ? this.initializeReceiver() : this.initializeSender();
                        }
                        async initializeReceiver() {
                            (this.receiver = Zn._getInstance(ar())),
                            this.receiver._subscribe('keyChanged', async(e, t) => {
                                    const n = await this._poll();
                                    return { keyProcessed: n.includes(t.key) };
                                }),
                                this.receiver._subscribe('ping', async(e, t) => ['keyChanged']);
                        }
                        async initializeSender() {
                            var e, t;
                            if (((this.activeServiceWorker = await or()), !this.activeServiceWorker)) return;
                            this.sender = new tr(this.activeServiceWorker);
                            const n = await this.sender._send('ping', {}, 800);
                            n &&
                                (null === (e = n[0]) || void 0 === e ? void 0 : e.fulfilled) &&
                                (null === (t = n[0]) || void 0 === t ? void 0 : t.value.includes('keyChanged')) &&
                                (this.serviceWorkerReceiverAvailable = !0);
                        }
                        async notifyServiceWorker(e) {
                            if (this.sender && this.activeServiceWorker && sr() === this.activeServiceWorker)
                                try {
                                    await this.sender._send('keyChanged', { key: e }, this.serviceWorkerReceiverAvailable ? 800 : 50);
                                } catch (t) {}
                        }
                        async _isAvailable() {
                            try {
                                if (!indexedDB) return !1;
                                const e = await gr();
                                return await mr(e, qn, '1'), await yr(e, qn), !0;
                            } catch (e) {}
                            return !1;
                        }
                        async _withPendingWrite(e) {
                            this.pendingWrites++;
                            try {
                                await e();
                            } finally {
                                this.pendingWrites--;
                            }
                        }
                        async _set(e, t) {
                            return this._withPendingWrite(
                                async() => (await this._withRetries(n => mr(n, e, t)), (this.localCache[e] = t), this.notifyServiceWorker(e))
                            );
                        }
                        async _get(e) {
                            const t = await this._withRetries(t => vr(t, e));
                            return (this.localCache[e] = t), t;
                        }
                        async _remove(e) {
                            return this._withPendingWrite(async() => (await this._withRetries(t => yr(t, e)), delete this.localCache[e], this.notifyServiceWorker(e)));
                        }
                        async _poll() {
                            const e = await this._withRetries(e => {
                                const t = dr(e, !1).getAll();
                                return new fr(t).toPromise();
                            });
                            if (!e) return [];
                            if (0 !== this.pendingWrites) return [];
                            const t = [],
                                n = new Set();
                            for (const { fbase_key: r, value: i }
                                of e)
                                n.add(r), JSON.stringify(this.localCache[r]) !== JSON.stringify(i) && (this.notifyListeners(r, i), t.push(r));
                            for (const r of Object.keys(this.localCache)) this.localCache[r] && !n.has(r) && (this.notifyListeners(r, null), t.push(r));
                            return t;
                        }
                        notifyListeners(e, t) {
                            this.localCache[e] = t;
                            const n = this.listeners[e];
                            if (n)
                                for (const r of Array.from(n)) r(t);
                        }
                        startPolling() {
                            this.stopPolling(), (this.pollTimer = setInterval(async() => this._poll(), wr));
                        }
                        stopPolling() {
                            this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
                        }
                        _addListener(e, t) {
                            0 === Object.keys(this.listeners).length && this.startPolling(),
                                this.listeners[e] || ((this.listeners[e] = new Set()), this._get(e)),
                                this.listeners[e].add(t);
                        }
                        _removeListener(e, t) {
                            this.listeners[e] && (this.listeners[e].delete(t), 0 === this.listeners[e].size && delete this.listeners[e]),
                                0 === Object.keys(this.listeners).length && this.stopPolling();
                        }
                    }
                    _r.type = 'LOCAL';
                    const Ir = _r;
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Er(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaSignIn:start', M(e, t));
                    }

                    function Sr(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaSignIn:finalize', M(e, t));
                    }

                    function Tr(e, t) {
                        return F(e, 'POST', '/v2/accounts/mfaSignIn:finalize', M(e, t));
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Ar = 500,
                        xr = 6e4,
                        Cr = 1e12;
                    class kr {
                        constructor(e) {
                            (this.auth = e), (this.counter = Cr), (this._widgets = new Map());
                        }
                        render(e, t) {
                            const n = this.counter;
                            return this._widgets.set(n, new Or(e, this.auth.name, t || {})), this.counter++, n;
                        }
                        reset(e) {
                            var t;
                            const n = e || Cr;
                            null === (t = this._widgets.get(n)) || void 0 === t || t.delete(), this._widgets.delete(n);
                        }
                        getResponse(e) {
                            var t;
                            const n = e || Cr;
                            return (null === (t = this._widgets.get(n)) || void 0 === t ? void 0 : t.getResponse()) || '';
                        }
                        async execute(e) {
                            var t;
                            const n = e || Cr;
                            return null === (t = this._widgets.get(n)) || void 0 === t || t.execute(), '';
                        }
                    }
                    class Or {
                        constructor(e, t, n) {
                            (this.params = n),
                            (this.timerId = null),
                            (this.deleted = !1),
                            (this.responseToken = null),
                            (this.clickHandler = () => {
                                this.execute();
                            });
                            const r = 'string' === typeof e ? document.getElementById(e) : e;
                            S(r, 'argument-error', { appName: t }),
                                (this.container = r),
                                (this.isVisible = 'invisible' !== this.params.size),
                                this.isVisible ? this.execute() : this.container.addEventListener('click', this.clickHandler);
                        }
                        getResponse() {
                            return this.checkIfDeleted(), this.responseToken;
                        }
                        delete() {
                            this.checkIfDeleted(),
                                (this.deleted = !0),
                                this.timerId && (clearTimeout(this.timerId), (this.timerId = null)),
                                this.container.removeEventListener('click', this.clickHandler);
                        }
                        execute() {
                            this.checkIfDeleted(),
                                this.timerId ||
                                (this.timerId = window.setTimeout(() => {
                                    this.responseToken = Nr(50);
                                    const { callback: e, 'expired-callback': t } = this.params;
                                    if (e)
                                        try {
                                            e(this.responseToken);
                                        } catch (n) {}
                                    this.timerId = window.setTimeout(() => {
                                        if (((this.timerId = null), (this.responseToken = null), t))
                                            try {
                                                t();
                                            } catch (n) {}
                                        this.isVisible && this.execute();
                                    }, xr);
                                }, Ar));
                        }
                        checkIfDeleted() {
                            if (this.deleted) throw new Error('reCAPTCHA mock was already deleted!');
                        }
                    }

                    function Nr(e) {
                        const t = [],
                            n = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
                        for (let r = 0; r < e; r++) t.push(n.charAt(Math.floor(Math.random() * n.length)));
                        return t.join('');
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Rr = Fe('rcb'),
                        Pr = new R(3e4, 6e4),
                        Dr = 'https://www.google.com/recaptcha/api.js?';
                    class Lr {
                        constructor() {
                            var e;
                            (this.hostLanguage = ''),
                            (this.counter = 0),
                            (this.librarySeparatelyLoaded = !!(null === (e = nr().grecaptcha) || void 0 === e ? void 0 : e.render));
                        }
                        load(e, t = '') {
                            return (
                                S(jr(t), e, 'argument-error'),
                                this.shouldResolveImmediately(t) && Pe(nr().grecaptcha) ?
                                Promise.resolve(nr().grecaptcha) :
                                new Promise((n, r) => {
                                    const o = nr().setTimeout(() => {
                                        r(b(e, 'network-request-failed'));
                                    }, Pr.get());
                                    nr()[Rr] = () => {
                                        nr().clearTimeout(o), delete nr()[Rr];
                                        const i = nr().grecaptcha;
                                        if (!i || !Pe(i)) return void r(b(e, 'internal-error'));
                                        const s = i.render;
                                        (i.render = (e, t) => {
                                            const n = s(e, t);
                                            return this.counter++, n;
                                        }),
                                        (this.hostLanguage = t),
                                        n(i);
                                    };
                                    const s = `${Dr}?${(0, i.xO)({ onload: Rr, render: 'explicit', hl: t })}`;
                                    Me(s).catch(() => {
                                        clearTimeout(o), r(b(e, 'internal-error'));
                                    });
                                })
                            );
                        }
                        clearedOneInstance() {
                            this.counter--;
                        }
                        shouldResolveImmediately(e) {
                            var t;
                            return (!!(null === (t = nr().grecaptcha) || void 0 === t ? void 0 : t.render) &&
                                (e === this.hostLanguage || this.counter > 0 || this.librarySeparatelyLoaded)
                            );
                        }
                    }

                    function jr(e) {
                        return e.length <= 6 && /^\s*[a-zA-Z0-9\-]*\s*$/.test(e);
                    }
                    class Mr {
                        async load(e) {
                            return new kr(e);
                        }
                        clearedOneInstance() {}
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Fr = 'recaptcha',
                        Ur = { theme: 'light', type: 'image' };
                    class Vr {
                        constructor(e, t = Object.assign({}, Ur), n) {
                            (this.parameters = t),
                            (this.type = Fr),
                            (this.destroyed = !1),
                            (this.widgetId = null),
                            (this.tokenChangeListeners = new Set()),
                            (this.renderPromise = null),
                            (this.recaptcha = null),
                            (this.auth = We(n)),
                            (this.isInvisible = 'invisible' === this.parameters.size),
                            S('undefined' !== typeof document, this.auth, 'operation-not-supported-in-this-environment');
                            const r = 'string' === typeof e ? document.getElementById(e) : e;
                            S(r, this.auth, 'argument-error'),
                                (this.container = r),
                                (this.parameters.callback = this.makeTokenCallback(this.parameters.callback)),
                                (this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting ? new Mr() : new Lr()),
                                this.validateStartingState();
                        }
                        async verify() {
                            this.assertNotDestroyed();
                            const e = await this.render(),
                                t = this.getAssertedRecaptcha(),
                                n = t.getResponse(e);
                            return (
                                n ||
                                new Promise(n => {
                                    const r = e => {
                                        e && (this.tokenChangeListeners.delete(r), n(e));
                                    };
                                    this.tokenChangeListeners.add(r), this.isInvisible && t.execute(e);
                                })
                            );
                        }
                        render() {
                            try {
                                this.assertNotDestroyed();
                            } catch (e) {
                                return Promise.reject(e);
                            }
                            return (
                                this.renderPromise ||
                                (this.renderPromise = this.makeRenderPromise().catch(e => {
                                    throw ((this.renderPromise = null), e);
                                })),
                                this.renderPromise
                            );
                        }
                        _reset() {
                            this.assertNotDestroyed(), null !== this.widgetId && this.getAssertedRecaptcha().reset(this.widgetId);
                        }
                        clear() {
                            this.assertNotDestroyed(),
                                (this.destroyed = !0),
                                this._recaptchaLoader.clearedOneInstance(),
                                this.isInvisible ||
                                this.container.childNodes.forEach(e => {
                                    this.container.removeChild(e);
                                });
                        }
                        validateStartingState() {
                            S(!this.parameters.sitekey, this.auth, 'argument-error'),
                                S(this.isInvisible || !this.container.hasChildNodes(), this.auth, 'argument-error'),
                                S('undefined' !== typeof document, this.auth, 'operation-not-supported-in-this-environment');
                        }
                        makeTokenCallback(e) {
                            return t => {
                                if ((this.tokenChangeListeners.forEach(e => e(t)), 'function' === typeof e)) e(t);
                                else if ('string' === typeof e) {
                                    const n = nr()[e];
                                    'function' === typeof n && n(t);
                                }
                            };
                        }
                        assertNotDestroyed() {
                            S(!this.destroyed, this.auth, 'internal-error');
                        }
                        async makeRenderPromise() {
                            if ((await this.init(), !this.widgetId)) {
                                let e = this.container;
                                if (!this.isInvisible) {
                                    const t = document.createElement('div');
                                    e.appendChild(t), (e = t);
                                }
                                this.widgetId = this.getAssertedRecaptcha().render(e, this.parameters);
                            }
                            return this.widgetId;
                        }
                        async init() {
                            S(C() && !ir(), this.auth, 'internal-error'),
                                await Br(),
                                (this.recaptcha = await this._recaptchaLoader.load(this.auth, this.auth.languageCode || void 0));
                            const e = await Ne(this.auth);
                            S(e, this.auth, 'internal-error'), (this.parameters.sitekey = e);
                        }
                        getAssertedRecaptcha() {
                            return S(this.recaptcha, this.auth, 'internal-error'), this.recaptcha;
                        }
                    }

                    function Br() {
                        let e = null;
                        return new Promise(t => {
                            'complete' !== document.readyState ? ((e = () => t()), window.addEventListener('load', e)) : t();
                        }).catch(t => {
                            throw (e && window.removeEventListener('load', e), t);
                        });
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class $r {
                        constructor(e, t) {
                            (this.verificationId = e), (this.onConfirmation = t);
                        }
                        confirm(e) {
                            const t = _t._fromVerification(this.verificationId, e);
                            return this.onConfirmation(t);
                        }
                    }
                    async function qr(e, t, n) {
                        const r = We(e),
                            o = await Wr(r, t, (0, i.m9)(n));
                        return new $r(o, e => Qt(r, e));
                    }
                    async function zr(e, t, n) {
                        const r = (0, i.m9)(e);
                        await Wt(!1, r, 'phone');
                        const o = await Wr(r.auth, t, (0, i.m9)(n));
                        return new $r(o, e => Yt(r, e));
                    }
                    async function Gr(e, t, n) {
                        const r = (0, i.m9)(e),
                            o = await Wr(r.auth, t, (0, i.m9)(n));
                        return new $r(o, e => Xt(r, e));
                    }
                    async function Wr(e, t, n) {
                        var r;
                        const i = await n.verify();
                        try {
                            let o;
                            if (
                                (S('string' === typeof i, e, 'argument-error'),
                                    S(n.type === Fr, e, 'argument-error'),
                                    (o = 'string' === typeof t ? { phoneNumber: t } : t),
                                    'session' in o)
                            ) {
                                const t = o.session;
                                if ('phoneNumber' in o) {
                                    S('enroll' === t.type, e, 'internal-error');
                                    const n = await Ln(e, { idToken: t.credential, phoneEnrollmentInfo: { phoneNumber: o.phoneNumber, recaptchaToken: i } });
                                    return n.phoneSessionInfo.sessionInfo;
                                } {
                                    S('signin' === t.type, e, 'internal-error');
                                    const n = (null === (r = o.multiFactorHint) || void 0 === r ? void 0 : r.uid) || o.multiFactorUid;
                                    S(n, e, 'missing-multi-factor-info');
                                    const s = await Er(e, { mfaPendingCredential: t.credential, mfaEnrollmentId: n, phoneSignInInfo: { recaptchaToken: i } });
                                    return s.phoneResponseInfo.sessionInfo;
                                }
                            } {
                                const { sessionInfo: t } = await mt(e, { phoneNumber: o.phoneNumber, recaptchaToken: i });
                                return t;
                            }
                        } finally {
                            n._reset();
                        }
                    }
                    async function Hr(e, t) {
                        await Gt((0, i.m9)(e), t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class Kr {
                        constructor(e) {
                            (this.providerId = Kr.PROVIDER_ID), (this.auth = We(e));
                        }
                        verifyPhoneNumber(e, t) {
                            return Wr(this.auth, e, (0, i.m9)(t));
                        }
                        static credential(e, t) {
                            return _t._fromVerification(e, t);
                        }
                        static credentialFromResult(e) {
                            const t = e;
                            return Kr.credentialFromTaggedObject(t);
                        }
                        static credentialFromError(e) {
                            return Kr.credentialFromTaggedObject(e.customData || {});
                        }
                        static credentialFromTaggedObject({ _tokenResponse: e }) {
                            if (!e) return null;
                            const { phoneNumber: t, temporaryProof: n } = e;
                            return t && n ? _t._fromTokenResponse(t, n) : null;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Qr(e, t) {
                        return t ? he(t) : (S(e._popupRedirectResolver, e, 'argument-error'), e._popupRedirectResolver);
                    }
                    /**
                     * @license
                     * Copyright 2019 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    (Kr.PROVIDER_ID = 'phone'), (Kr.PHONE_SIGN_IN_METHOD = 'phone');
                    class Yr extends et {
                        constructor(e) {
                            super('custom', 'custom'), (this.params = e);
                        }
                        _getIdTokenResponse(e) {
                            return dt(e, this._buildIdpRequest());
                        }
                        _linkToIdToken(e, t) {
                            return dt(e, this._buildIdpRequest(t));
                        }
                        _getReauthenticationResolver(e) {
                            return dt(e, this._buildIdpRequest());
                        }
                        _buildIdpRequest(e) {
                            const t = {
                                requestUri: this.params.requestUri,
                                sessionId: this.params.sessionId,
                                postBody: this.params.postBody,
                                tenantId: this.params.tenantId,
                                pendingToken: this.params.pendingToken,
                                returnSecureToken: !0,
                                returnIdpCredential: !0
                            };
                            return e && (t.idToken = e), t;
                        }
                    }

                    function Xr(e) {
                        return Kt(e.auth, new Yr(e), e.bypassAuthState);
                    }

                    function Jr(e) {
                        const { auth: t, user: n } = e;
                        return S(n, t, 'internal-error'), Ht(n, new Yr(e), e.bypassAuthState);
                    }
                    async function Zr(e) {
                        const { auth: t, user: n } = e;
                        return S(n, t, 'internal-error'), Gt(n, new Yr(e), e.bypassAuthState);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class ei {
                        constructor(e, t, n, r, i = !1) {
                            (this.auth = e),
                            (this.resolver = n),
                            (this.user = r),
                            (this.bypassAuthState = i),
                            (this.pendingPromise = null),
                            (this.eventManager = null),
                            (this.filter = Array.isArray(t) ? t : [t]);
                        }
                        execute() {
                            return new Promise(async(e, t) => {
                                this.pendingPromise = { resolve: e, reject: t };
                                try {
                                    (this.eventManager = await this.resolver._initialize(this.auth)), await this.onExecution(), this.eventManager.registerConsumer(this);
                                } catch (n) {
                                    this.reject(n);
                                }
                            });
                        }
                        async onAuthEvent(e) {
                            const { urlResponse: t, sessionId: n, postBody: r, tenantId: i, error: o, type: s } = e;
                            if (o) return void this.reject(o);
                            const a = {
                                auth: this.auth,
                                requestUri: t,
                                sessionId: n,
                                tenantId: i || void 0,
                                postBody: r || void 0,
                                user: this.user,
                                bypassAuthState: this.bypassAuthState
                            };
                            try {
                                this.resolve(await this.getIdpTask(s)(a));
                            } catch (u) {
                                this.reject(u);
                            }
                        }
                        onError(e) {
                            this.reject(e);
                        }
                        getIdpTask(e) {
                            switch (e) {
                                case 'signInViaPopup':
                                case 'signInViaRedirect':
                                    return Xr;
                                case 'linkViaPopup':
                                case 'linkViaRedirect':
                                    return Zr;
                                case 'reauthViaPopup':
                                case 'reauthViaRedirect':
                                    return Jr;
                                default:
                                    w(this.auth, 'internal-error');
                            }
                        }
                        resolve(e) {
                            A(this.pendingPromise, 'Pending promise was never set'), this.pendingPromise.resolve(e), this.unregisterAndCleanUp();
                        }
                        reject(e) {
                            A(this.pendingPromise, 'Pending promise was never set'), this.pendingPromise.reject(e), this.unregisterAndCleanUp();
                        }
                        unregisterAndCleanUp() {
                            this.eventManager && this.eventManager.unregisterConsumer(this), (this.pendingPromise = null), this.cleanUp();
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const ti = new R(2e3, 1e4);
                    async function ni(e, t, n) {
                        const r = We(e);
                        I(e, t, At);
                        const i = Qr(r, n),
                            o = new oi(r, 'signInViaPopup', t, i);
                        return o.executeNotNull();
                    }
                    async function ri(e, t, n) {
                        const r = (0, i.m9)(e);
                        I(r.auth, t, At);
                        const o = Qr(r.auth, n),
                            s = new oi(r.auth, 'reauthViaPopup', t, o, r);
                        return s.executeNotNull();
                    }
                    async function ii(e, t, n) {
                        const r = (0, i.m9)(e);
                        I(r.auth, t, At);
                        const o = Qr(r.auth, n),
                            s = new oi(r.auth, 'linkViaPopup', t, o, r);
                        return s.executeNotNull();
                    }
                    class oi extends ei {
                        constructor(e, t, n, r, i) {
                            super(e, t, r, i),
                                (this.provider = n),
                                (this.authWindow = null),
                                (this.pollId = null),
                                oi.currentPopupAction && oi.currentPopupAction.cancel(),
                                (oi.currentPopupAction = this);
                        }
                        async executeNotNull() {
                            const e = await this.execute();
                            return S(e, this.auth, 'internal-error'), e;
                        }
                        async onExecution() {
                            A(1 === this.filter.length, 'Popup operations only handle one event');
                            const e = er();
                            (this.authWindow = await this.resolver._openPopup(this.auth, this.provider, this.filter[0], e)),
                            (this.authWindow.associatedEvent = e),
                            this.resolver._originValidation(this.auth).catch(e => {
                                    this.reject(e);
                                }),
                                this.resolver._isIframeWebStorageSupported(this.auth, e => {
                                    e || this.reject(b(this.auth, 'web-storage-unsupported'));
                                }),
                                this.pollUserCancellation();
                        }
                        get eventId() {
                            var e;
                            return (null === (e = this.authWindow) || void 0 === e ? void 0 : e.associatedEvent) || null;
                        }
                        cancel() {
                            this.reject(b(this.auth, 'cancelled-popup-request'));
                        }
                        cleanUp() {
                            this.authWindow && this.authWindow.close(),
                                this.pollId && window.clearTimeout(this.pollId),
                                (this.authWindow = null),
                                (this.pollId = null),
                                (oi.currentPopupAction = null);
                        }
                        pollUserCancellation() {
                            const e = () => {
                                var t, n;
                                (null === (n = null === (t = this.authWindow) || void 0 === t ? void 0 : t.window) || void 0 === n ? void 0 : n.closed) ?
                                (this.pollId = window.setTimeout(() => {
                                    (this.pollId = null), this.reject(b(this.auth, 'popup-closed-by-user'));
                                }, 8e3)) :
                                (this.pollId = window.setTimeout(e, ti.get()));
                            };
                            e();
                        }
                    }
                    oi.currentPopupAction = null;
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const si = 'pendingRedirect',
                        ai = new Map();
                    class ui extends ei {
                        constructor(e, t, n = !1) {
                            super(e, ['signInViaRedirect', 'linkViaRedirect', 'reauthViaRedirect', 'unknown'], t, void 0, n), (this.eventId = null);
                        }
                        async execute() {
                            let e = ai.get(this.auth._key());
                            if (!e) {
                                try {
                                    const t = await ci(this.resolver, this.auth),
                                        n = t ? await super.execute() : null;
                                    e = () => Promise.resolve(n);
                                } catch (t) {
                                    e = () => Promise.reject(t);
                                }
                                ai.set(this.auth._key(), e);
                            }
                            return this.bypassAuthState || ai.set(this.auth._key(), () => Promise.resolve(null)), e();
                        }
                        async onAuthEvent(e) {
                            if ('signInViaRedirect' === e.type) return super.onAuthEvent(e);
                            if ('unknown' !== e.type) {
                                if (e.eventId) {
                                    const t = await this.auth._redirectUserForId(e.eventId);
                                    if (t) return (this.user = t), super.onAuthEvent(e);
                                    this.resolve(null);
                                }
                            } else this.resolve(null);
                        }
                        async onExecution() {}
                        cleanUp() {}
                    }
                    async function ci(e, t) {
                        const n = pi(t),
                            r = di(e);
                        if (!(await r._isAvailable())) return !1;
                        const i = 'true' === (await r._get(n));
                        return await r._remove(n), i;
                    }
                    async function li(e, t) {
                        return di(e)._set(pi(t), 'true');
                    }

                    function hi() {
                        ai.clear();
                    }

                    function fi(e, t) {
                        ai.set(e._key(), t);
                    }

                    function di(e) {
                        return he(e._redirectPersistence);
                    }

                    function pi(e) {
                        return pe(si, e.config.apiKey, e.name);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function gi(e, t, n) {
                        return mi(e, t, n);
                    }
                    async function mi(e, t, n) {
                        const r = We(e);
                        I(e, t, At), await r._initializationPromise;
                        const i = Qr(r, n);
                        return await li(i, r), i._openRedirect(r, t, 'signInViaRedirect');
                    }

                    function vi(e, t, n) {
                        return yi(e, t, n);
                    }
                    async function yi(e, t, n) {
                        const r = (0, i.m9)(e);
                        I(r.auth, t, At), await r.auth._initializationPromise;
                        const o = Qr(r.auth, n);
                        await li(o, r.auth);
                        const s = await Ei(r);
                        return o._openRedirect(r.auth, t, 'reauthViaRedirect', s);
                    }

                    function wi(e, t, n) {
                        return bi(e, t, n);
                    }
                    async function bi(e, t, n) {
                        const r = (0, i.m9)(e);
                        I(r.auth, t, At), await r.auth._initializationPromise;
                        const o = Qr(r.auth, n);
                        await Wt(!1, r, t.providerId), await li(o, r.auth);
                        const s = await Ei(r);
                        return o._openRedirect(r.auth, t, 'linkViaRedirect', s);
                    }
                    async function _i(e, t) {
                        return await We(e)._initializationPromise, Ii(e, t, !1);
                    }
                    async function Ii(e, t, n = !1) {
                        const r = We(e),
                            i = Qr(r, t),
                            o = new ui(r, i, n),
                            s = await o.execute();
                        return s && !n && (delete s.user._redirectEventId, await r._persistUserIfCurrent(s.user), await r._setRedirectUser(null, t)), s;
                    }
                    async function Ei(e) {
                        const t = er(`${e.uid}:::`);
                        return (e._redirectEventId = t), await e.auth._setRedirectUser(e), await e.auth._persistUserIfCurrent(e), t;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Si = 6e5;
                    class Ti {
                        constructor(e) {
                            (this.auth = e),
                            (this.cachedEventUids = new Set()),
                            (this.consumers = new Set()),
                            (this.queuedRedirectEvent = null),
                            (this.hasHandledPotentialRedirect = !1),
                            (this.lastProcessedEventTime = Date.now());
                        }
                        registerConsumer(e) {
                            this.consumers.add(e),
                                this.queuedRedirectEvent &&
                                this.isEventForConsumer(this.queuedRedirectEvent, e) &&
                                (this.sendToConsumer(this.queuedRedirectEvent, e), this.saveEventToCache(this.queuedRedirectEvent), (this.queuedRedirectEvent = null));
                        }
                        unregisterConsumer(e) {
                            this.consumers.delete(e);
                        }
                        onEvent(e) {
                            if (this.hasEventBeenHandled(e)) return !1;
                            let t = !1;
                            return (
                                this.consumers.forEach(n => {
                                    this.isEventForConsumer(e, n) && ((t = !0), this.sendToConsumer(e, n), this.saveEventToCache(e));
                                }),
                                this.hasHandledPotentialRedirect || !Ci(e) || ((this.hasHandledPotentialRedirect = !0), t || ((this.queuedRedirectEvent = e), (t = !0))),
                                t
                            );
                        }
                        sendToConsumer(e, t) {
                            var n;
                            if (e.error && !xi(e)) {
                                const r = (null === (n = e.error.code) || void 0 === n ? void 0 : n.split('auth/')[1]) || 'internal-error';
                                t.onError(b(this.auth, r));
                            } else t.onAuthEvent(e);
                        }
                        isEventForConsumer(e, t) {
                            const n = null === t.eventId || (!!e.eventId && e.eventId === t.eventId);
                            return t.filter.includes(e.type) && n;
                        }
                        hasEventBeenHandled(e) {
                            return Date.now() - this.lastProcessedEventTime >= Si && this.cachedEventUids.clear(), this.cachedEventUids.has(Ai(e));
                        }
                        saveEventToCache(e) {
                            this.cachedEventUids.add(Ai(e)), (this.lastProcessedEventTime = Date.now());
                        }
                    }

                    function Ai(e) {
                        return [e.type, e.eventId, e.sessionId, e.tenantId].filter(e => e).join('-');
                    }

                    function xi({ type: e, error: t }) {
                        return 'unknown' === e && 'auth/no-auth-event' === (null === t || void 0 === t ? void 0 : t.code);
                    }

                    function Ci(e) {
                        switch (e.type) {
                            case 'signInViaRedirect':
                            case 'linkViaRedirect':
                            case 'reauthViaRedirect':
                                return !0;
                            case 'unknown':
                                return xi(e);
                            default:
                                return !1;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    async function ki(e, t = {}) {
                        return F(e, 'GET', '/v1/projects', t);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Oi = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
                        Ni = /^https?/;
                    async function Ri(e) {
                        if (e.config.emulator) return;
                        const { authorizedDomains: t } = await ki(e);
                        for (const r of t)
                            try {
                                if (Pi(r)) return;
                            } catch (n) {}
                        w(e, 'unauthorized-domain');
                    }

                    function Pi(e) {
                        const t = x(),
                            { protocol: n, hostname: r } = new URL(t);
                        if (e.startsWith('chrome-extension://')) {
                            const i = new URL(e);
                            return '' === i.hostname && '' === r ?
                                'chrome-extension:' === n && e.replace('chrome-extension://', '') === t.replace('chrome-extension://', '') :
                                'chrome-extension:' === n && i.hostname === r;
                        }
                        if (!Ni.test(n)) return !1;
                        if (Oi.test(e)) return r === e;
                        const i = e.replace(/\./g, '\\.'),
                            o = new RegExp('^(.+\\.' + i + '|' + i + ')$', 'i');
                        return o.test(r);
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC.
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Di = new R(3e4, 6e4);

                    function Li() {
                        const e = nr().___jsl;
                        if (null === e || void 0 === e ? void 0 : e.H)
                            for (const t of Object.keys(e.H))
                                if (((e.H[t].r = e.H[t].r || []), (e.H[t].L = e.H[t].L || []), (e.H[t].r = [...e.H[t].L]), e.CP))
                                    for (let n = 0; n < e.CP.length; n++) e.CP[n] = null;
                    }

                    function ji(e) {
                        return new Promise((t, n) => {
                            var r, i, o;

                            function s() {
                                Li(),
                                    gapi.load('gapi.iframes', {
                                        callback: () => {
                                            t(gapi.iframes.getContext());
                                        },
                                        ontimeout: () => {
                                            Li(), n(b(e, 'network-request-failed'));
                                        },
                                        timeout: Di.get()
                                    });
                            }
                            if (null === (i = null === (r = nr().gapi) || void 0 === r ? void 0 : r.iframes) || void 0 === i ? void 0 : i.Iframe)
                                t(gapi.iframes.getContext());
                            else {
                                if (!(null === (o = nr().gapi) || void 0 === o ? void 0 : o.load)) {
                                    const t = Fe('iframefcb');
                                    return (
                                        (nr()[t] = () => {
                                            gapi.load ? s() : n(b(e, 'network-request-failed'));
                                        }),
                                        Me(`https://apis.google.com/js/api.js?onload=${t}`).catch(e => n(e))
                                    );
                                }
                                s();
                            }
                        }).catch(e => {
                            throw ((Mi = null), e);
                        });
                    }
                    let Mi = null;

                    function Fi(e) {
                        return (Mi = Mi || ji(e)), Mi;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC.
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Ui = new R(5e3, 15e3),
                        Vi = '__/auth/iframe',
                        Bi = 'emulator/auth/iframe',
                        $i = { style: { position: 'absolute', top: '-100px', width: '1px', height: '1px' }, 'aria-hidden': 'true', tabindex: '-1' },
                        qi = new Map([
                            ['identitytoolkit.googleapis.com', 'p'],
                            ['staging-identitytoolkit.sandbox.googleapis.com', 's'],
                            ['test-identitytoolkit.sandbox.googleapis.com', 't']
                        ]);

                    function zi(e) {
                        const t = e.config;
                        S(t.authDomain, e, 'auth-domain-config-required');
                        const n = t.emulator ? P(t, Bi) : `https://${e.config.authDomain}/${Vi}`,
                            r = { apiKey: t.apiKey, appName: e.name, v: o.SDK_VERSION },
                            s = qi.get(e.config.apiHost);
                        s && (r.eid = s);
                        const a = e._getFrameworks();
                        return a.length && (r.fw = a.join(',')), `${n}?${(0, i.xO)(r).slice(1)}`;
                    }
                    async function Gi(e) {
                        const t = await Fi(e),
                            n = nr().gapi;
                        return (
                            S(n, e, 'internal-error'),
                            t.open({ where: document.body, url: zi(e), messageHandlersFilter: n.iframes.CROSS_ORIGIN_IFRAMES_FILTER, attributes: $i, dontclear: !0 },
                                t =>
                                new Promise(async(n, r) => {
                                    await t.restyle({ setHideOnLeave: !1 });
                                    const i = b(e, 'network-request-failed'),
                                        o = nr().setTimeout(() => {
                                            r(i);
                                        }, Ui.get());

                                    function s() {
                                        nr().clearTimeout(o), n(t);
                                    }
                                    t.ping(s).then(s, () => {
                                        r(i);
                                    });
                                })
                            )
                        );
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC.
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Wi = { location: 'yes', resizable: 'yes', statusbar: 'yes', toolbar: 'no' },
                        Hi = 500,
                        Ki = 600,
                        Qi = '_blank',
                        Yi = 'http://localhost';
                    class Xi {
                        constructor(e) {
                            (this.window = e), (this.associatedEvent = null);
                        }
                        close() {
                            if (this.window)
                                try {
                                    this.window.close();
                                } catch (e) {}
                        }
                    }

                    function Ji(e, t, n, r = Hi, o = Ki) {
                        const s = Math.max((window.screen.availHeight - o) / 2, 0).toString(),
                            a = Math.max((window.screen.availWidth - r) / 2, 0).toString();
                        let u = '';
                        const c = Object.assign(Object.assign({}, Wi), { width: r.toString(), height: o.toString(), top: s, left: a }),
                            l = (0, i.z$)().toLowerCase();
                        n && (u = we(l) ? Qi : n), ve(l) && ((t = t || Yi), (c.scrollbars = 'yes'));
                        const h = Object.entries(c).reduce((e, [t, n]) => `${e}${t}=${n},`, '');
                        if (Ae(l) && '_self' !== u) return Zi(t || '', u), new Xi(null);
                        const f = window.open(t || '', u, h);
                        S(f, e, 'popup-blocked');
                        try {
                            f.focus();
                        } catch (d) {}
                        return new Xi(f);
                    }

                    function Zi(e, t) {
                        const n = document.createElement('a');
                        (n.href = e), (n.target = t);
                        const r = document.createEvent('MouseEvent');
                        r.initMouseEvent('click', !0, !0, window, 1, 0, 0, 0, 0, !1, !1, !1, !1, 1, null), n.dispatchEvent(r);
                    }
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const eo = '__/auth/handler',
                        to = 'emulator/auth/handler',
                        no = encodeURIComponent('fac');
                    async function ro(e, t, n, r, s, a) {
                        S(e.config.authDomain, e, 'auth-domain-config-required'), S(e.config.apiKey, e, 'invalid-api-key');
                        const u = { apiKey: e.config.apiKey, appName: e.name, authType: n, redirectUrl: r, v: o.SDK_VERSION, eventId: s };
                        if (t instanceof At) {
                            t.setDefaultLanguage(e.languageCode),
                                (u.providerId = t.providerId || ''),
                                (0, i.xb)(t.getCustomParameters()) || (u.customParameters = JSON.stringify(t.getCustomParameters()));
                            for (const [e, t] of Object.entries(a || {})) u[e] = t;
                        }
                        if (t instanceof xt) {
                            const e = t.getScopes().filter(e => '' !== e);
                            e.length > 0 && (u.scopes = e.join(','));
                        }
                        e.tenantId && (u.tid = e.tenantId);
                        const c = u;
                        for (const i of Object.keys(c)) void 0 === c[i] && delete c[i];
                        const l = await e._getAppCheckToken(),
                            h = l ? `#${no}=${encodeURIComponent(l)}` : '';
                        return `${io(e)}?${(0, i.xO)(c).slice(1)}${h}`;
                    }

                    function io({ config: e }) {
                        return e.emulator ? P(e, to) : `https://${e.authDomain}/${eo}`;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const oo = 'webStorageSupport';
                    class so {
                        constructor() {
                            (this.eventManagers = {}),
                            (this.iframes = {}),
                            (this.originValidationPromises = {}),
                            (this._redirectPersistence = Xn),
                            (this._completeRedirectFn = Ii),
                            (this._overrideRedirectResult = fi);
                        }
                        async _openPopup(e, t, n, r) {
                            var i;
                            A(null === (i = this.eventManagers[e._key()]) || void 0 === i ? void 0 : i.manager, '_initialize() not called before _openPopup()');
                            const o = await ro(e, t, n, x(), r);
                            return Ji(e, o, er());
                        }
                        async _openRedirect(e, t, n, r) {
                            await this._originValidation(e);
                            const i = await ro(e, t, n, x(), r);
                            return rr(i), new Promise(() => {});
                        }
                        _initialize(e) {
                            const t = e._key();
                            if (this.eventManagers[t]) {
                                const { manager: e, promise: n } = this.eventManagers[t];
                                return e ? Promise.resolve(e) : (A(n, 'If manager is not set, promise should be'), n);
                            }
                            const n = this.initAndGetManager(e);
                            return (
                                (this.eventManagers[t] = { promise: n }),
                                n.catch(() => {
                                    delete this.eventManagers[t];
                                }),
                                n
                            );
                        }
                        async initAndGetManager(e) {
                            const t = await Gi(e),
                                n = new Ti(e);
                            return (
                                t.register(
                                    'authEvent',
                                    t => {
                                        S(null === t || void 0 === t ? void 0 : t.authEvent, e, 'invalid-auth-event');
                                        const r = n.onEvent(t.authEvent);
                                        return { status: r ? 'ACK' : 'ERROR' };
                                    },
                                    gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                                ),
                                (this.eventManagers[e._key()] = { manager: n }),
                                (this.iframes[e._key()] = t),
                                n
                            );
                        }
                        _isIframeWebStorageSupported(e, t) {
                            const n = this.iframes[e._key()];
                            n.send(
                                oo, { type: oo },
                                n => {
                                    var r;
                                    const i = null === (r = null === n || void 0 === n ? void 0 : n[0]) || void 0 === r ? void 0 : r[oo];
                                    void 0 !== i && t(!!i), w(e, 'internal-error');
                                },
                                gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                            );
                        }
                        _originValidation(e) {
                            const t = e._key();
                            return this.originValidationPromises[t] || (this.originValidationPromises[t] = Ri(e)), this.originValidationPromises[t];
                        }
                        get _shouldInitProactively() {
                            return Ce() || ye() || Se();
                        }
                    }
                    const ao = so;
                    class uo {
                        constructor(e) {
                            this.factorId = e;
                        }
                        _process(e, t, n) {
                            switch (t.type) {
                                case 'enroll':
                                    return this._finalizeEnroll(e, t.credential, n);
                                case 'signin':
                                    return this._finalizeSignIn(e, t.credential);
                                default:
                                    return T('unexpected MultiFactorSessionType');
                            }
                        }
                    }
                    class co extends uo {
                        constructor(e) {
                            super('phone'), (this.credential = e);
                        }
                        static _fromCredential(e) {
                            return new co(e);
                        }
                        _finalizeEnroll(e, t, n) {
                            return jn(e, { idToken: t, displayName: n, phoneVerificationInfo: this.credential._makeVerificationRequest() });
                        }
                        _finalizeSignIn(e, t) {
                            return Sr(e, { mfaPendingCredential: t, phoneVerificationInfo: this.credential._makeVerificationRequest() });
                        }
                    }
                    class lo {
                        constructor() {}
                        static assertion(e) {
                            return co._fromCredential(e);
                        }
                    }
                    lo.FACTOR_ID = 'phone';
                    class ho {
                        static assertionForEnrollment(e, t) {
                            return fo._fromSecret(e, t);
                        }
                        static assertionForSignIn(e, t) {
                            return fo._fromEnrollmentId(e, t);
                        }
                        static async generateSecret(e) {
                            const t = e;
                            S('undefined' !== typeof t.auth, 'internal-error');
                            const n = await Mn(t.auth, { idToken: t.credential, totpEnrollmentInfo: {} });
                            return po._fromStartTotpMfaEnrollmentResponse(n, t.auth);
                        }
                    }
                    ho.FACTOR_ID = 'totp';
                    class fo extends uo {
                        constructor(e, t, n) {
                            super('totp'), (this.otp = e), (this.enrollmentId = t), (this.secret = n);
                        }
                        static _fromSecret(e, t) {
                            return new fo(t, void 0, e);
                        }
                        static _fromEnrollmentId(e, t) {
                            return new fo(t, e);
                        }
                        async _finalizeEnroll(e, t, n) {
                            return (
                                S('undefined' !== typeof this.secret, e, 'argument-error'),
                                Fn(e, { idToken: t, displayName: n, totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp) })
                            );
                        }
                        async _finalizeSignIn(e, t) {
                            S(void 0 !== this.enrollmentId && void 0 !== this.otp, e, 'argument-error');
                            const n = { verificationCode: this.otp };
                            return Tr(e, { mfaPendingCredential: t, mfaEnrollmentId: this.enrollmentId, totpVerificationInfo: n });
                        }
                    }
                    class po {
                        constructor(e, t, n, r, i, o, s) {
                            (this.sessionInfo = o),
                            (this.auth = s),
                            (this.secretKey = e),
                            (this.hashingAlgorithm = t),
                            (this.codeLength = n),
                            (this.codeIntervalSeconds = r),
                            (this.enrollmentCompletionDeadline = i);
                        }
                        static _fromStartTotpMfaEnrollmentResponse(e, t) {
                            return new po(
                                e.totpSessionInfo.sharedSecretKey,
                                e.totpSessionInfo.hashingAlgorithm,
                                e.totpSessionInfo.verificationCodeLength,
                                e.totpSessionInfo.periodSec,
                                new Date(e.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),
                                e.totpSessionInfo.sessionInfo,
                                t
                            );
                        }
                        _makeTotpVerificationInfo(e) {
                            return { sessionInfo: this.sessionInfo, verificationCode: e };
                        }
                        generateQrCodeUrl(e, t) {
                            var n;
                            let r = !1;
                            return (
                                (go(e) || go(t)) && (r = !0),
                                r &&
                                (go(e) && (e = (null === (n = this.auth.currentUser) || void 0 === n ? void 0 : n.email) || 'unknownuser'),
                                    go(t) && (t = this.auth.name)),
                                `otpauth://totp/${t}:${e}?secret=${this.secretKey}&issuer=${t}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`
                            );
                        }
                    }

                    function go(e) {
                        return 'undefined' === typeof e || 0 === (null === e || void 0 === e ? void 0 : e.length);
                    }
                    var mo = '@firebase/auth',
                        vo = '0.23.2';
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class yo {
                        constructor(e) {
                            (this.auth = e), (this.internalListeners = new Map());
                        }
                        getUid() {
                            var e;
                            return this.assertAuthConfigured(), (null === (e = this.auth.currentUser) || void 0 === e ? void 0 : e.uid) || null;
                        }
                        async getToken(e) {
                            if ((this.assertAuthConfigured(), await this.auth._initializationPromise, !this.auth.currentUser)) return null;
                            const t = await this.auth.currentUser.getIdToken(e);
                            return { accessToken: t };
                        }
                        addAuthTokenListener(e) {
                            if ((this.assertAuthConfigured(), this.internalListeners.has(e))) return;
                            const t = this.auth.onIdTokenChanged(t => {
                                e((null === t || void 0 === t ? void 0 : t.stsTokenManager.accessToken) || null);
                            });
                            this.internalListeners.set(e, t), this.updateProactiveRefresh();
                        }
                        removeAuthTokenListener(e) {
                            this.assertAuthConfigured();
                            const t = this.internalListeners.get(e);
                            t && (this.internalListeners.delete(e), t(), this.updateProactiveRefresh());
                        }
                        assertAuthConfigured() {
                            S(this.auth._initializationPromise, 'dependent-sdk-initialized-before-auth');
                        }
                        updateProactiveRefresh() {
                            this.internalListeners.size > 0 ? this.auth._startProactiveRefresh() : this.auth._stopProactiveRefresh();
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function wo(e) {
                        switch (e) {
                            case 'Node':
                                return 'node';
                            case 'ReactNative':
                                return 'rn';
                            case 'Worker':
                                return 'webworker';
                            case 'Cordova':
                                return 'cordova';
                            default:
                                return;
                        }
                    }

                    function bo(e) {
                        (0, o._registerComponent)(
                            new u.wA(
                                'auth',
                                (t, { options: n }) => {
                                    const r = t.getProvider('app').getImmediate(),
                                        i = t.getProvider('heartbeat'),
                                        o = t.getProvider('app-check-internal'),
                                        { apiKey: s, authDomain: a } = r.options;
                                    S(s && !s.includes(':'), 'invalid-api-key', { appName: r.name });
                                    const u = {
                                            apiKey: s,
                                            authDomain: a,
                                            clientPlatform: e,
                                            apiHost: 'identitytoolkit.googleapis.com',
                                            tokenApiHost: 'securetoken.googleapis.com',
                                            apiScheme: 'https',
                                            sdkClientVersion: Oe(e)
                                        },
                                        c = new Ge(r, i, o, u);
                                    return Ke(c, n), c;
                                },
                                'PUBLIC'
                            )
                            .setInstantiationMode('EXPLICIT')
                            .setInstanceCreatedCallback((e, t, n) => {
                                const r = e.getProvider('auth-internal');
                                r.initialize();
                            })
                        ),
                        (0, o._registerComponent)(
                            new u.wA(
                                'auth-internal',
                                e => {
                                    const t = We(e.getProvider('auth').getImmediate());
                                    return (e => new yo(e))(t);
                                },
                                'PRIVATE'
                            ).setInstantiationMode('EXPLICIT')
                        ),
                        (0, o.registerVersion)(mo, vo, wo(e)),
                        (0, o.registerVersion)(mo, vo, 'esm2017');
                    }
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const _o = 300;
                    (0, i.Pz)('authIdTokenMaxAge');
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Io() {
                        return window;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    bo('Browser');
                    const Eo = 2e3;
                    async function So(e, t, n) {
                        var r;
                        const { BuildInfo: i } = Io();
                        A(t.sessionId, 'AuthEvent did not contain a session ID');
                        const o = await ko(t.sessionId),
                            s = {};
                        return (
                            Se() ? (s['ibi'] = i.packageName) : _e() ? (s['apn'] = i.packageName) : w(e, 'operation-not-supported-in-this-environment'),
                            i.displayName && (s['appDisplayName'] = i.displayName),
                            (s['sessionId'] = o),
                            ro(e, n, t.type, void 0, null !== (r = t.eventId) && void 0 !== r ? r : void 0, s)
                        );
                    }
                    async function To(e) {
                        const { BuildInfo: t } = Io(),
                            n = {};
                        Se() ? (n.iosBundleId = t.packageName) : _e() ? (n.androidPackageName = t.packageName) : w(e, 'operation-not-supported-in-this-environment'),
                            await ki(e, n);
                    }

                    function Ao(e) {
                        const { cordova: t } = Io();
                        return new Promise(n => {
                            t.plugins.browsertab.isAvailable(r => {
                                let i = null;
                                r ? t.plugins.browsertab.openUrl(e) : (i = t.InAppBrowser.open(e, Te() ? '_blank' : '_system', 'location=yes')), n(i);
                            });
                        });
                    }
                    async function xo(e, t, n) {
                        const { cordova: r } = Io();
                        let i = () => {};
                        try {
                            await new Promise((o, s) => {
                                let a = null;

                                function u() {
                                    var e;
                                    o();
                                    const t = null === (e = r.plugins.browsertab) || void 0 === e ? void 0 : e.close;
                                    'function' === typeof t && t(), 'function' === typeof(null === n || void 0 === n ? void 0 : n.close) && n.close();
                                }

                                function c() {
                                    a ||
                                        (a = window.setTimeout(() => {
                                            s(b(e, 'redirect-cancelled-by-user'));
                                        }, Eo));
                                }

                                function l() {
                                    'visible' === (null === document || void 0 === document ? void 0 : document.visibilityState) && c();
                                }
                                t.addPassiveListener(u),
                                    document.addEventListener('resume', c, !1),
                                    _e() && document.addEventListener('visibilitychange', l, !1),
                                    (i = () => {
                                        t.removePassiveListener(u),
                                            document.removeEventListener('resume', c, !1),
                                            document.removeEventListener('visibilitychange', l, !1),
                                            a && window.clearTimeout(a);
                                    });
                            });
                        } finally {
                            i();
                        }
                    }

                    function Co(e) {
                        var t, n, r, i, o, s, a, u, c, l;
                        const h = Io();
                        S(
                                'function' === typeof(null === (t = null === h || void 0 === h ? void 0 : h.universalLinks) || void 0 === t ? void 0 : t.subscribe),
                                e,
                                'invalid-cordova-configuration', { missingPlugin: 'cordova-universal-links-plugin-fix' }
                            ),
                            S(
                                'undefined' !== typeof(null === (n = null === h || void 0 === h ? void 0 : h.BuildInfo) || void 0 === n ? void 0 : n.packageName),
                                e,
                                'invalid-cordova-configuration', { missingPlugin: 'cordova-plugin-buildInfo' }
                            ),
                            S(
                                'function' ===
                                typeof(null ===
                                    (o =
                                        null === (i = null === (r = null === h || void 0 === h ? void 0 : h.cordova) || void 0 === r ? void 0 : r.plugins) || void 0 === i ?
                                        void 0 :
                                        i.browsertab) || void 0 === o ?
                                    void 0 :
                                    o.openUrl),
                                e,
                                'invalid-cordova-configuration', { missingPlugin: 'cordova-plugin-browsertab' }
                            ),
                            S(
                                'function' ===
                                typeof(null ===
                                    (u =
                                        null === (a = null === (s = null === h || void 0 === h ? void 0 : h.cordova) || void 0 === s ? void 0 : s.plugins) || void 0 === a ?
                                        void 0 :
                                        a.browsertab) || void 0 === u ?
                                    void 0 :
                                    u.isAvailable),
                                e,
                                'invalid-cordova-configuration', { missingPlugin: 'cordova-plugin-browsertab' }
                            ),
                            S(
                                'function' ===
                                typeof(null === (l = null === (c = null === h || void 0 === h ? void 0 : h.cordova) || void 0 === c ? void 0 : c.InAppBrowser) ||
                                    void 0 === l ?
                                    void 0 :
                                    l.open),
                                e,
                                'invalid-cordova-configuration', { missingPlugin: 'cordova-plugin-inappbrowser' }
                            );
                    }
                    async function ko(e) {
                        const t = Oo(e),
                            n = await crypto.subtle.digest('SHA-256', t),
                            r = Array.from(new Uint8Array(n));
                        return r.map(e => e.toString(16).padStart(2, '0')).join('');
                    }

                    function Oo(e) {
                        if ((A(/[0-9a-zA-Z]+/.test(e), 'Can only convert alpha-numeric strings'), 'undefined' !== typeof TextEncoder))
                            return new TextEncoder().encode(e);
                        const t = new ArrayBuffer(e.length),
                            n = new Uint8Array(t);
                        for (let r = 0; r < e.length; r++) n[r] = e.charCodeAt(r);
                        return n;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const No = 20;
                    class Ro extends Ti {
                        constructor() {
                            super(...arguments),
                                (this.passiveListeners = new Set()),
                                (this.initPromise = new Promise(e => {
                                    this.resolveInialized = e;
                                }));
                        }
                        addPassiveListener(e) {
                            this.passiveListeners.add(e);
                        }
                        removePassiveListener(e) {
                            this.passiveListeners.delete(e);
                        }
                        resetRedirect() {
                            (this.queuedRedirectEvent = null), (this.hasHandledPotentialRedirect = !1);
                        }
                        onEvent(e) {
                            return this.resolveInialized(), this.passiveListeners.forEach(t => t(e)), super.onEvent(e);
                        }
                        async initialized() {
                            await this.initPromise;
                        }
                    }

                    function Po(e, t, n = null) {
                        return { type: t, eventId: n, urlResponse: null, sessionId: Mo(), postBody: null, tenantId: e.tenantId, error: b(e, 'no-auth-event') };
                    }

                    function Do(e, t) {
                        return Fo()._set(Uo(e), t);
                    }
                    async function Lo(e) {
                        const t = await Fo()._get(Uo(e));
                        return t && (await Fo()._remove(Uo(e))), t;
                    }

                    function jo(e, t) {
                        var n, r;
                        const i = Bo(t);
                        if (i.includes('/__/auth/callback')) {
                            const t = $o(i),
                                o = t['firebaseError'] ? Vo(decodeURIComponent(t['firebaseError'])) : null,
                                s =
                                null === (r = null === (n = null === o || void 0 === o ? void 0 : o['code']) || void 0 === n ? void 0 : n.split('auth/')) ||
                                void 0 === r ?
                                void 0 :
                                r[1],
                                a = s ? b(s) : null;
                            return a ?
                                { type: e.type, eventId: e.eventId, tenantId: e.tenantId, error: a, urlResponse: null, sessionId: null, postBody: null } :
                                { type: e.type, eventId: e.eventId, tenantId: e.tenantId, sessionId: e.sessionId, urlResponse: i, postBody: null };
                        }
                        return null;
                    }

                    function Mo() {
                        const e = [],
                            t = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
                        for (let n = 0; n < No; n++) {
                            const n = Math.floor(Math.random() * t.length);
                            e.push(t.charAt(n));
                        }
                        return e.join('');
                    }

                    function Fo() {
                        return he(Qn);
                    }

                    function Uo(e) {
                        return pe('authEvent', e.config.apiKey, e.name);
                    }

                    function Vo(e) {
                        try {
                            return JSON.parse(e);
                        } catch (t) {
                            return null;
                        }
                    }

                    function Bo(e) {
                        const t = $o(e),
                            n = t['link'] ? decodeURIComponent(t['link']) : void 0,
                            r = $o(n)['link'],
                            i = t['deep_link_id'] ? decodeURIComponent(t['deep_link_id']) : void 0,
                            o = $o(i)['link'];
                        return o || i || r || n || e;
                    }

                    function $o(e) {
                        if (!(null === e || void 0 === e ? void 0 : e.includes('?'))) return {};
                        const [t, ...n] = e.split('?');
                        return (0, i.zd)(n.join('?'));
                    }
                    /**
                     * @license
                     * Copyright 2021 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const qo = 500;
                    class zo {
                        constructor() {
                            (this._redirectPersistence = Xn),
                            (this._shouldInitProactively = !0),
                            (this.eventManagers = new Map()),
                            (this.originValidationPromises = {}),
                            (this._completeRedirectFn = Ii),
                            (this._overrideRedirectResult = fi);
                        }
                        async _initialize(e) {
                            const t = e._key();
                            let n = this.eventManagers.get(t);
                            return n || ((n = new Ro(e)), this.eventManagers.set(t, n), this.attachCallbackListeners(e, n)), n;
                        }
                        _openPopup(e) {
                            w(e, 'operation-not-supported-in-this-environment');
                        }
                        async _openRedirect(e, t, n, r) {
                            Co(e);
                            const i = await this._initialize(e);
                            await i.initialized(), i.resetRedirect(), hi(), await this._originValidation(e);
                            const o = Po(e, n, r);
                            await Do(e, o);
                            const s = await So(e, o, t),
                                a = await Ao(s);
                            return xo(e, i, a);
                        }
                        _isIframeWebStorageSupported(e, t) {
                            throw new Error('Method not implemented.');
                        }
                        _originValidation(e) {
                            const t = e._key();
                            return this.originValidationPromises[t] || (this.originValidationPromises[t] = To(e)), this.originValidationPromises[t];
                        }
                        attachCallbackListeners(e, t) {
                            const { universalLinks: n, handleOpenURL: r, BuildInfo: i } = Io(),
                                o = setTimeout(async() => {
                                    await Lo(e), t.onEvent(Wo());
                                }, qo),
                                s = async n => {
                                    clearTimeout(o);
                                    const r = await Lo(e);
                                    let i = null;
                                    r && (null === n || void 0 === n ? void 0 : n['url']) && (i = jo(r, n['url'])), t.onEvent(i || Wo());
                                };
                            'undefined' !== typeof n && 'function' === typeof n.subscribe && n.subscribe(null, s);
                            const a = r,
                                u = `${i.packageName.toLowerCase()}://`;
                            Io().handleOpenURL = async e => {
                                if ((e.toLowerCase().startsWith(u) && s({ url: e }), 'function' === typeof a))
                                    try {
                                        a(e);
                                    } catch (t) {
                                        console.error(t);
                                    }
                            };
                        }
                    }
                    const Go = zo;

                    function Wo() {
                        return { type: 'unknown', eventId: null, sessionId: null, urlResponse: null, postBody: null, tenantId: null, error: b('no-auth-event') };
                    }
                    /**
                     * @license
                     * Copyright 2017 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function Ho(e, t) {
                        We(e)._logFramework(t);
                    }
                    var Ko = '@firebase/auth-compat',
                        Qo = '0.4.2';
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Yo = 1e3;

                    function Xo() {
                        var e;
                        return (null === (e = null === self || void 0 === self ? void 0 : self.location) || void 0 === e ? void 0 : e.protocol) || null;
                    }

                    function Jo() {
                        return 'http:' === Xo() || 'https:' === Xo();
                    }

                    function Zo(e = (0, i.z$)()) {
                        return !(('file:' !== Xo() && 'ionic:' !== Xo() && 'capacitor:' !== Xo()) || !e.toLowerCase().match(/iphone|ipad|ipod|android/));
                    }

                    function es() {
                        return (0, i.b$)() || (0, i.UG)();
                    }

                    function ts() {
                        return (0, i.w1)() && 11 === (null === document || void 0 === document ? void 0 : document.documentMode);
                    }

                    function ns(e = (0, i.z$)()) {
                        return /Edge\/\d+/.test(e);
                    }

                    function rs(e = (0, i.z$)()) {
                        return ts() || ns(e);
                    }

                    function is() {
                        try {
                            const e = self.localStorage,
                                t = er();
                            if (e) return e['setItem'](t, '1'), e['removeItem'](t), !rs() || (0, i.hl)();
                        } catch (e) {
                            return os() && (0, i.hl)();
                        }
                        return !1;
                    }

                    function os() {
                        return 'undefined' !== typeof n.g && 'WorkerGlobalScope' in n.g && 'importScripts' in n.g;
                    }

                    function ss() {
                        return (Jo() || (0, i.ru)() || Zo()) && !es() && is() && !os();
                    }

                    function as() {
                        return Zo() && 'undefined' !== typeof document;
                    }
                    async function us() {
                        return (!!as() &&
                            new Promise(e => {
                                const t = setTimeout(() => {
                                    e(!1);
                                }, Yo);
                                document.addEventListener('deviceready', () => {
                                    clearTimeout(t), e(!0);
                                });
                            })
                        );
                    }

                    function cs() {
                        return 'undefined' !== typeof window ? window : null;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const ls = { LOCAL: 'local', NONE: 'none', SESSION: 'session' },
                        hs = S,
                        fs = 'persistence';

                    function ds(e, t) {
                        hs(Object.values(ls).includes(t), e, 'invalid-persistence-type'),
                            (0, i.b$)() ?
                            hs(t !== ls.SESSION, e, 'unsupported-persistence-type') :
                            (0, i.UG)() ?
                            hs(t === ls.NONE, e, 'unsupported-persistence-type') :
                            os() ?
                            hs(t === ls.NONE || (t === ls.LOCAL && (0, i.hl)()), e, 'unsupported-persistence-type') :
                            hs(t === ls.NONE || is(), e, 'unsupported-persistence-type');
                    }
                    async function ps(e) {
                        await e._initializationPromise;
                        const t = ms(),
                            n = pe(fs, e.config.apiKey, e.name);
                        t && t.setItem(n, e._getPersistence());
                    }

                    function gs(e, t) {
                        const n = ms();
                        if (!n) return [];
                        const r = pe(fs, e, t),
                            i = n.getItem(r);
                        switch (i) {
                            case ls.NONE:
                                return [de];
                            case ls.LOCAL:
                                return [Ir, Xn];
                            case ls.SESSION:
                                return [Xn];
                            default:
                                return [];
                        }
                    }

                    function ms() {
                        var e;
                        try {
                            return (null === (e = cs()) || void 0 === e ? void 0 : e.sessionStorage) || null;
                        } catch (t) {
                            return null;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const vs = S;
                    class ys {
                        constructor() {
                            (this.browserResolver = he(ao)),
                            (this.cordovaResolver = he(Go)),
                            (this.underlyingResolver = null),
                            (this._redirectPersistence = Xn),
                            (this._completeRedirectFn = Ii),
                            (this._overrideRedirectResult = fi);
                        }
                        async _initialize(e) {
                            return await this.selectUnderlyingResolver(), this.assertedUnderlyingResolver._initialize(e);
                        }
                        async _openPopup(e, t, n, r) {
                            return await this.selectUnderlyingResolver(), this.assertedUnderlyingResolver._openPopup(e, t, n, r);
                        }
                        async _openRedirect(e, t, n, r) {
                            return await this.selectUnderlyingResolver(), this.assertedUnderlyingResolver._openRedirect(e, t, n, r);
                        }
                        _isIframeWebStorageSupported(e, t) {
                            this.assertedUnderlyingResolver._isIframeWebStorageSupported(e, t);
                        }
                        _originValidation(e) {
                            return this.assertedUnderlyingResolver._originValidation(e);
                        }
                        get _shouldInitProactively() {
                            return as() || this.browserResolver._shouldInitProactively;
                        }
                        get assertedUnderlyingResolver() {
                            return vs(this.underlyingResolver, 'internal-error'), this.underlyingResolver;
                        }
                        async selectUnderlyingResolver() {
                            if (this.underlyingResolver) return;
                            const e = await us();
                            this.underlyingResolver = e ? this.cordovaResolver : this.browserResolver;
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function ws(e) {
                        return e.unwrap();
                    }

                    function bs(e) {
                        return e.wrapped();
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    function _s(e) {
                        return Es(e);
                    }

                    function Is(e, t) {
                        var n;
                        const r = null === (n = t.customData) || void 0 === n ? void 0 : n._tokenResponse;
                        if ('auth/multi-factor-auth-required' === (null === t || void 0 === t ? void 0 : t.code)) {
                            const n = t;
                            n.resolver = new As(e, Dn(e, t));
                        } else if (r) {
                            const e = Es(t),
                                n = t;
                            e && ((n.credential = e), (n.tenantId = r.tenantId || void 0), (n.email = r.email || void 0), (n.phoneNumber = r.phoneNumber || void 0));
                        }
                    }

                    function Es(e) {
                        const { _tokenResponse: t } = e instanceof i.ZR ? e.customData : e;
                        if (!t) return null;
                        if (!(e instanceof i.ZR) && 'temporaryProof' in t && 'phoneNumber' in t) return Kr.credentialFromResult(e);
                        const n = t.providerId;
                        if (!n || n === c.PASSWORD) return null;
                        let r;
                        switch (n) {
                            case c.GOOGLE:
                                r = Ot;
                                break;
                            case c.FACEBOOK:
                                r = kt;
                                break;
                            case c.GITHUB:
                                r = Nt;
                                break;
                            case c.TWITTER:
                                r = jt;
                                break;
                            default:
                                const { oauthIdToken: e, oauthAccessToken: i, oauthTokenSecret: o, pendingToken: s, nonce: a } = t;
                                return i || o || e || s ?
                                    s ?
                                    n.startsWith('saml.') ?
                                    Pt._create(n, s) :
                                    gt._fromParams({ providerId: n, signInMethod: n, pendingToken: s, idToken: e, accessToken: i }) :
                                    new Ct(n).credential({ idToken: e, accessToken: i, rawNonce: a }) :
                                    null;
                        }
                        return e instanceof i.ZR ? r.credentialFromError(e) : r.credentialFromResult(e);
                    }

                    function Ss(e, t) {
                        return t
                            .catch(t => {
                                throw (t instanceof i.ZR && Is(e, t), t);
                            })
                            .then(e => {
                                const t = e.operationType,
                                    n = e.user;
                                return { operationType: t, credential: _s(e), additionalUserInfo: Nn(e), user: xs.getOrCreate(n) };
                            });
                    }
                    async function Ts(e, t) {
                        const n = await t;
                        return { verificationId: n.verificationId, confirm: t => Ss(e, n.confirm(t)) };
                    }
                    class As {
                        constructor(e, t) {
                            (this.resolver = t), (this.auth = bs(e));
                        }
                        get session() {
                            return this.resolver.session;
                        }
                        get hints() {
                            return this.resolver.hints;
                        }
                        resolveSignIn(e) {
                            return Ss(ws(this.auth), this.resolver.resolveSignIn(e));
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    class xs {
                        constructor(e) {
                            (this._delegate = e), (this.multiFactor = $n(e));
                        }
                        static getOrCreate(e) {
                            return xs.USER_MAP.has(e) || xs.USER_MAP.set(e, new xs(e)), xs.USER_MAP.get(e);
                        }
                        delete() {
                            return this._delegate.delete();
                        }
                        reload() {
                            return this._delegate.reload();
                        }
                        toJSON() {
                            return this._delegate.toJSON();
                        }
                        getIdTokenResult(e) {
                            return this._delegate.getIdTokenResult(e);
                        }
                        getIdToken(e) {
                            return this._delegate.getIdToken(e);
                        }
                        linkAndRetrieveDataWithCredential(e) {
                            return this.linkWithCredential(e);
                        }
                        async linkWithCredential(e) {
                            return Ss(this.auth, Yt(this._delegate, e));
                        }
                        async linkWithPhoneNumber(e, t) {
                            return Ts(this.auth, zr(this._delegate, e, t));
                        }
                        async linkWithPopup(e) {
                            return Ss(this.auth, ii(this._delegate, e, ys));
                        }
                        async linkWithRedirect(e) {
                            return await ps(We(this.auth)), wi(this._delegate, e, ys);
                        }
                        reauthenticateAndRetrieveDataWithCredential(e) {
                            return this.reauthenticateWithCredential(e);
                        }
                        async reauthenticateWithCredential(e) {
                            return Ss(this.auth, Xt(this._delegate, e));
                        }
                        reauthenticateWithPhoneNumber(e, t) {
                            return Ts(this.auth, Gr(this._delegate, e, t));
                        }
                        reauthenticateWithPopup(e) {
                            return Ss(this.auth, ri(this._delegate, e, ys));
                        }
                        async reauthenticateWithRedirect(e) {
                            return await ps(We(this.auth)), vi(this._delegate, e, ys);
                        }
                        sendEmailVerification(e) {
                            return vn(this._delegate, e);
                        }
                        async unlink(e) {
                            return await zt(this._delegate, e), this;
                        }
                        updateEmail(e) {
                            return _n(this._delegate, e);
                        }
                        updatePassword(e) {
                            return In(this._delegate, e);
                        }
                        updatePhoneNumber(e) {
                            return Hr(this._delegate, e);
                        }
                        updateProfile(e) {
                            return bn(this._delegate, e);
                        }
                        verifyBeforeUpdateEmail(e, t) {
                            return yn(this._delegate, e, t);
                        }
                        get emailVerified() {
                            return this._delegate.emailVerified;
                        }
                        get isAnonymous() {
                            return this._delegate.isAnonymous;
                        }
                        get metadata() {
                            return this._delegate.metadata;
                        }
                        get phoneNumber() {
                            return this._delegate.phoneNumber;
                        }
                        get providerData() {
                            return this._delegate.providerData;
                        }
                        get refreshToken() {
                            return this._delegate.refreshToken;
                        }
                        get tenantId() {
                            return this._delegate.tenantId;
                        }
                        get displayName() {
                            return this._delegate.displayName;
                        }
                        get email() {
                            return this._delegate.email;
                        }
                        get photoURL() {
                            return this._delegate.photoURL;
                        }
                        get providerId() {
                            return this._delegate.providerId;
                        }
                        get uid() {
                            return this._delegate.uid;
                        }
                        get auth() {
                            return this._delegate.auth;
                        }
                    }
                    xs.USER_MAP = new WeakMap();
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Cs = S;
                    class ks {
                        constructor(e, t) {
                            if (((this.app = e), t.isInitialized())) return (this._delegate = t.getImmediate()), void this.linkUnderlyingAuth();
                            const { apiKey: n } = e.options;
                            Cs(n, 'invalid-api-key', { appName: e.name }), Cs(n, 'invalid-api-key', { appName: e.name });
                            const r = 'undefined' !== typeof window ? ys : void 0;
                            (this._delegate = t.initialize({ options: { persistence: Ns(n, e.name), popupRedirectResolver: r } })),
                            this._delegate._updateErrorMap(d),
                                this.linkUnderlyingAuth();
                        }
                        get emulatorConfig() {
                            return this._delegate.emulatorConfig;
                        }
                        get currentUser() {
                            return this._delegate.currentUser ? xs.getOrCreate(this._delegate.currentUser) : null;
                        }
                        get languageCode() {
                            return this._delegate.languageCode;
                        }
                        set languageCode(e) {
                            this._delegate.languageCode = e;
                        }
                        get settings() {
                            return this._delegate.settings;
                        }
                        get tenantId() {
                            return this._delegate.tenantId;
                        }
                        set tenantId(e) {
                            this._delegate.tenantId = e;
                        }
                        useDeviceLanguage() {
                            this._delegate.useDeviceLanguage();
                        }
                        signOut() {
                            return this._delegate.signOut();
                        }
                        useEmulator(e, t) {
                            Qe(this._delegate, e, t);
                        }
                        applyActionCode(e) {
                            return an(this._delegate, e);
                        }
                        checkActionCode(e) {
                            return un(this._delegate, e);
                        }
                        confirmPasswordReset(e, t) {
                            return sn(this._delegate, e, t);
                        }
                        async createUserWithEmailAndPassword(e, t) {
                            return Ss(this._delegate, ln(this._delegate, e, t));
                        }
                        fetchProvidersForEmail(e) {
                            return this.fetchSignInMethodsForEmail(e);
                        }
                        fetchSignInMethodsForEmail(e) {
                            return mn(this._delegate, e);
                        }
                        isSignInWithEmailLink(e) {
                            return dn(this._delegate, e);
                        }
                        async getRedirectResult() {
                            Cs(ss(), this._delegate, 'operation-not-supported-in-this-environment');
                            const e = await _i(this._delegate, ys);
                            return e ? Ss(this._delegate, Promise.resolve(e)) : { credential: null, user: null };
                        }
                        addFrameworkForLogging(e) {
                            Ho(this._delegate, e);
                        }
                        onAuthStateChanged(e, t, n) {
                            const { next: r, error: i, complete: o } = Os(e, t, n);
                            return this._delegate.onAuthStateChanged(r, i, o);
                        }
                        onIdTokenChanged(e, t, n) {
                            const { next: r, error: i, complete: o } = Os(e, t, n);
                            return this._delegate.onIdTokenChanged(r, i, o);
                        }
                        sendSignInLinkToEmail(e, t) {
                            return fn(this._delegate, e, t);
                        }
                        sendPasswordResetEmail(e, t) {
                            return on(this._delegate, e, t || void 0);
                        }
                        async setPersistence(e) {
                            let t;
                            switch ((ds(this._delegate, e), e)) {
                                case ls.SESSION:
                                    t = Xn;
                                    break;
                                case ls.LOCAL:
                                    const e = await he(Ir)._isAvailable();
                                    t = e ? Ir : Qn;
                                    break;
                                case ls.NONE:
                                    t = de;
                                    break;
                                default:
                                    return w('argument-error', { appName: this._delegate.name });
                            }
                            return this._delegate.setPersistence(t);
                        }
                        signInAndRetrieveDataWithCredential(e) {
                            return this.signInWithCredential(e);
                        }
                        signInAnonymously() {
                            return Ss(this._delegate, Vt(this._delegate));
                        }
                        signInWithCredential(e) {
                            return Ss(this._delegate, Qt(this._delegate, e));
                        }
                        signInWithCustomToken(e) {
                            return Ss(this._delegate, Zt(this._delegate, e));
                        }
                        signInWithEmailAndPassword(e, t) {
                            return Ss(this._delegate, hn(this._delegate, e, t));
                        }
                        signInWithEmailLink(e, t) {
                            return Ss(this._delegate, pn(this._delegate, e, t));
                        }
                        signInWithPhoneNumber(e, t) {
                            return Ts(this._delegate, qr(this._delegate, e, t));
                        }
                        async signInWithPopup(e) {
                            return Cs(ss(), this._delegate, 'operation-not-supported-in-this-environment'), Ss(this._delegate, ni(this._delegate, e, ys));
                        }
                        async signInWithRedirect(e) {
                            return Cs(ss(), this._delegate, 'operation-not-supported-in-this-environment'), await ps(this._delegate), gi(this._delegate, e, ys);
                        }
                        updateCurrentUser(e) {
                            return this._delegate.updateCurrentUser(e);
                        }
                        verifyPasswordResetCode(e) {
                            return cn(this._delegate, e);
                        }
                        unwrap() {
                            return this._delegate;
                        }
                        _delete() {
                            return this._delegate._delete();
                        }
                        linkUnderlyingAuth() {
                            this._delegate.wrapped = () => this;
                        }
                    }

                    function Os(e, t, n) {
                        let r = e;
                        'function' !== typeof e && ({ next: r, error: t, complete: n } = e);
                        const i = r,
                            o = e => i(e && xs.getOrCreate(e));
                        return { next: o, error: t, complete: n };
                    }

                    function Ns(e, t) {
                        const n = gs(e, t);
                        if (('undefined' === typeof self || n.includes(Ir) || n.push(Ir), 'undefined' !== typeof window))
                            for (const r of[Qn, Xn]) n.includes(r) || n.push(r);
                        return n.includes(de) || n.push(de), n;
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    ks.Persistence = ls;
                    class Rs {
                        constructor() {
                            (this.providerId = 'phone'), (this._delegate = new Kr(ws(r.Z.auth())));
                        }
                        static credential(e, t) {
                            return Kr.credential(e, t);
                        }
                        verifyPhoneNumber(e, t) {
                            return this._delegate.verifyPhoneNumber(e, t);
                        }
                        unwrap() {
                            return this._delegate;
                        }
                    }
                    (Rs.PHONE_SIGN_IN_METHOD = Kr.PHONE_SIGN_IN_METHOD), (Rs.PROVIDER_ID = Kr.PROVIDER_ID);
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Ps = S;
                    class Ds {
                        constructor(e, t, n = r.Z.app()) {
                            var i;
                            Ps(null === (i = n.options) || void 0 === i ? void 0 : i.apiKey, 'invalid-api-key', { appName: n.name }),
                                (this._delegate = new Vr(e, t, n.auth())),
                                (this.type = this._delegate.type);
                        }
                        clear() {
                            this._delegate.clear();
                        }
                        render() {
                            return this._delegate.render();
                        }
                        verify() {
                            return this._delegate.verify();
                        }
                    }
                    /**
                     * @license
                     * Copyright 2020 Google LLC
                     *
                     * Licensed under the Apache License, Version 2.0 (the "License");
                     * you may not use this file except in compliance with the License.
                     * You may obtain a copy of the License at
                     *
                     *   http://www.apache.org/licenses/LICENSE-2.0
                     *
                     * Unless required by applicable law or agreed to in writing, software
                     * distributed under the License is distributed on an "AS IS" BASIS,
                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                     * See the License for the specific language governing permissions and
                     * limitations under the License.
                     */
                    const Ls = 'auth-compat';

                    function js(e) {
                        e.INTERNAL.registerComponent(
                                new u.wA(
                                    Ls,
                                    e => {
                                        const t = e.getProvider('app-compat').getImmediate(),
                                            n = e.getProvider('auth');
                                        return new ks(t, n);
                                    },
                                    'PUBLIC'
                                )
                                .setServiceProps({
                                    ActionCodeInfo: {
                                        Operation: {
                                            EMAIL_SIGNIN: l.EMAIL_SIGNIN,
                                            PASSWORD_RESET: l.PASSWORD_RESET,
                                            RECOVER_EMAIL: l.RECOVER_EMAIL,
                                            REVERT_SECOND_FACTOR_ADDITION: l.REVERT_SECOND_FACTOR_ADDITION,
                                            VERIFY_AND_CHANGE_EMAIL: l.VERIFY_AND_CHANGE_EMAIL,
                                            VERIFY_EMAIL: l.VERIFY_EMAIL
                                        }
                                    },
                                    EmailAuthProvider: Tt,
                                    FacebookAuthProvider: kt,
                                    GithubAuthProvider: Nt,
                                    GoogleAuthProvider: Ot,
                                    OAuthProvider: Ct,
                                    SAMLAuthProvider: Lt,
                                    PhoneAuthProvider: Rs,
                                    PhoneMultiFactorGenerator: lo,
                                    RecaptchaVerifier: Ds,
                                    TwitterAuthProvider: jt,
                                    Auth: ks,
                                    AuthCredential: et,
                                    Error: i.ZR
                                })
                                .setInstantiationMode('LAZY')
                                .setMultipleInstances(!1)
                            ),
                            e.registerVersion(Ko, Qo);
                    }
                    js(r.Z);
                },
                14673: (e, t, n) => {
                        'use strict';
                        var r,
                            i = n(98180),
                            o = n(25816),
                            s = n(8463),
                            a = n(53333),
                            u = n(74444),
                            c =
                            'undefined' !== typeof globalThis ?
                            globalThis :
                            'undefined' !== typeof window ?
                            window :
                            'undefined' !== typeof global ?
                            global :
                            'undefined' !== typeof self ?
                            self :
                            {},
                            l = {},
                            h = h || {},
                            f = c || self;

                        function d(e) {
                            var t = typeof e;
                            return (
                                (t = 'object' != t ? t : e ? (Array.isArray(e) ? 'array' : t) : 'null'), 'array' == t || ('object' == t && 'number' == typeof e.length)
                            );
                        }

                        function p(e) {
                            var t = typeof e;
                            return ('object' == t && null != e) || 'function' == t;
                        }

                        function g(e) {
                            return (Object.prototype.hasOwnProperty.call(e, m) && e[m]) || (e[m] = ++v);
                        }
                        var m = 'closure_uid_' + ((1e9 * Math.random()) >>> 0),
                            v = 0;

                        function y(e, t, n) {
                            return e.call.apply(e.bind, arguments);
                        }

                        function w(e, t, n) {
                            if (!e) throw Error();
                            if (2 < arguments.length) {
                                var r = Array.prototype.slice.call(arguments, 2);
                                return function() {
                                    var n = Array.prototype.slice.call(arguments);
                                    return Array.prototype.unshift.apply(n, r), e.apply(t, n);
                                };
                            }
                            return function() {
                                return e.apply(t, arguments);
                            };
                        }

                        function b(e, t, n) {
                            return (b = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf('native code') ? y : w), b.apply(null, arguments);
                        }

                        function _(e, t) {
                            var n = Array.prototype.slice.call(arguments, 1);
                            return function() {
                                var t = n.slice();
                                return t.push.apply(t, arguments), e.apply(this, t);
                            };
                        }

                        function I(e, t) {
                            function n() {}
                            (n.prototype = t.prototype),
                            (e.$ = t.prototype),
                            (e.prototype = new n()),
                            (e.prototype.constructor = e),
                            (e.ac = function(e, n, r) {
                                for (var i = Array(arguments.length - 2), o = 2; o < arguments.length; o++) i[o - 2] = arguments[o];
                                return t.prototype[n].apply(e, i);
                            });
                        }

                        function E() {
                            (this.s = this.s), (this.o = this.o);
                        }
                        var S = 0;
                        (E.prototype.s = !1),
                        (E.prototype.sa = function() {
                            this.s || ((this.s = !0), this.N(), 0 == S) || g(this);
                        }),
                        (E.prototype.N = function() {
                            if (this.o)
                                for (; this.o.length;) this.o.shift()();
                        });
                        const T = Array.prototype.indexOf ?

                            function(e, t) {
                                return Array.prototype.indexOf.call(e, t, void 0);
                            } :
                            function(e, t) {
                                if ('string' === typeof e) return 'string' !== typeof t || 1 != t.length ? -1 : e.indexOf(t, 0);
                                for (let n = 0; n < e.length; n++)
                                    if (n in e && e[n] === t) return n;
                                return -1;
                            };

                        function A(e) {
                            const t = e.length;
                            if (0 < t) {
                                const n = Array(t);
                                for (let r = 0; r < t; r++) n[r] = e[r];
                                return n;
                            }
                            return [];
                        }

                        function x(e, t) {
                            for (let n = 1; n < arguments.length; n++) {
                                const t = arguments[n];
                                if (d(t)) {
                                    const n = e.length || 0,
                                        r = t.length || 0;
                                    e.length = n + r;
                                    for (let i = 0; i < r; i++) e[n + i] = t[i];
                                } else e.push(t);
                            }
                        }

                        function C(e, t) {
                            (this.type = e), (this.g = this.target = t), (this.defaultPrevented = !1);
                        }
                        C.prototype.h = function() {
                            this.defaultPrevented = !0;
                        };
                        var k = (function() {
                            if (!f.addEventListener || !Object.defineProperty) return !1;
                            var e = !1,
                                t = Object.defineProperty({}, 'passive', {
                                    get: function() {
                                        e = !0;
                                    }
                                });
                            try {
                                f.addEventListener('test', () => {}, t), f.removeEventListener('test', () => {}, t);
                            } catch (n) {}
                            return e;
                        })();

                        function O(e) {
                            return /^[\s\xa0]*$/.test(e);
                        }

                        function N() {
                            var e = f.navigator;
                            return e && (e = e.userAgent) ? e : '';
                        }

                        function R(e) {
                            return -1 != N().indexOf(e);
                        }

                        function P(e) {
                            return P[' '](e), e;
                        }

                        function D(e, t) {
                            var n = _r;
                            return Object.prototype.hasOwnProperty.call(n, e) ? n[e] : (n[e] = t(e));
                        }
                        P[' '] = function() {};
                        var L,
                            j,
                            M = R('Opera'),
                            F = R('Trident') || R('MSIE'),
                            U = R('Edge'),
                            V = U || F,
                            B = R('Gecko') && !(-1 != N().toLowerCase().indexOf('webkit') && !R('Edge')) && !(R('Trident') || R('MSIE')) && !R('Edge'),
                            $ = -1 != N().toLowerCase().indexOf('webkit') && !R('Edge');

                        function q() {
                            var e = f.document;
                            return e ? e.documentMode : void 0;
                        }
                        e: {
                            var z = '',
                                G = (function() {
                                    var e = N();
                                    return B ?
                                        /rv:([^\);]+)(\)|;)/.exec(e) :
                                        U ?
                                        /Edge\/([\d\.]+)/.exec(e) :
                                        F ?
                                        /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e) :
                                        $ ?
                                        /WebKit\/(\S+)/.exec(e) :
                                        M ?
                                        /(?:Version)[ \/]?(\S+)/.exec(e) :
                                        void 0;
                                })();
                            if ((G && (z = G ? G[1] : ''), F)) {
                                var W = q();
                                if (null != W && W > parseFloat(z)) {
                                    L = String(W);
                                    break e;
                                }
                            }
                            L = z;
                        }
                        if (f.document && F) {
                            var H = q();
                            j = H || parseInt(L, 10) || void 0;
                        } else j = void 0;
                        var K = j;

                        function Q(e, t) {
                            if (
                                (C.call(this, e ? e.type : ''),
                                    (this.relatedTarget = this.g = this.target = null),
                                    (this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0),
                                    (this.key = ''),
                                    (this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1),
                                    (this.state = null),
                                    (this.pointerId = 0),
                                    (this.pointerType = ''),
                                    (this.i = null),
                                    e)
                            ) {
                                var n = (this.type = e.type),
                                    r = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;
                                if (((this.target = e.target || e.srcElement), (this.g = t), (t = e.relatedTarget))) {
                                    if (B) {
                                        e: {
                                            try {
                                                P(t.nodeName);
                                                var i = !0;
                                                break e;
                                            } catch (o) {}
                                            i = !1;
                                        }
                                        i || (t = null);
                                    }
                                } else 'mouseover' == n ? (t = e.fromElement) : 'mouseout' == n && (t = e.toElement);
                                (this.relatedTarget = t),
                                r
                                    ?
                                    ((this.clientX = void 0 !== r.clientX ? r.clientX : r.pageX),
                                        (this.clientY = void 0 !== r.clientY ? r.clientY : r.pageY),
                                        (this.screenX = r.screenX || 0),
                                        (this.screenY = r.screenY || 0)) :
                                    ((this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX),
                                        (this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY),
                                        (this.screenX = e.screenX || 0),
                                        (this.screenY = e.screenY || 0)),
                                    (this.button = e.button),
                                    (this.key = e.key || ''),
                                    (this.ctrlKey = e.ctrlKey),
                                    (this.altKey = e.altKey),
                                    (this.shiftKey = e.shiftKey),
                                    (this.metaKey = e.metaKey),
                                    (this.pointerId = e.pointerId || 0),
                                    (this.pointerType = 'string' === typeof e.pointerType ? e.pointerType : Y[e.pointerType] || ''),
                                    (this.state = e.state),
                                    (this.i = e),
                                    e.defaultPrevented && Q.$.h.call(this);
                            }
                        }
                        I(Q, C);
                        var Y = { 2: 'touch', 3: 'pen', 4: 'mouse' };
                        Q.prototype.h = function() {
                            Q.$.h.call(this);
                            var e = this.i;
                            e.preventDefault ? e.preventDefault() : (e.returnValue = !1);
                        };
                        var X = 'closure_listenable_' + ((1e6 * Math.random()) | 0),
                            J = 0;

                        function Z(e, t, n, r, i) {
                            (this.listener = e),
                            (this.proxy = null),
                            (this.src = t),
                            (this.type = n),
                            (this.capture = !!r),
                            (this.la = i),
                            (this.key = ++J),
                            (this.fa = this.ia = !1);
                        }

                        function ee(e) {
                            (e.fa = !0), (e.listener = null), (e.proxy = null), (e.src = null), (e.la = null);
                        }

                        function te(e, t, n) {
                            for (const r in e) t.call(n, e[r], r, e);
                        }

                        function ne(e, t) {
                            for (const n in e) t.call(void 0, e[n], n, e);
                        }

                        function re(e) {
                            const t = {};
                            for (const n in e) t[n] = e[n];
                            return t;
                        }
                        const ie = 'constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf'.split(' ');

                        function oe(e, t) {
                            let n, r;
                            for (let i = 1; i < arguments.length; i++) {
                                for (n in ((r = arguments[i]), r)) e[n] = r[n];
                                for (let t = 0; t < ie.length; t++)(n = ie[t]), Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
                            }
                        }

                        function se(e) {
                            (this.src = e), (this.g = {}), (this.h = 0);
                        }

                        function ae(e, t) {
                            var n = t.type;
                            if (n in e.g) {
                                var r,
                                    i = e.g[n],
                                    o = T(i, t);
                                (r = 0 <= o) && Array.prototype.splice.call(i, o, 1), r && (ee(t), 0 == e.g[n].length && (delete e.g[n], e.h--));
                            }
                        }

                        function ue(e, t, n, r) {
                            for (var i = 0; i < e.length; ++i) {
                                var o = e[i];
                                if (!o.fa && o.listener == t && o.capture == !!n && o.la == r) return i;
                            }
                            return -1;
                        }
                        se.prototype.add = function(e, t, n, r, i) {
                            var o = e.toString();
                            (e = this.g[o]), e || ((e = this.g[o] = []), this.h++);
                            var s = ue(e, t, r, i);
                            return -1 < s ? ((t = e[s]), n || (t.ia = !1)) : ((t = new Z(t, this.src, o, !!r, i)), (t.ia = n), e.push(t)), t;
                        };
                        var ce = 'closure_lm_' + ((1e6 * Math.random()) | 0),
                            le = {};

                        function he(e, t, n, r, i) {
                            if (r && r.once) return pe(e, t, n, r, i);
                            if (Array.isArray(t)) {
                                for (var o = 0; o < t.length; o++) he(e, t[o], n, r, i);
                                return null;
                            }
                            return (n = _e(n)), e && e[X] ? e.O(t, n, p(r) ? !!r.capture : !!r, i) : fe(e, t, n, !1, r, i);
                        }

                        function fe(e, t, n, r, i, o) {
                            if (!t) throw Error('Invalid event type');
                            var s = p(i) ? !!i.capture : !!i,
                                a = we(e);
                            if ((a || (e[ce] = a = new se(e)), (n = a.add(t, n, r, s, o)), n.proxy)) return n;
                            if (((r = de()), (n.proxy = r), (r.src = e), (r.listener = n), e.addEventListener))
                                k || (i = s), void 0 === i && (i = !1), e.addEventListener(t.toString(), r, i);
                            else if (e.attachEvent) e.attachEvent(ve(t.toString()), r);
                            else {
                                if (!e.addListener || !e.removeListener) throw Error('addEventListener and attachEvent are unavailable.');
                                e.addListener(r);
                            }
                            return n;
                        }

                        function de() {
                            function e(n) {
                                return t.call(e.src, e.listener, n);
                            }
                            const t = ye;
                            return e;
                        }

                        function pe(e, t, n, r, i) {
                            if (Array.isArray(t)) {
                                for (var o = 0; o < t.length; o++) pe(e, t[o], n, r, i);
                                return null;
                            }
                            return (n = _e(n)), e && e[X] ? e.P(t, n, p(r) ? !!r.capture : !!r, i) : fe(e, t, n, !0, r, i);
                        }

                        function ge(e, t, n, r, i) {
                            if (Array.isArray(t))
                                for (var o = 0; o < t.length; o++) ge(e, t[o], n, r, i);
                            else
                                (r = p(r) ? !!r.capture : !!r),
                                (n = _e(n)),
                                e && e[X] ?
                                ((e = e.i),
                                    (t = String(t).toString()),
                                    t in e.g &&
                                    ((o = e.g[t]),
                                        (n = ue(o, n, r, i)), -1 < n && (ee(o[n]), Array.prototype.splice.call(o, n, 1), 0 == o.length && (delete e.g[t], e.h--)))) :
                                e && (e = we(e)) && ((t = e.g[t.toString()]), (e = -1), t && (e = ue(t, n, r, i)), (n = -1 < e ? t[e] : null) && me(n));
                        }

                        function me(e) {
                            if ('number' !== typeof e && e && !e.fa) {
                                var t = e.src;
                                if (t && t[X]) ae(t.i, e);
                                else {
                                    var n = e.type,
                                        r = e.proxy;
                                    t.removeEventListener ?
                                        t.removeEventListener(n, r, e.capture) :
                                        t.detachEvent ?
                                        t.detachEvent(ve(n), r) :
                                        t.addListener && t.removeListener && t.removeListener(r),
                                        (n = we(t)) ? (ae(n, e), 0 == n.h && ((n.src = null), (t[ce] = null))) : ee(e);
                                }
                            }
                        }

                        function ve(e) {
                            return e in le ? le[e] : (le[e] = 'on' + e);
                        }

                        function ye(e, t) {
                            if (e.fa) e = !0;
                            else {
                                t = new Q(t, this);
                                var n = e.listener,
                                    r = e.la || e.src;
                                e.ia && me(e), (e = n.call(r, t));
                            }
                            return e;
                        }

                        function we(e) {
                            return (e = e[ce]), e instanceof se ? e : null;
                        }
                        var be = '__closure_events_fn_' + ((1e9 * Math.random()) >>> 0);

                        function _e(e) {
                            return 'function' === typeof e ?
                                e :
                                (e[be] ||
                                    (e[be] = function(t) {
                                        return e.handleEvent(t);
                                    }),
                                    e[be]);
                        }

                        function Ie() {
                            E.call(this), (this.i = new se(this)), (this.S = this), (this.J = null);
                        }

                        function Ee(e, t) {
                            var n,
                                r = e.J;
                            if (r)
                                for (n = []; r; r = r.J) n.push(r);
                            if (((e = e.S), (r = t.type || t), 'string' === typeof t)) t = new C(t, e);
                            else if (t instanceof C) t.target = t.target || e;
                            else {
                                var i = t;
                                (t = new C(r, e)), oe(t, i);
                            }
                            if (((i = !0), n))
                                for (var o = n.length - 1; 0 <= o; o--) {
                                    var s = (t.g = n[o]);
                                    i = Se(s, r, !0, t) && i;
                                }
                            if (((s = t.g = e), (i = Se(s, r, !0, t) && i), (i = Se(s, r, !1, t) && i), n))
                                for (o = 0; o < n.length; o++)(s = t.g = n[o]), (i = Se(s, r, !1, t) && i);
                        }

                        function Se(e, t, n, r) {
                            if (((t = e.i.g[String(t)]), !t)) return !0;
                            t = t.concat();
                            for (var i = !0, o = 0; o < t.length; ++o) {
                                var s = t[o];
                                if (s && !s.fa && s.capture == n) {
                                    var a = s.listener,
                                        u = s.la || s.src;
                                    s.ia && ae(e.i, s), (i = !1 !== a.call(u, r) && i);
                                }
                            }
                            return i && !r.defaultPrevented;
                        }
                        I(Ie, E),
                            (Ie.prototype[X] = !0),
                            (Ie.prototype.removeEventListener = function(e, t, n, r) {
                                ge(this, e, t, n, r);
                            }),
                            (Ie.prototype.N = function() {
                                if ((Ie.$.N.call(this), this.i)) {
                                    var e,
                                        t = this.i;
                                    for (e in t.g) {
                                        for (var n = t.g[e], r = 0; r < n.length; r++) ee(n[r]);
                                        delete t.g[e], t.h--;
                                    }
                                }
                                this.J = null;
                            }),
                            (Ie.prototype.O = function(e, t, n, r) {
                                return this.i.add(String(e), t, !1, n, r);
                            }),
                            (Ie.prototype.P = function(e, t, n, r) {
                                return this.i.add(String(e), t, !0, n, r);
                            });
                        var Te = f.JSON.stringify;
                        class Ae {
                            constructor(e, t) {
                                (this.i = e), (this.j = t), (this.h = 0), (this.g = null);
                            }
                            get() {
                                let e;
                                return 0 < this.h ? (this.h--, (e = this.g), (this.g = e.next), (e.next = null)) : (e = this.i()), e;
                            }
                        }

                        function xe() {
                            var e = Le;
                            let t = null;
                            return e.g && ((t = e.g), (e.g = e.g.next), e.g || (e.h = null), (t.next = null)), t;
                        }
                        class Ce {
                            constructor() {
                                this.h = this.g = null;
                            }
                            add(e, t) {
                                const n = ke.get();
                                n.set(e, t), this.h ? (this.h.next = n) : (this.g = n), (this.h = n);
                            }
                        }
                        var ke = new Ae(
                            () => new Oe(),
                            e => e.reset()
                        );
                        class Oe {
                            constructor() {
                                this.next = this.g = this.h = null;
                            }
                            set(e, t) {
                                (this.h = e), (this.g = t), (this.next = null);
                            }
                            reset() {
                                this.next = this.g = this.h = null;
                            }
                        }

                        function Ne(e) {
                            var t = 1;
                            e = e.split(':');
                            const n = [];
                            for (; 0 < t && e.length;) n.push(e.shift()), t--;
                            return e.length && n.push(e.join(':')), n;
                        }

                        function Re(e) {
                            f.setTimeout(() => {
                                throw e;
                            }, 0);
                        }
                        let Pe,
                            De = !1,
                            Le = new Ce(),
                            je = () => {
                                const e = f.Promise.resolve(void 0);
                                Pe = () => {
                                    e.then(Me);
                                };
                            };
                        var Me = () => {
                            for (var e;
                                (e = xe());) {
                                try {
                                    e.h.call(e.g);
                                } catch (n) {
                                    Re(n);
                                }
                                var t = ke;
                                t.j(e), 100 > t.h && (t.h++, (e.next = t.g), (t.g = e));
                            }
                            De = !1;
                        };

                        function Fe(e, t) {
                            Ie.call(this), (this.h = e || 1), (this.g = t || f), (this.j = b(this.qb, this)), (this.l = Date.now());
                        }

                        function Ue(e) {
                            (e.ga = !1), e.T && (e.g.clearTimeout(e.T), (e.T = null));
                        }

                        function Ve(e, t, n) {
                            if ('function' === typeof e) n && (e = b(e, n));
                            else {
                                if (!e || 'function' != typeof e.handleEvent) throw Error('Invalid listener argument');
                                e = b(e.handleEvent, e);
                            }
                            return 2147483647 < Number(t) ? -1 : f.setTimeout(e, t || 0);
                        }

                        function Be(e) {
                            e.g = Ve(() => {
                                (e.g = null), e.i && ((e.i = !1), Be(e));
                            }, e.j);
                            const t = e.h;
                            (e.h = null), e.m.apply(null, t);
                        }
                        I(Fe, Ie),
                            (r = Fe.prototype),
                            (r.ga = !1),
                            (r.T = null),
                            (r.qb = function() {
                                if (this.ga) {
                                    var e = Date.now() - this.l;
                                    0 < e && e < 0.8 * this.h ?
                                        (this.T = this.g.setTimeout(this.j, this.h - e)) :
                                        (this.T && (this.g.clearTimeout(this.T), (this.T = null)), Ee(this, 'tick'), this.ga && (Ue(this), this.start()));
                                }
                            }),
                            (r.start = function() {
                                (this.ga = !0), this.T || ((this.T = this.g.setTimeout(this.j, this.h)), (this.l = Date.now()));
                            }),
                            (r.N = function() {
                                Fe.$.N.call(this), Ue(this), delete this.g;
                            });
                        class $e extends E {
                            constructor(e, t) {
                                super(), (this.m = e), (this.j = t), (this.h = null), (this.i = !1), (this.g = null);
                            }
                            l(e) {
                                (this.h = arguments), this.g ? (this.i = !0) : Be(this);
                            }
                            N() {
                                super.N(), this.g && (f.clearTimeout(this.g), (this.g = null), (this.i = !1), (this.h = null));
                            }
                        }

                        function qe(e) {
                            E.call(this), (this.h = e), (this.g = {});
                        }
                        I(qe, E);
                        var ze = [];

                        function Ge(e, t, n, r) {
                            Array.isArray(n) || (n && (ze[0] = n.toString()), (n = ze));
                            for (var i = 0; i < n.length; i++) {
                                var o = he(t, n[i], r || e.handleEvent, !1, e.h || e);
                                if (!o) break;
                                e.g[o.key] = o;
                            }
                        }

                        function We(e) {
                            te(
                                    e.g,
                                    function(e, t) {
                                        this.g.hasOwnProperty(t) && me(e);
                                    },
                                    e
                                ),
                                (e.g = {});
                        }

                        function He() {
                            this.g = !0;
                        }

                        function Ke(e, t, n, r, i, o) {
                            e.info(function() {
                                if (e.g)
                                    if (o)
                                        for (var s = '', a = o.split('&'), u = 0; u < a.length; u++) {
                                            var c = a[u].split('=');
                                            if (1 < c.length) {
                                                var l = c[0];
                                                c = c[1];
                                                var h = l.split('_');
                                                s = 2 <= h.length && 'type' == h[1] ? s + (l + '=') + c + '&' : s + (l + '=redacted&');
                                            }
                                        }
                                    else s = null;
                                else s = o;
                                return 'XMLHTTP REQ (' + r + ') [attempt ' + i + ']: ' + t + '\n' + n + '\n' + s;
                            });
                        }

                        function Qe(e, t, n, r, i, o, s) {
                            e.info(function() {
                                return 'XMLHTTP RESP (' + r + ') [ attempt ' + i + ']: ' + t + '\n' + n + '\n' + o + ' ' + s;
                            });
                        }

                        function Ye(e, t, n, r) {
                            e.info(function() {
                                return 'XMLHTTP TEXT (' + t + '): ' + Je(e, n) + (r ? ' ' + r : '');
                            });
                        }

                        function Xe(e, t) {
                            e.info(function() {
                                return 'TIMEOUT: ' + t;
                            });
                        }

                        function Je(e, t) {
                            if (!e.g) return t;
                            if (!t) return null;
                            try {
                                var n = JSON.parse(t);
                                if (n)
                                    for (e = 0; e < n.length; e++)
                                        if (Array.isArray(n[e])) {
                                            var r = n[e];
                                            if (!(2 > r.length)) {
                                                var i = r[1];
                                                if (Array.isArray(i) && !(1 > i.length)) {
                                                    var o = i[0];
                                                    if ('noop' != o && 'stop' != o && 'close' != o)
                                                        for (var s = 1; s < i.length; s++) i[s] = '';
                                                }
                                            }
                                        }
                                return Te(n);
                            } catch (a) {
                                return t;
                            }
                        }
                        (qe.prototype.N = function() {
                            qe.$.N.call(this), We(this);
                        }),
                        (qe.prototype.handleEvent = function() {
                            throw Error('EventHandler.handleEvent not implemented');
                        }),
                        (He.prototype.Ea = function() {
                            this.g = !1;
                        }),
                        (He.prototype.info = function() {});
                        var Ze = {},
                            et = null;

                        function tt() {
                            return (et = et || new Ie());
                        }

                        function nt(e) {
                            C.call(this, Ze.Ta, e);
                        }

                        function rt(e) {
                            const t = tt();
                            Ee(t, new nt(t));
                        }

                        function it(e, t) {
                            C.call(this, Ze.STAT_EVENT, e), (this.stat = t);
                        }

                        function ot(e) {
                            const t = tt();
                            Ee(t, new it(t, e));
                        }

                        function st(e, t) {
                            C.call(this, Ze.Ua, e), (this.size = t);
                        }

                        function at(e, t) {
                            if ('function' !== typeof e) throw Error('Fn must not be null and must be a function');
                            return f.setTimeout(function() {
                                e();
                            }, t);
                        }
                        (Ze.Ta = 'serverreachability'), I(nt, C), (Ze.STAT_EVENT = 'statevent'), I(it, C), (Ze.Ua = 'timingevent'), I(st, C);
                        var ut = { NO_ERROR: 0, rb: 1, Eb: 2, Db: 3, yb: 4, Cb: 5, Fb: 6, Qa: 7, TIMEOUT: 8, Ib: 9 },
                            ct = {
                                wb: 'complete',
                                Sb: 'success',
                                Ra: 'error',
                                Qa: 'abort',
                                Kb: 'ready',
                                Lb: 'readystatechange',
                                TIMEOUT: 'timeout',
                                Gb: 'incrementaldata',
                                Jb: 'progress',
                                zb: 'downloadprogress',
                                $b: 'uploadprogress'
                            };

                        function lt() {}

                        function ht(e) {
                            return e.h || (e.h = e.i());
                        }

                        function ft() {}
                        lt.prototype.h = null;
                        var dt,
                            pt = { OPEN: 'a', vb: 'b', Ra: 'c', Hb: 'd' };

                        function gt() {
                            C.call(this, 'd');
                        }

                        function mt() {
                            C.call(this, 'c');
                        }

                        function vt() {}

                        function yt(e, t, n, r) {
                            (this.l = e),
                            (this.j = t),
                            (this.m = n),
                            (this.W = r || 1),
                            (this.U = new qe(this)),
                            (this.P = bt),
                            (e = V ? 125 : void 0),
                            (this.V = new Fe(e)),
                            (this.I = null),
                            (this.i = !1),
                            (this.s = this.A = this.v = this.L = this.G = this.Y = this.B = null),
                            (this.F = []),
                            (this.g = null),
                            (this.C = 0),
                            (this.o = this.u = null),
                            (this.ca = -1),
                            (this.J = !1),
                            (this.O = 0),
                            (this.M = null),
                            (this.ba = this.K = this.aa = this.S = !1),
                            (this.h = new wt());
                        }

                        function wt() {
                            (this.i = null), (this.g = ''), (this.h = !1);
                        }
                        I(gt, C),
                            I(mt, C),
                            I(vt, lt),
                            (vt.prototype.g = function() {
                                return new XMLHttpRequest();
                            }),
                            (vt.prototype.i = function() {
                                return {};
                            }),
                            (dt = new vt());
                        var bt = 45e3,
                            _t = {},
                            It = {};

                        function Et(e, t, n) {
                            (e.L = 1), (e.v = Gt(Vt(t))), (e.s = n), (e.S = !0), St(e, null);
                        }

                        function St(e, t) {
                            (e.G = Date.now()), Ct(e), (e.A = Vt(e.v));
                            var n = e.A,
                                r = e.W;
                            Array.isArray(r) || (r = [String(r)]),
                                on(n.i, 't', r),
                                (e.C = 0),
                                (n = e.l.J),
                                (e.h = new wt()),
                                (e.g = lr(e.l, n ? t : null, !e.s)),
                                0 < e.O && (e.M = new $e(b(e.Pa, e, e.g), e.O)),
                                Ge(e.U, e.g, 'readystatechange', e.nb),
                                (t = e.I ? re(e.I) : {}),
                                e.s ?
                                (e.u || (e.u = 'POST'), (t['Content-Type'] = 'application/x-www-form-urlencoded'), e.g.ha(e.A, e.u, e.s, t)) :
                                ((e.u = 'GET'), e.g.ha(e.A, e.u, null, t)),
                                rt(),
                                Ke(e.j, e.u, e.A, e.m, e.W, e.s);
                        }

                        function Tt(e) {
                            return !!e.g && 'GET' == e.u && 2 != e.L && e.l.Ha;
                        }

                        function At(e, t, n) {
                            let r,
                                i = !0;
                            for (; !e.J && e.C < n.length;) {
                                if (((r = xt(e, n)), r == It)) {
                                    4 == t && ((e.o = 4), ot(14), (i = !1)), Ye(e.j, e.m, null, '[Incomplete Response]');
                                    break;
                                }
                                if (r == _t) {
                                    (e.o = 4), ot(15), Ye(e.j, e.m, n, '[Invalid Chunk]'), (i = !1);
                                    break;
                                }
                                Ye(e.j, e.m, r, null), Pt(e, r);
                            }
                            Tt(e) && r != It && r != _t && ((e.h.g = ''), (e.C = 0)),
                                4 != t || 0 != n.length || e.h.h || ((e.o = 1), ot(16), (i = !1)),
                                (e.i = e.i && i),
                                i ?
                                0 < n.length &&
                                !e.ba &&
                                ((e.ba = !0),
                                    (t = e.l),
                                    t.g == e && t.ca && !t.M && (t.l.info('Great, no buffering proxy detected. Bytes received: ' + n.length), nr(t), (t.M = !0), ot(11))) :
                                (Ye(e.j, e.m, n, '[Invalid Chunked Response]'), Rt(e), Nt(e));
                        }

                        function xt(e, t) {
                            var n = e.C,
                                r = t.indexOf('\n', n);
                            return -1 == r ?
                                It :
                                ((n = Number(t.substring(n, r))), isNaN(n) ? _t : ((r += 1), r + n > t.length ? It : ((t = t.slice(r, r + n)), (e.C = r + n), t)));
                        }

                        function Ct(e) {
                            (e.Y = Date.now() + e.P), kt(e, e.P);
                        }

                        function kt(e, t) {
                            if (null != e.B) throw Error('WatchDog timer not null');
                            e.B = at(b(e.lb, e), t);
                        }

                        function Ot(e) {
                            e.B && (f.clearTimeout(e.B), (e.B = null));
                        }

                        function Nt(e) {
                            0 == e.l.H || e.J || or(e.l, e);
                        }

                        function Rt(e) {
                            Ot(e);
                            var t = e.M;
                            t && 'function' == typeof t.sa && t.sa(), (e.M = null), Ue(e.V), We(e.U), e.g && ((t = e.g), (e.g = null), t.abort(), t.sa());
                        }

                        function Pt(e, t) {
                            try {
                                var n = e.l;
                                if (0 != n.H && (n.g == e || dn(n.i, e)))
                                    if (!e.K && dn(n.i, e) && 3 == n.H) {
                                        try {
                                            var r = n.Ja.g.parse(t);
                                        } catch (c) {
                                            r = null;
                                        }
                                        if (Array.isArray(r) && 3 == r.length) {
                                            var i = r;
                                            if (0 == i[0]) {
                                                e: if (!n.u) {
                                                    if (n.g) {
                                                        if (!(n.g.G + 3e3 < e.G)) break e;
                                                        ir(n), Hn(n);
                                                    }
                                                    tr(n), ot(18);
                                                }
                                            }
                                            else(n.Fa = i[1]), 0 < n.Fa - n.V && 37500 > i[2] && n.G && 0 == n.A && !n.v && (n.v = at(b(n.ib, n), 6e3));
                                            if (1 >= fn(n.i) && n.oa) {
                                                try {
                                                    n.oa();
                                                } catch (c) {}
                                                n.oa = void 0;
                                            }
                                        } else ar(n, 11);
                                    } else if (((e.K || n.g == e) && ir(n), !O(t)))
                                    for (i = n.Ja.g.parse(t), t = 0; t < i.length; t++) {
                                        let c = i[t];
                                        if (((n.V = c[0]), (c = c[1]), 2 == n.H))
                                            if ('c' == c[0]) {
                                                (n.K = c[1]), (n.pa = c[2]);
                                                const t = c[3];
                                                null != t && ((n.ra = t), n.l.info('VER=' + n.ra));
                                                const i = c[4];
                                                null != i && ((n.Ga = i), n.l.info('SVER=' + n.Ga));
                                                const l = c[5];
                                                null != l && 'number' === typeof l && 0 < l && ((r = 1.5 * l), (n.L = r), n.l.info('backChannelRequestTimeoutMs_=' + r)), (r = n);
                                                const h = e.g;
                                                if (h) {
                                                    const e = h.g ? h.g.getResponseHeader('X-Client-Wire-Protocol') : null;
                                                    if (e) {
                                                        var o = r.i;
                                                        o.g ||
                                                            (-1 == e.indexOf('spdy') && -1 == e.indexOf('quic') && -1 == e.indexOf('h2')) ||
                                                            ((o.j = o.l), (o.g = new Set()), o.h && (pn(o, o.h), (o.h = null)));
                                                    }
                                                    if (r.F) {
                                                        const e = h.g ? h.g.getResponseHeader('X-HTTP-Session-Id') : null;
                                                        e && ((r.Da = e), zt(r.I, r.F, e));
                                                    }
                                                }
                                                (n.H = 3), n.h && n.h.Ba(), n.ca && ((n.S = Date.now() - e.G), n.l.info('Handshake RTT: ' + n.S + 'ms')), (r = n);
                                                var s = e;
                                                if (((r.wa = cr(r, r.J ? r.pa : null, r.Y)), s.K)) {
                                                    gn(r.i, s);
                                                    var a = s,
                                                        u = r.L;
                                                    u && a.setTimeout(u), a.B && (Ot(a), Ct(a)), (r.g = s);
                                                } else er(r);
                                                0 < n.j.length && Qn(n);
                                            } else('stop' != c[0] && 'close' != c[0]) || ar(n, 7);
                                        else
                                            3 == n.H &&
                                            ('stop' == c[0] || 'close' == c[0] ? ('stop' == c[0] ? ar(n, 7) : Wn(n)) : 'noop' != c[0] && n.h && n.h.Aa(c), (n.A = 0));
                                    }
                                rt(4);
                            } catch (c) {}
                        }

                        function Dt(e) {
                            if (e.Z && 'function' == typeof e.Z) return e.Z();
                            if (('undefined' !== typeof Map && e instanceof Map) || ('undefined' !== typeof Set && e instanceof Set)) return Array.from(e.values());
                            if ('string' === typeof e) return e.split('');
                            if (d(e)) {
                                for (var t = [], n = e.length, r = 0; r < n; r++) t.push(e[r]);
                                return t;
                            }
                            for (r in ((t = []), (n = 0), e)) t[n++] = e[r];
                            return t;
                        }

                        function Lt(e) {
                            if (e.ta && 'function' == typeof e.ta) return e.ta();
                            if (!e.Z || 'function' != typeof e.Z) {
                                if ('undefined' !== typeof Map && e instanceof Map) return Array.from(e.keys());
                                if (!('undefined' !== typeof Set && e instanceof Set)) {
                                    if (d(e) || 'string' === typeof e) {
                                        var t = [];
                                        e = e.length;
                                        for (var n = 0; n < e; n++) t.push(n);
                                        return t;
                                    }
                                    (t = []), (n = 0);
                                    for (const r in e) t[n++] = r;
                                    return t;
                                }
                            }
                        }

                        function jt(e, t) {
                            if (e.forEach && 'function' == typeof e.forEach) e.forEach(t, void 0);
                            else if (d(e) || 'string' === typeof e) Array.prototype.forEach.call(e, t, void 0);
                            else
                                for (var n = Lt(e), r = Dt(e), i = r.length, o = 0; o < i; o++) t.call(void 0, r[o], n && n[o], e);
                        }
                        (r = yt.prototype),
                        (r.setTimeout = function(e) {
                            this.P = e;
                        }),
                        (r.nb = function(e) {
                            e = e.target;
                            const t = this.M;
                            t && 3 == Un(e) ? t.l() : this.Pa(e);
                        }),
                        (r.Pa = function(e) {
                            try {
                                if (e == this.g)
                                    e: {
                                        const l = Un(this.g);
                                        var t = this.g.Ia();
                                        const h = this.g.da();
                                        if (!(3 > l) && (3 != l || V || (this.g && (this.h.h || this.g.ja() || Vn(this.g))))) {
                                            this.J || 4 != l || 7 == t || rt(8 == t || 0 >= h ? 3 : 2), Ot(this);
                                            var n = this.g.da();
                                            this.ca = n;
                                            t: if (Tt(this)) {
                                                    var r = Vn(this.g);
                                                    e = '';
                                                    var i = r.length,
                                                        o = 4 == Un(this.g);
                                                    if (!this.h.i) {
                                                        if ('undefined' === typeof TextDecoder) {
                                                            Rt(this), Nt(this);
                                                            var s = '';
                                                            break t;
                                                        }
                                                        this.h.i = new f.TextDecoder();
                                                    }
                                                    for (t = 0; t < i; t++)(this.h.h = !0), (e += this.h.i.decode(r[t], { stream: o && t == i - 1 }));
                                                    r.splice(0, i), (this.h.g += e), (this.C = 0), (s = this.h.g);
                                                } else s = this.g.ja();
                                            if (((this.i = 200 == n), Qe(this.j, this.u, this.A, this.m, this.W, l, n), this.i)) {
                                                if (this.aa && !this.K) {
                                                    t: {
                                                        if (this.g) {
                                                            var a,
                                                                u = this.g;
                                                            if ((a = u.g ? u.g.getResponseHeader('X-HTTP-Initial-Response') : null) && !O(a)) {
                                                                var c = a;
                                                                break t;
                                                            }
                                                        }
                                                        c = null;
                                                    }
                                                    if (!(n = c)) {
                                                        (this.i = !1), (this.o = 3), ot(12), Rt(this), Nt(this);
                                                        break e;
                                                    }
                                                    Ye(this.j, this.m, n, 'Initial handshake response via X-HTTP-Initial-Response'),
                                                    (this.K = !0),
                                                    Pt(this, n);
                                                }
                                                this.S ?
                                                    (At(this, l, s), V && this.i && 3 == l && (Ge(this.U, this.V, 'tick', this.mb), this.V.start())) :
                                                    (Ye(this.j, this.m, s, null), Pt(this, s)),
                                                    4 == l && Rt(this),
                                                    this.i && !this.J && (4 == l ? or(this.l, this) : ((this.i = !1), Ct(this)));
                                            } else Bn(this.g), 400 == n && 0 < s.indexOf('Unknown SID') ? ((this.o = 3), ot(12)) : ((this.o = 0), ot(13)), Rt(this), Nt(this);
                                        }
                                    }
                            } catch (l) {}
                        }),
                        (r.mb = function() {
                            if (this.g) {
                                var e = Un(this.g),
                                    t = this.g.ja();
                                this.C < t.length && (Ot(this), At(this, e, t), this.i && 4 != e && Ct(this));
                            }
                        }),
                        (r.cancel = function() {
                            (this.J = !0), Rt(this);
                        }),
                        (r.lb = function() {
                            this.B = null;
                            const e = Date.now();
                            0 <= e - this.Y ? (Xe(this.j, this.A), 2 != this.L && (rt(), ot(17)), Rt(this), (this.o = 2), Nt(this)) : kt(this, this.Y - e);
                        });
                        var Mt = RegExp(
                            '^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$'
                        );

                        function Ft(e, t) {
                            if (e) {
                                e = e.split('&');
                                for (var n = 0; n < e.length; n++) {
                                    var r = e[n].indexOf('='),
                                        i = null;
                                    if (0 <= r) {
                                        var o = e[n].substring(0, r);
                                        i = e[n].substring(r + 1);
                                    } else o = e[n];
                                    t(o, i ? decodeURIComponent(i.replace(/\+/g, ' ')) : '');
                                }
                            }
                        }

                        function Ut(e) {
                            if (((this.g = this.s = this.j = ''), (this.m = null), (this.o = this.l = ''), (this.h = !1), e instanceof Ut)) {
                                (this.h = e.h), Bt(this, e.j), (this.s = e.s), (this.g = e.g), $t(this, e.m), (this.l = e.l);
                                var t = e.i,
                                    n = new en();
                                (n.i = t.i), t.g && ((n.g = new Map(t.g)), (n.h = t.h)), qt(this, n), (this.o = e.o);
                            } else
                                e && (t = String(e).match(Mt)) ?
                                ((this.h = !1),
                                    Bt(this, t[1] || '', !0),
                                    (this.s = Wt(t[2] || '')),
                                    (this.g = Wt(t[3] || '', !0)),
                                    $t(this, t[4]),
                                    (this.l = Wt(t[5] || '', !0)),
                                    qt(this, t[6] || '', !0),
                                    (this.o = Wt(t[7] || ''))) :
                                ((this.h = !1), (this.i = new en(null, this.h)));
                        }

                        function Vt(e) {
                            return new Ut(e);
                        }

                        function Bt(e, t, n) {
                            (e.j = n ? Wt(t, !0) : t), e.j && (e.j = e.j.replace(/:$/, ''));
                        }

                        function $t(e, t) {
                            if (t) {
                                if (((t = Number(t)), isNaN(t) || 0 > t)) throw Error('Bad port number ' + t);
                                e.m = t;
                            } else e.m = null;
                        }

                        function qt(e, t, n) {
                            t instanceof en ? ((e.i = t), an(e.i, e.h)) : (n || (t = Ht(t, Jt)), (e.i = new en(t, e.h)));
                        }

                        function zt(e, t, n) {
                            e.i.set(t, n);
                        }

                        function Gt(e) {
                            return (
                                zt(
                                    e,
                                    'zx',
                                    Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ Date.now()).toString(36)
                                ),
                                e
                            );
                        }

                        function Wt(e, t) {
                            return e ? (t ? decodeURI(e.replace(/%25/g, '%2525')) : decodeURIComponent(e)) : '';
                        }

                        function Ht(e, t, n) {
                            return 'string' === typeof e ? ((e = encodeURI(e).replace(t, Kt)), n && (e = e.replace(/%25([0-9a-fA-F]{2})/g, '%$1')), e) : null;
                        }

                        function Kt(e) {
                            return (e = e.charCodeAt(0)), '%' + ((e >> 4) & 15).toString(16) + (15 & e).toString(16);
                        }
                        Ut.prototype.toString = function() {
                            var e = [],
                                t = this.j;
                            t && e.push(Ht(t, Qt, !0), ':');
                            var n = this.g;
                            return (
                                (n || 'file' == t) &&
                                (e.push('//'),
                                    (t = this.s) && e.push(Ht(t, Qt, !0), '@'),
                                    e.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g, '%$1')),
                                    (n = this.m),
                                    null != n && e.push(':', String(n))),
                                (n = this.l) && (this.g && '/' != n.charAt(0) && e.push('/'), e.push(Ht(n, '/' == n.charAt(0) ? Xt : Yt, !0))),
                                (n = this.i.toString()) && e.push('?', n),
                                (n = this.o) && e.push('#', Ht(n, Zt)),
                                e.join('')
                            );
                        };
                        var Qt = /[#\/\?@]/g,
                            Yt = /[#\?:]/g,
                            Xt = /[#\?]/g,
                            Jt = /[#\?@]/g,
                            Zt = /#/g;

                        function en(e, t) {
                            (this.h = this.g = null), (this.i = e || null), (this.j = !!t);
                        }

                        function tn(e) {
                            e.g ||
                                ((e.g = new Map()),
                                    (e.h = 0),
                                    e.i &&
                                    Ft(e.i, function(t, n) {
                                        e.add(decodeURIComponent(t.replace(/\+/g, ' ')), n);
                                    }));
                        }

                        function nn(e, t) {
                            tn(e), (t = sn(e, t)), e.g.has(t) && ((e.i = null), (e.h -= e.g.get(t).length), e.g.delete(t));
                        }

                        function rn(e, t) {
                            return tn(e), (t = sn(e, t)), e.g.has(t);
                        }

                        function on(e, t, n) {
                            nn(e, t), 0 < n.length && ((e.i = null), e.g.set(sn(e, t), A(n)), (e.h += n.length));
                        }

                        function sn(e, t) {
                            return (t = String(t)), e.j && (t = t.toLowerCase()), t;
                        }

                        function an(e, t) {
                            t &&
                                !e.j &&
                                (tn(e),
                                    (e.i = null),
                                    e.g.forEach(function(e, t) {
                                        var n = t.toLowerCase();
                                        t != n && (nn(this, t), on(this, n, e));
                                    }, e)),
                                (e.j = t);
                        }
                        (r = en.prototype),
                        (r.add = function(e, t) {
                            tn(this), (this.i = null), (e = sn(this, e));
                            var n = this.g.get(e);
                            return n || this.g.set(e, (n = [])), n.push(t), (this.h += 1), this;
                        }),
                        (r.forEach = function(e, t) {
                            tn(this),
                                this.g.forEach(function(n, r) {
                                    n.forEach(function(n) {
                                        e.call(t, n, r, this);
                                    }, this);
                                }, this);
                        }),
                        (r.ta = function() {
                            tn(this);
                            const e = Array.from(this.g.values()),
                                t = Array.from(this.g.keys()),
                                n = [];
                            for (let r = 0; r < t.length; r++) {
                                const i = e[r];
                                for (let e = 0; e < i.length; e++) n.push(t[r]);
                            }
                            return n;
                        }),
                        (r.Z = function(e) {
                            tn(this);
                            let t = [];
                            if ('string' === typeof e) rn(this, e) && (t = t.concat(this.g.get(sn(this, e))));
                            else {
                                e = Array.from(this.g.values());
                                for (let n = 0; n < e.length; n++) t = t.concat(e[n]);
                            }
                            return t;
                        }),
                        (r.set = function(e, t) {
                            return (
                                tn(this), (this.i = null), (e = sn(this, e)), rn(this, e) && (this.h -= this.g.get(e).length), this.g.set(e, [t]), (this.h += 1), this
                            );
                        }),
                        (r.get = function(e, t) {
                            return e ? ((e = this.Z(e)), 0 < e.length ? String(e[0]) : t) : t;
                        }),
                        (r.toString = function() {
                            if (this.i) return this.i;
                            if (!this.g) return '';
                            const e = [],
                                t = Array.from(this.g.keys());
                            for (var n = 0; n < t.length; n++) {
                                var r = t[n];
                                const o = encodeURIComponent(String(r)),
                                    s = this.Z(r);
                                for (r = 0; r < s.length; r++) {
                                    var i = o;
                                    '' !== s[r] && (i += '=' + encodeURIComponent(String(s[r]))), e.push(i);
                                }
                            }
                            return (this.i = e.join('&'));
                        });
                        var un = class {
                            constructor(e, t) {
                                (this.g = e), (this.map = t);
                            }
                        };

                        function cn(e) {
                            (this.l = e || ln),
                            f.PerformanceNavigationTiming ?
                                ((e = f.performance.getEntriesByType('navigation')),
                                    (e = 0 < e.length && ('hq' == e[0].nextHopProtocol || 'h2' == e[0].nextHopProtocol))) :
                                (e = !!(f.g && f.g.Ka && f.g.Ka() && f.g.Ka().ec)),
                                (this.j = e ? this.l : 1),
                                (this.g = null),
                                1 < this.j && (this.g = new Set()),
                                (this.h = null),
                                (this.i = []);
                        }
                        var ln = 10;

                        function hn(e) {
                            return !!e.h || (!!e.g && e.g.size >= e.j);
                        }

                        function fn(e) {
                            return e.h ? 1 : e.g ? e.g.size : 0;
                        }

                        function dn(e, t) {
                            return e.h ? e.h == t : !!e.g && e.g.has(t);
                        }

                        function pn(e, t) {
                            e.g ? e.g.add(t) : (e.h = t);
                        }

                        function gn(e, t) {
                            e.h && e.h == t ? (e.h = null) : e.g && e.g.has(t) && e.g.delete(t);
                        }

                        function mn(e) {
                            if (null != e.h) return e.i.concat(e.h.F);
                            if (null != e.g && 0 !== e.g.size) {
                                let t = e.i;
                                for (const n of e.g.values()) t = t.concat(n.F);
                                return t;
                            }
                            return A(e.i);
                        }
                        cn.prototype.cancel = function() {
                            if (((this.i = mn(this)), this.h)) this.h.cancel(), (this.h = null);
                            else if (this.g && 0 !== this.g.size) {
                                for (const e of this.g.values()) e.cancel();
                                this.g.clear();
                            }
                        };
                        var vn = class {
                            stringify(e) {
                                return f.JSON.stringify(e, void 0);
                            }
                            parse(e) {
                                return f.JSON.parse(e, void 0);
                            }
                        };

                        function yn() {
                            this.g = new vn();
                        }

                        function wn(e, t, n) {
                            const r = n || '';
                            try {
                                jt(e, function(e, n) {
                                    let i = e;
                                    p(e) && (i = Te(e)), t.push(r + n + '=' + encodeURIComponent(i));
                                });
                            } catch (i) {
                                throw (t.push(r + 'type=' + encodeURIComponent('_badmap')), i);
                            }
                        }

                        function bn(e, t) {
                            const n = new He();
                            if (f.Image) {
                                const r = new Image();
                                (r.onload = _(_n, n, r, 'TestLoadImage: loaded', !0, t)),
                                (r.onerror = _(_n, n, r, 'TestLoadImage: error', !1, t)),
                                (r.onabort = _(_n, n, r, 'TestLoadImage: abort', !1, t)),
                                (r.ontimeout = _(_n, n, r, 'TestLoadImage: timeout', !1, t)),
                                f.setTimeout(function() {
                                        r.ontimeout && r.ontimeout();
                                    }, 1e4),
                                    (r.src = e);
                            } else t(!1);
                        }

                        function _n(e, t, n, r, i) {
                            try {
                                (t.onload = null), (t.onerror = null), (t.onabort = null), (t.ontimeout = null), i(r);
                            } catch (o) {}
                        }

                        function In(e) {
                            (this.l = e.fc || null), (this.j = e.ob || !1);
                        }

                        function En(e, t) {
                            Ie.call(this),
                                (this.F = e),
                                (this.u = t),
                                (this.m = void 0),
                                (this.readyState = Sn),
                                (this.status = 0),
                                (this.responseType = this.responseText = this.response = this.statusText = ''),
                                (this.onreadystatechange = null),
                                (this.v = new Headers()),
                                (this.h = null),
                                (this.C = 'GET'),
                                (this.B = ''),
                                (this.g = !1),
                                (this.A = this.j = this.l = null);
                        }
                        I(In, lt),
                            (In.prototype.g = function() {
                                return new En(this.l, this.j);
                            }),
                            (In.prototype.i = (function(e) {
                                return function() {
                                    return e;
                                };
                            })({})),
                            I(En, Ie);
                        var Sn = 0;

                        function Tn(e) {
                            e.j.read().then(e.Xa.bind(e)).catch(e.ka.bind(e));
                        }

                        function An(e) {
                            (e.readyState = 4), (e.l = null), (e.j = null), (e.A = null), xn(e);
                        }

                        function xn(e) {
                            e.onreadystatechange && e.onreadystatechange.call(e);
                        }
                        (r = En.prototype),
                        (r.open = function(e, t) {
                            if (this.readyState != Sn) throw (this.abort(), Error('Error reopening a connection'));
                            (this.C = e), (this.B = t), (this.readyState = 1), xn(this);
                        }),
                        (r.send = function(e) {
                            if (1 != this.readyState) throw (this.abort(), Error('need to call open() first. '));
                            this.g = !0;
                            const t = { headers: this.v, method: this.C, credentials: this.m, cache: void 0 };
                            e && (t.body = e), (this.F || f).fetch(new Request(this.B, t)).then(this.$a.bind(this), this.ka.bind(this));
                        }),
                        (r.abort = function() {
                            (this.response = this.responseText = ''),
                            (this.v = new Headers()),
                            (this.status = 0),
                            this.j && this.j.cancel('Request was aborted.').catch(() => {}),
                                1 <= this.readyState && this.g && 4 != this.readyState && ((this.g = !1), An(this)),
                                (this.readyState = Sn);
                        }),
                        (r.$a = function(e) {
                            if (
                                this.g &&
                                ((this.l = e),
                                    this.h || ((this.status = this.l.status), (this.statusText = this.l.statusText), (this.h = e.headers), (this.readyState = 2), xn(this)),
                                    this.g && ((this.readyState = 3), xn(this), this.g))
                            )
                                if ('arraybuffer' === this.responseType) e.arrayBuffer().then(this.Ya.bind(this), this.ka.bind(this));
                                else if ('undefined' !== typeof f.ReadableStream && 'body' in e) {
                                if (((this.j = e.body.getReader()), this.u)) {
                                    if (this.responseType) throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');
                                    this.response = [];
                                } else(this.response = this.responseText = ''), (this.A = new TextDecoder());
                                Tn(this);
                            } else e.text().then(this.Za.bind(this), this.ka.bind(this));
                        }),
                        (r.Xa = function(e) {
                            if (this.g) {
                                if (this.u && e.value) this.response.push(e.value);
                                else if (!this.u) {
                                    var t = e.value ? e.value : new Uint8Array(0);
                                    (t = this.A.decode(t, { stream: !e.done })) && (this.response = this.responseText += t);
                                }
                                e.done ? An(this) : xn(this), 3 == this.readyState && Tn(this);
                            }
                        }),
                        (r.Za = function(e) {
                            this.g && ((this.response = this.responseText = e), An(this));
                        }),
                        (r.Ya = function(e) {
                            this.g && ((this.response = e), An(this));
                        }),
                        (r.ka = function() {
                            this.g && An(this);
                        }),
                        (r.setRequestHeader = function(e, t) {
                            this.v.append(e, t);
                        }),
                        (r.getResponseHeader = function(e) {
                            return (this.h && this.h.get(e.toLowerCase())) || '';
                        }),
                        (r.getAllResponseHeaders = function() {
                            if (!this.h) return '';
                            const e = [],
                                t = this.h.entries();
                            for (var n = t.next(); !n.done;)(n = n.value), e.push(n[0] + ': ' + n[1]), (n = t.next());
                            return e.join('\r\n');
                        }),
                        Object.defineProperty(En.prototype, 'withCredentials', {
                            get: function() {
                                return 'include' === this.m;
                            },
                            set: function(e) {
                                this.m = e ? 'include' : 'same-origin';
                            }
                        });
                        var Cn = f.JSON.parse;

                        function kn(e) {
                            Ie.call(this),
                                (this.headers = new Map()),
                                (this.u = e || null),
                                (this.h = !1),
                                (this.C = this.g = null),
                                (this.I = ''),
                                (this.m = 0),
                                (this.j = ''),
                                (this.l = this.G = this.v = this.F = !1),
                                (this.B = 0),
                                (this.A = null),
                                (this.K = On),
                                (this.L = this.M = !1);
                        }
                        I(kn, Ie);
                        var On = '',
                            Nn = /^https?$/i,
                            Rn = ['POST', 'PUT'];

                        function Pn(e) {
                            return F && 'number' === typeof e.timeout && void 0 !== e.ontimeout;
                        }

                        function Dn(e, t) {
                            (e.h = !1), e.g && ((e.l = !0), e.g.abort(), (e.l = !1)), (e.j = t), (e.m = 5), Ln(e), Mn(e);
                        }

                        function Ln(e) {
                            e.F || ((e.F = !0), Ee(e, 'complete'), Ee(e, 'error'));
                        }

                        function jn(e) {
                            if (e.h && 'undefined' != typeof h && (!e.C[1] || 4 != Un(e) || 2 != e.da()))
                                if (e.v && 4 == Un(e)) Ve(e.La, 0, e);
                                else if ((Ee(e, 'readystatechange'), 4 == Un(e))) {
                                e.h = !1;
                                try {
                                    const a = e.da();
                                    e: switch (a) {
                                        case 200:
                                        case 201:
                                        case 202:
                                        case 204:
                                        case 206:
                                        case 304:
                                        case 1223:
                                            var t = !0;
                                            break e;
                                        default:
                                            t = !1;
                                    }
                                    var n;
                                    if (!(n = t)) {
                                        var r;
                                        if ((r = 0 === a)) {
                                            var i = String(e.I).match(Mt)[1] || null;
                                            !i && f.self && f.self.location && (i = f.self.location.protocol.slice(0, -1)), (r = !Nn.test(i ? i.toLowerCase() : ''));
                                        }
                                        n = r;
                                    }
                                    if (n) Ee(e, 'complete'), Ee(e, 'success');
                                    else {
                                        e.m = 6;
                                        try {
                                            var o = 2 < Un(e) ? e.g.statusText : '';
                                        } catch (s) {
                                            o = '';
                                        }
                                        (e.j = o + ' [' + e.da() + ']'), Ln(e);
                                    }
                                } finally {
                                    Mn(e);
                                }
                            }
                        }

                        function Mn(e, t) {
                            if (e.g) {
                                Fn(e);
                                const r = e.g,
                                    i = e.C[0] ? () => {} : null;
                                (e.g = null), (e.C = null), t || Ee(e, 'ready');
                                try {
                                    r.onreadystatechange = i;
                                } catch (n) {}
                            }
                        }

                        function Fn(e) {
                            e.g && e.L && (e.g.ontimeout = null), e.A && (f.clearTimeout(e.A), (e.A = null));
                        }

                        function Un(e) {
                            return e.g ? e.g.readyState : 0;
                        }

                        function Vn(e) {
                            try {
                                if (!e.g) return null;
                                if ('response' in e.g) return e.g.response;
                                switch (e.K) {
                                    case On:
                                    case 'text':
                                        return e.g.responseText;
                                    case 'arraybuffer':
                                        if ('mozResponseArrayBuffer' in e.g) return e.g.mozResponseArrayBuffer;
                                }
                                return null;
                            } catch (Qr) {
                                return null;
                            }
                        }

                        function Bn(e) {
                            const t = {};
                            e = ((e.g && 2 <= Un(e) && e.g.getAllResponseHeaders()) || '').split('\r\n');
                            for (let r = 0; r < e.length; r++) {
                                if (O(e[r])) continue;
                                var n = Ne(e[r]);
                                const i = n[0];
                                if (((n = n[1]), 'string' !== typeof n)) continue;
                                n = n.trim();
                                const o = t[i] || [];
                                (t[i] = o), o.push(n);
                            }
                            ne(t, function(e) {
                                return e.join(', ');
                            });
                        }

                        function $n(e) {
                            let t = '';
                            return (
                                te(e, function(e, n) {
                                    (t += n), (t += ':'), (t += e), (t += '\r\n');
                                }),
                                t
                            );
                        }

                        function qn(e, t, n) {
                            e: {
                                for (r in n) {
                                    var r = !1;
                                    break e;
                                }
                                r = !0;
                            }
                            r || ((n = $n(n)), 'string' === typeof e ? null != n && encodeURIComponent(String(n)) : zt(e, t, n));
                        }

                        function zn(e, t, n) {
                            return (n && n.internalChannelParams && n.internalChannelParams[e]) || t;
                        }

                        function Gn(e) {
                            (this.Ga = 0),
                            (this.j = []),
                            (this.l = new He()),
                            (this.pa = this.wa = this.I = this.Y = this.g = this.Da = this.F = this.na = this.o = this.U = this.s = null),
                            (this.fb = this.W = 0),
                            (this.cb = zn('failFast', !1, e)),
                            (this.G = this.v = this.u = this.m = this.h = null),
                            (this.aa = !0),
                            (this.Fa = this.V = -1),
                            (this.ba = this.A = this.C = 0),
                            (this.ab = zn('baseRetryDelayMs', 5e3, e)),
                            (this.hb = zn('retryDelaySeedMs', 1e4, e)),
                            (this.eb = zn('forwardChannelMaxRetries', 2, e)),
                            (this.xa = zn('forwardChannelRequestTimeoutMs', 2e4, e)),
                            (this.va = (e && e.xmlHttpFactory) || void 0),
                            (this.Ha = (e && e.dc) || !1),
                            (this.L = void 0),
                            (this.J = (e && e.supportsCrossDomainXhr) || !1),
                            (this.K = ''),
                            (this.i = new cn(e && e.concurrentRequestLimit)),
                            (this.Ja = new yn()),
                            (this.P = (e && e.fastHandshake) || !1),
                            (this.O = (e && e.encodeInitMessageHeaders) || !1),
                            this.P && this.O && (this.O = !1),
                                (this.bb = (e && e.bc) || !1),
                                e && e.Ea && this.l.Ea(),
                                e && e.forceLongPolling && (this.aa = !1),
                                (this.ca = (!this.P && this.aa && e && e.detectBufferingProxy) || !1),
                                (this.qa = void 0),
                                e && e.longPollingTimeout && 0 < e.longPollingTimeout && (this.qa = e.longPollingTimeout),
                                (this.oa = void 0),
                                (this.S = 0),
                                (this.M = !1),
                                (this.ma = this.B = null);
                        }

                        function Wn(e) {
                            if ((Kn(e), 3 == e.H)) {
                                var t = e.W++,
                                    n = Vt(e.I);
                                if (
                                    (zt(n, 'SID', e.K),
                                        zt(n, 'RID', t),
                                        zt(n, 'TYPE', 'terminate'),
                                        Jn(e, n),
                                        (t = new yt(e, e.l, t)),
                                        (t.L = 2),
                                        (t.v = Gt(Vt(n))),
                                        (n = !1),
                                        f.navigator && f.navigator.sendBeacon)
                                )
                                    try {
                                        n = f.navigator.sendBeacon(t.v.toString(), '');
                                    } catch (r) {}!n && f.Image && ((new Image().src = t.v), (n = !0)), n || ((t.g = lr(t.l, null)), t.g.ha(t.v)), (t.G = Date.now()), Ct(t);
                            }
                            ur(e);
                        }

                        function Hn(e) {
                            e.g && (nr(e), e.g.cancel(), (e.g = null));
                        }

                        function Kn(e) {
                            Hn(e), e.u && (f.clearTimeout(e.u), (e.u = null)), ir(e), e.i.cancel(), e.m && ('number' === typeof e.m && f.clearTimeout(e.m), (e.m = null));
                        }

                        function Qn(e) {
                            if (!hn(e.i) && !e.m) {
                                e.m = !0;
                                var t = e.Na;
                                Pe || je(), De || (Pe(), (De = !0)), Le.add(t, e), (e.C = 0);
                            }
                        }

                        function Yn(e, t) {
                            return (!(fn(e.i) >= e.i.j - (e.m ? 1 : 0)) &&
                                (e.m ?
                                    ((e.j = t.F.concat(e.j)), !0) :
                                    !(1 == e.H || 2 == e.H || e.C >= (e.cb ? 0 : e.eb)) && ((e.m = at(b(e.Na, e, t), sr(e, e.C))), e.C++, !0))
                            );
                        }

                        function Xn(e, t) {
                            var n;
                            n = t ? t.m : e.W++;
                            const r = Vt(e.I);
                            zt(r, 'SID', e.K),
                                zt(r, 'RID', n),
                                zt(r, 'AID', e.V),
                                Jn(e, r),
                                e.o && e.s && qn(r, e.o, e.s),
                                (n = new yt(e, e.l, n, e.C + 1)),
                                null === e.o && (n.I = e.s),
                                t && (e.j = t.F.concat(e.j)),
                                (t = Zn(e, n, 1e3)),
                                n.setTimeout(Math.round(0.5 * e.xa) + Math.round(0.5 * e.xa * Math.random())),
                                pn(e.i, n),
                                Et(n, r, t);
                        }

                        function Jn(e, t) {
                            e.na &&
                                te(e.na, function(e, n) {
                                    zt(t, n, e);
                                }),
                                e.h &&
                                jt({}, function(e, n) {
                                    zt(t, n, e);
                                });
                        }

                        function Zn(e, t, n) {
                            n = Math.min(e.j.length, n);
                            var r = e.h ? b(e.h.Va, e.h, e) : null;
                            e: {
                                var i = e.j;
                                let t = -1;
                                for (;;) {
                                    const e = ['count=' + n]; -
                                    1 == t ? (0 < n ? ((t = i[0].g), e.push('ofs=' + t)) : (t = 0)) : e.push('ofs=' + t);
                                    let o = !0;
                                    for (let s = 0; s < n; s++) {
                                        let n = i[s].g;
                                        const a = i[s].map;
                                        if (((n -= t), 0 > n))(t = Math.max(0, i[s].g - 100)), (o = !1);
                                        else
                                            try {
                                                wn(a, e, 'req' + n + '_');
                                            } catch (ui) {
                                                r && r(a);
                                            }
                                    }
                                    if (o) {
                                        r = e.join('&');
                                        break e;
                                    }
                                }
                            }
                            return (e = e.j.splice(0, n)), (t.F = e), r;
                        }

                        function er(e) {
                            if (!e.g && !e.u) {
                                e.ba = 1;
                                var t = e.Ma;
                                Pe || je(), De || (Pe(), (De = !0)), Le.add(t, e), (e.A = 0);
                            }
                        }

                        function tr(e) {
                            return !(e.g || e.u || 3 <= e.A) && (e.ba++, (e.u = at(b(e.Ma, e), sr(e, e.A))), e.A++, !0);
                        }

                        function nr(e) {
                            null != e.B && (f.clearTimeout(e.B), (e.B = null));
                        }

                        function rr(e) {
                            (e.g = new yt(e, e.l, 'rpc', e.ba)), null === e.o && (e.g.I = e.s), (e.g.O = 0);
                            var t = Vt(e.wa);
                            zt(t, 'RID', 'rpc'),
                                zt(t, 'SID', e.K),
                                zt(t, 'AID', e.V),
                                zt(t, 'CI', e.G ? '0' : '1'), !e.G && e.qa && zt(t, 'TO', e.qa),
                                zt(t, 'TYPE', 'xmlhttp'),
                                Jn(e, t),
                                e.o && e.s && qn(t, e.o, e.s),
                                e.L && e.g.setTimeout(e.L);
                            var n = e.g;
                            (e = e.pa), (n.L = 1), (n.v = Gt(Vt(t))), (n.s = null), (n.S = !0), St(n, e);
                        }

                        function ir(e) {
                            null != e.v && (f.clearTimeout(e.v), (e.v = null));
                        }

                        function or(e, t) {
                            var n = null;
                            if (e.g == t) {
                                ir(e), nr(e), (e.g = null);
                                var r = 2;
                            } else {
                                if (!dn(e.i, t)) return;
                                (n = t.F), gn(e.i, t), (r = 1);
                            }
                            if (0 != e.H)
                                if (t.i)
                                    if (1 == r) {
                                        (n = t.s ? t.s.length : 0), (t = Date.now() - t.G);
                                        var i = e.C;
                                        (r = tt()), Ee(r, new st(r, n)), Qn(e);
                                    } else er(e);
                            else if (((i = t.o), 3 == i || (0 == i && 0 < t.ca) || !((1 == r && Yn(e, t)) || (2 == r && tr(e)))))
                                switch ((n && 0 < n.length && ((t = e.i), (t.i = t.i.concat(n))), i)) {
                                    case 1:
                                        ar(e, 5);
                                        break;
                                    case 4:
                                        ar(e, 10);
                                        break;
                                    case 3:
                                        ar(e, 6);
                                        break;
                                    default:
                                        ar(e, 2);
                                }
                        }

                        function sr(e, t) {
                            let n = e.ab + Math.floor(Math.random() * e.hb);
                            return e.isActive() || (n *= 2), n * t;
                        }

                        function ar(e, t) {
                            if ((e.l.info('Error code ' + t), 2 == t)) {
                                var n = null;
                                e.h && (n = null);
                                var r = b(e.pb, e);
                                n || ((n = new Ut('//www.google.com/images/cleardot.gif')), (f.location && 'http' == f.location.protocol) || Bt(n, 'https'), Gt(n)),
                                    bn(n.toString(), r);
                            } else ot(2);
                            (e.H = 0), e.h && e.h.za(t), ur(e), Kn(e);
                        }

                        function ur(e) {
                            if (((e.H = 0), (e.ma = []), e.h)) {
                                const t = mn(e.i);
                                (0 == t.length && 0 == e.j.length) || (x(e.ma, t), x(e.ma, e.j), (e.i.i.length = 0), A(e.j), (e.j.length = 0)), e.h.ya();
                            }
                        }

                        function cr(e, t, n) {
                            var r = n instanceof Ut ? Vt(n) : new Ut(n);
                            if ('' != r.g) t && (r.g = t + '.' + r.g), $t(r, r.m);
                            else {
                                var i = f.location;
                                (r = i.protocol), (t = t ? t + '.' + i.hostname : i.hostname), (i = +i.port);
                                var o = new Ut(null);
                                r && Bt(o, r), t && (o.g = t), i && $t(o, i), n && (o.l = n), (r = o);
                            }
                            return (n = e.F), (t = e.Da), n && t && zt(r, n, t), zt(r, 'VER', e.ra), Jn(e, r), r;
                        }

                        function lr(e, t, n) {
                            if (t && !e.J) throw Error("Can't create secondary domain capable XhrIo object.");
                            return (t = n && e.Ha && !e.va ? new kn(new In({ ob: !0 })) : new kn(e.va)), t.Oa(e.J), t;
                        }

                        function hr() {}

                        function fr() {
                            if (F && !(10 <= Number(K))) throw Error('Environmental error: no available transport.');
                        }

                        function dr(e, t) {
                            Ie.call(this),
                                (this.g = new Gn(t)),
                                (this.l = e),
                                (this.h = (t && t.messageUrlParams) || null),
                                (e = (t && t.messageHeaders) || null),
                                t && t.clientProtocolHeaderRequired && (e ? (e['X-Client-Protocol'] = 'webchannel') : (e = { 'X-Client-Protocol': 'webchannel' })),
                                (this.g.s = e),
                                (e = (t && t.initMessageHeaders) || null),
                                t &&
                                t.messageContentType &&
                                (e ? (e['X-WebChannel-Content-Type'] = t.messageContentType) : (e = { 'X-WebChannel-Content-Type': t.messageContentType })),
                                t && t.Ca && (e ? (e['X-WebChannel-Client-Profile'] = t.Ca) : (e = { 'X-WebChannel-Client-Profile': t.Ca })),
                                (this.g.U = e),
                                (e = t && t.cc) && !O(e) && (this.g.o = e),
                                (this.A = (t && t.supportsCrossDomainXhr) || !1),
                                (this.v = (t && t.sendRawJson) || !1),
                                (t = t && t.httpSessionIdParam) && !O(t) && ((this.g.F = t), (e = this.h), null !== e && t in e && ((e = this.h), t in e && delete e[t])),
                                (this.j = new mr(this));
                        }

                        function pr(e) {
                            gt.call(this), e.__headers__ && ((this.headers = e.__headers__), (this.statusCode = e.__status__), delete e.__headers__, delete e.__status__);
                            var t = e.__sm__;
                            if (t) {
                                e: {
                                    for (const n in t) {
                                        e = n;
                                        break e;
                                    }
                                    e = void 0;
                                }
                                (this.i = e) && ((e = this.i), (t = null !== t && e in t ? t[e] : void 0)),
                                (this.data = t);
                            }
                            else this.data = e;
                        }

                        function gr() {
                            mt.call(this), (this.status = 1);
                        }

                        function mr(e) {
                            this.g = e;
                        }

                        function vr() {
                            this.blockSize = -1;
                        }

                        function yr() {
                            (this.blockSize = -1), (this.blockSize = 64), (this.g = Array(4)), (this.m = Array(this.blockSize)), (this.i = this.h = 0), this.reset();
                        }

                        function wr(e, t, n) {
                            n || (n = 0);
                            var r = Array(16);
                            if ('string' === typeof t)
                                for (var i = 0; 16 > i; ++i) r[i] = t.charCodeAt(n++) | (t.charCodeAt(n++) << 8) | (t.charCodeAt(n++) << 16) | (t.charCodeAt(n++) << 24);
                            else
                                for (i = 0; 16 > i; ++i) r[i] = t[n++] | (t[n++] << 8) | (t[n++] << 16) | (t[n++] << 24);
                            (t = e.g[0]), (n = e.g[1]), (i = e.g[2]);
                            var o = e.g[3],
                                s = (t + (o ^ (n & (i ^ o))) + r[0] + 3614090360) & 4294967295;
                            (t = n + (((s << 7) & 4294967295) | (s >>> 25))),
                            (s = (o + (i ^ (t & (n ^ i))) + r[1] + 3905402710) & 4294967295),
                            (o = t + (((s << 12) & 4294967295) | (s >>> 20))),
                            (s = (i + (n ^ (o & (t ^ n))) + r[2] + 606105819) & 4294967295),
                            (i = o + (((s << 17) & 4294967295) | (s >>> 15))),
                            (s = (n + (t ^ (i & (o ^ t))) + r[3] + 3250441966) & 4294967295),
                            (n = i + (((s << 22) & 4294967295) | (s >>> 10))),
                            (s = (t + (o ^ (n & (i ^ o))) + r[4] + 4118548399) & 4294967295),
                            (t = n + (((s << 7) & 4294967295) | (s >>> 25))),
                            (s = (o + (i ^ (t & (n ^ i))) + r[5] + 1200080426) & 4294967295),
                            (o = t + (((s << 12) & 4294967295) | (s >>> 20))),
                            (s = (i + (n ^ (o & (t ^ n))) + r[6] + 2821735955) & 4294967295),
                            (i = o + (((s << 17) & 4294967295) | (s >>> 15))),
                            (s = (n + (t ^ (i & (o ^ t))) + r[7] + 4249261313) & 4294967295),
                            (n = i + (((s << 22) & 4294967295) | (s >>> 10))),
                            (s = (t + (o ^ (n & (i ^ o))) + r[8] + 1770035416) & 4294967295),
                            (t = n + (((s << 7) & 4294967295) | (s >>> 25))),
                            (s = (o + (i ^ (t & (n ^ i))) + r[9] + 2336552879) & 4294967295),
                            (o = t + (((s << 12) & 4294967295) | (s >>> 20))),
                            (s = (i + (n ^ (o & (t ^ n))) + r[10] + 4294925233) & 4294967295),
                            (i = o + (((s << 17) & 4294967295) | (s >>> 15))),
                            (s = (n + (t ^ (i & (o ^ t))) + r[11] + 2304563134) & 4294967295),
                            (n = i + (((s << 22) & 4294967295) | (s >>> 10))),
                            (s = (t + (o ^ (n & (i ^ o))) + r[12] + 1804603682) & 4294967295),
                            (t = n + (((s << 7) & 4294967295) | (s >>> 25))),
                            (s = (o + (i ^ (t & (n ^ i))) + r[13] + 4254626195) & 4294967295),
                            (o = t + (((s << 12) & 4294967295) | (s >>> 20))),
                            (s = (i + (n ^ (o & (t ^ n))) + r[14] + 2792965006) & 4294967295),
                            (i = o + (((s << 17) & 4294967295) | (s >>> 15))),
                            (s = (n + (t ^ (i & (o ^ t))) + r[15] + 1236535329) & 4294967295),
                            (n = i + (((s << 22) & 4294967295) | (s >>> 10))),
                            (s = (t + (i ^ (o & (n ^ i))) + r[1] + 4129170786) & 4294967295),
                            (t = n + (((s << 5) & 4294967295) | (s >>> 27))),
                            (s = (o + (n ^ (i & (t ^ n))) + r[6] + 3225465664) & 4294967295),
                            (o = t + (((s << 9) & 4294967295) | (s >>> 23))),
                            (s = (i + (t ^ (n & (o ^ t))) + r[11] + 643717713) & 4294967295),
                            (i = o + (((s << 14) & 4294967295) | (s >>> 18))),
                            (s = (n + (o ^ (t & (i ^ o))) + r[0] + 3921069994) & 4294967295),
                            (n = i + (((s << 20) & 4294967295) | (s >>> 12))),
                            (s = (t + (i ^ (o & (n ^ i))) + r[5] + 3593408605) & 4294967295),
                            (t = n + (((s << 5) & 4294967295) | (s >>> 27))),
                            (s = (o + (n ^ (i & (t ^ n))) + r[10] + 38016083) & 4294967295),
                            (o = t + (((s << 9) & 4294967295) | (s >>> 23))),
                            (s = (i + (t ^ (n & (o ^ t))) + r[15] + 3634488961) & 4294967295),
                            (i = o + (((s << 14) & 4294967295) | (s >>> 18))),
                            (s = (n + (o ^ (t & (i ^ o))) + r[4] + 3889429448) & 4294967295),
                            (n = i + (((s << 20) & 4294967295) | (s >>> 12))),
                            (s = (t + (i ^ (o & (n ^ i))) + r[9] + 568446438) & 4294967295),
                            (t = n + (((s << 5) & 4294967295) | (s >>> 27))),
                            (s = (o + (n ^ (i & (t ^ n))) + r[14] + 3275163606) & 4294967295),
                            (o = t + (((s << 9) & 4294967295) | (s >>> 23))),
                            (s = (i + (t ^ (n & (o ^ t))) + r[3] + 4107603335) & 4294967295),
                            (i = o + (((s << 14) & 4294967295) | (s >>> 18))),
                            (s = (n + (o ^ (t & (i ^ o))) + r[8] + 1163531501) & 4294967295),
                            (n = i + (((s << 20) & 4294967295) | (s >>> 12))),
                            (s = (t + (i ^ (o & (n ^ i))) + r[13] + 2850285829) & 4294967295),
                            (t = n + (((s << 5) & 4294967295) | (s >>> 27))),
                            (s = (o + (n ^ (i & (t ^ n))) + r[2] + 4243563512) & 4294967295),
                            (o = t + (((s << 9) & 4294967295) | (s >>> 23))),
                            (s = (i + (t ^ (n & (o ^ t))) + r[7] + 1735328473) & 4294967295),
                            (i = o + (((s << 14) & 4294967295) | (s >>> 18))),
                            (s = (n + (o ^ (t & (i ^ o))) + r[12] + 2368359562) & 4294967295),
                            (n = i + (((s << 20) & 4294967295) | (s >>> 12))),
                            (s = (t + (n ^ i ^ o) + r[5] + 4294588738) & 4294967295),
                            (t = n + (((s << 4) & 4294967295) | (s >>> 28))),
                            (s = (o + (t ^ n ^ i) + r[8] + 2272392833) & 4294967295),
                            (o = t + (((s << 11) & 4294967295) | (s >>> 21))),
                            (s = (i + (o ^ t ^ n) + r[11] + 1839030562) & 4294967295),
                            (i = o + (((s << 16) & 4294967295) | (s >>> 16))),
                            (s = (n + (i ^ o ^ t) + r[14] + 4259657740) & 4294967295),
                            (n = i + (((s << 23) & 4294967295) | (s >>> 9))),
                            (s = (t + (n ^ i ^ o) + r[1] + 2763975236) & 4294967295),
                            (t = n + (((s << 4) & 4294967295) | (s >>> 28))),
                            (s = (o + (t ^ n ^ i) + r[4] + 1272893353) & 4294967295),
                            (o = t + (((s << 11) & 4294967295) | (s >>> 21))),
                            (s = (i + (o ^ t ^ n) + r[7] + 4139469664) & 4294967295),
                            (i = o + (((s << 16) & 4294967295) | (s >>> 16))),
                            (s = (n + (i ^ o ^ t) + r[10] + 3200236656) & 4294967295),
                            (n = i + (((s << 23) & 4294967295) | (s >>> 9))),
                            (s = (t + (n ^ i ^ o) + r[13] + 681279174) & 4294967295),
                            (t = n + (((s << 4) & 4294967295) | (s >>> 28))),
                            (s = (o + (t ^ n ^ i) + r[0] + 3936430074) & 4294967295),
                            (o = t + (((s << 11) & 4294967295) | (s >>> 21))),
                            (s = (i + (o ^ t ^ n) + r[3] + 3572445317) & 4294967295),
                            (i = o + (((s << 16) & 4294967295) | (s >>> 16))),
                            (s = (n + (i ^ o ^ t) + r[6] + 76029189) & 4294967295),
                            (n = i + (((s << 23) & 4294967295) | (s >>> 9))),
                            (s = (t + (n ^ i ^ o) + r[9] + 3654602809) & 4294967295),
                            (t = n + (((s << 4) & 4294967295) | (s >>> 28))),
                            (s = (o + (t ^ n ^ i) + r[12] + 3873151461) & 4294967295),
                            (o = t + (((s << 11) & 4294967295) | (s >>> 21))),
                            (s = (i + (o ^ t ^ n) + r[15] + 530742520) & 4294967295),
                            (i = o + (((s << 16) & 4294967295) | (s >>> 16))),
                            (s = (n + (i ^ o ^ t) + r[2] + 3299628645) & 4294967295),
                            (n = i + (((s << 23) & 4294967295) | (s >>> 9))),
                            (s = (t + (i ^ (n | ~o)) + r[0] + 4096336452) & 4294967295),
                            (t = n + (((s << 6) & 4294967295) | (s >>> 26))),
                            (s = (o + (n ^ (t | ~i)) + r[7] + 1126891415) & 4294967295),
                            (o = t + (((s << 10) & 4294967295) | (s >>> 22))),
                            (s = (i + (t ^ (o | ~n)) + r[14] + 2878612391) & 4294967295),
                            (i = o + (((s << 15) & 4294967295) | (s >>> 17))),
                            (s = (n + (o ^ (i | ~t)) + r[5] + 4237533241) & 4294967295),
                            (n = i + (((s << 21) & 4294967295) | (s >>> 11))),
                            (s = (t + (i ^ (n | ~o)) + r[12] + 1700485571) & 4294967295),
                            (t = n + (((s << 6) & 4294967295) | (s >>> 26))),
                            (s = (o + (n ^ (t | ~i)) + r[3] + 2399980690) & 4294967295),
                            (o = t + (((s << 10) & 4294967295) | (s >>> 22))),
                            (s = (i + (t ^ (o | ~n)) + r[10] + 4293915773) & 4294967295),
                            (i = o + (((s << 15) & 4294967295) | (s >>> 17))),
                            (s = (n + (o ^ (i | ~t)) + r[1] + 2240044497) & 4294967295),
                            (n = i + (((s << 21) & 4294967295) | (s >>> 11))),
                            (s = (t + (i ^ (n | ~o)) + r[8] + 1873313359) & 4294967295),
                            (t = n + (((s << 6) & 4294967295) | (s >>> 26))),
                            (s = (o + (n ^ (t | ~i)) + r[15] + 4264355552) & 4294967295),
                            (o = t + (((s << 10) & 4294967295) | (s >>> 22))),
                            (s = (i + (t ^ (o | ~n)) + r[6] + 2734768916) & 4294967295),
                            (i = o + (((s << 15) & 4294967295) | (s >>> 17))),
                            (s = (n + (o ^ (i | ~t)) + r[13] + 1309151649) & 4294967295),
                            (n = i + (((s << 21) & 4294967295) | (s >>> 11))),
                            (s = (t + (i ^ (n | ~o)) + r[4] + 4149444226) & 4294967295),
                            (t = n + (((s << 6) & 4294967295) | (s >>> 26))),
                            (s = (o + (n ^ (t | ~i)) + r[11] + 3174756917) & 4294967295),
                            (o = t + (((s << 10) & 4294967295) | (s >>> 22))),
                            (s = (i + (t ^ (o | ~n)) + r[2] + 718787259) & 4294967295),
                            (i = o + (((s << 15) & 4294967295) | (s >>> 17))),
                            (s = (n + (o ^ (i | ~t)) + r[9] + 3951481745) & 4294967295),
                            (e.g[0] = (e.g[0] + t) & 4294967295),
                            (e.g[1] = (e.g[1] + (i + (((s << 21) & 4294967295) | (s >>> 11)))) & 4294967295),
                            (e.g[2] = (e.g[2] + i) & 4294967295),
                            (e.g[3] = (e.g[3] + o) & 4294967295);
                        }

                        function br(e, t) {
                            this.h = t;
                            for (var n = [], r = !0, i = e.length - 1; 0 <= i; i--) {
                                var o = 0 | e[i];
                                (r && o == t) || ((n[i] = o), (r = !1));
                            }
                            this.g = n;
                        }
                        (r = kn.prototype),
                        (r.Oa = function(e) {
                            this.M = e;
                        }),
                        (r.ha = function(e, t, n, r) {
                            if (this.g) throw Error('[goog.net.XhrIo] Object is active with another request=' + this.I + '; newUri=' + e);
                            (t = t ? t.toUpperCase() : 'GET'),
                            (this.I = e),
                            (this.j = ''),
                            (this.m = 0),
                            (this.F = !1),
                            (this.h = !0),
                            (this.g = this.u ? this.u.g() : dt.g()),
                            (this.C = this.u ? ht(this.u) : ht(dt)),
                            (this.g.onreadystatechange = b(this.La, this));
                            try {
                                (this.G = !0), this.g.open(t, String(e), !0), (this.G = !1);
                            } catch (o) {
                                return void Dn(this, o);
                            }
                            if (((e = n || ''), (n = new Map(this.headers)), r))
                                if (Object.getPrototypeOf(r) === Object.prototype)
                                    for (var i in r) n.set(i, r[i]);
                                else {
                                    if ('function' !== typeof r.keys || 'function' !== typeof r.get) throw Error('Unknown input type for opt_headers: ' + String(r));
                                    for (const e of r.keys()) n.set(e, r.get(e));
                                }
                                (r = Array.from(n.keys()).find(e => 'content-type' == e.toLowerCase())),
                                (i = f.FormData && e instanceof f.FormData), !(0 <= T(Rn, t)) || r || i || n.set('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');
                            for (const [s, a] of n) this.g.setRequestHeader(s, a);
                            this.K && (this.g.responseType = this.K),
                                'withCredentials' in this.g && this.g.withCredentials !== this.M && (this.g.withCredentials = this.M);
                            try {
                                Fn(this),
                                    0 < this.B &&
                                    ((this.L = Pn(this.g)) ? ((this.g.timeout = this.B), (this.g.ontimeout = b(this.ua, this))) : (this.A = Ve(this.ua, this.B, this))),
                                    (this.v = !0),
                                    this.g.send(e),
                                    (this.v = !1);
                            } catch (o) {
                                Dn(this, o);
                            }
                        }),
                        (r.ua = function() {
                            'undefined' != typeof h &&
                                this.g &&
                                ((this.j = 'Timed out after ' + this.B + 'ms, aborting'), (this.m = 8), Ee(this, 'timeout'), this.abort(8));
                        }),
                        (r.abort = function(e) {
                            this.g &&
                                this.h &&
                                ((this.h = !1), (this.l = !0), this.g.abort(), (this.l = !1), (this.m = e || 7), Ee(this, 'complete'), Ee(this, 'abort'), Mn(this));
                        }),
                        (r.N = function() {
                            this.g && (this.h && ((this.h = !1), (this.l = !0), this.g.abort(), (this.l = !1)), Mn(this, !0)), kn.$.N.call(this);
                        }),
                        (r.La = function() {
                            this.s || (this.G || this.v || this.l ? jn(this) : this.kb());
                        }),
                        (r.kb = function() {
                            jn(this);
                        }),
                        (r.isActive = function() {
                            return !!this.g;
                        }),
                        (r.da = function() {
                            try {
                                return 2 < Un(this) ? this.g.status : -1;
                            } catch (e) {
                                return -1;
                            }
                        }),
                        (r.ja = function() {
                            try {
                                return this.g ? this.g.responseText : '';
                            } catch (e) {
                                return '';
                            }
                        }),
                        (r.Wa = function(e) {
                            if (this.g) {
                                var t = this.g.responseText;
                                return e && 0 == t.indexOf(e) && (t = t.substring(e.length)), Cn(t);
                            }
                        }),
                        (r.Ia = function() {
                            return this.m;
                        }),
                        (r.Sa = function() {
                            return 'string' === typeof this.j ? this.j : String(this.j);
                        }),
                        (r = Gn.prototype),
                        (r.ra = 8),
                        (r.H = 1),
                        (r.Na = function(e) {
                            if (this.m)
                                if (((this.m = null), 1 == this.H)) {
                                    if (!e) {
                                        (this.W = Math.floor(1e5 * Math.random())), (e = this.W++);
                                        const i = new yt(this, this.l, e);
                                        let o = this.s;
                                        if ((this.U && (o ? ((o = re(o)), oe(o, this.U)) : (o = this.U)), null !== this.o || this.O || ((i.I = o), (o = null)), this.P))
                                            e: {
                                                for (var t = 0, n = 0; n < this.j.length; n++) {
                                                    var r = this.j[n];
                                                    if (((r = '__data__' in r.map && ((r = r.map.__data__), 'string' === typeof r) ? r.length : void 0), void 0 === r)) break;
                                                    if (((t += r), 4096 < t)) {
                                                        t = n;
                                                        break e;
                                                    }
                                                    if (4096 === t || n === this.j.length - 1) {
                                                        t = n + 1;
                                                        break e;
                                                    }
                                                }
                                                t = 1e3;
                                            }
                                        else t = 1e3;
                                        (t = Zn(this, i, t)),
                                        (n = Vt(this.I)),
                                        zt(n, 'RID', e),
                                            zt(n, 'CVER', 22),
                                            this.F && zt(n, 'X-HTTP-Session-Id', this.F),
                                            Jn(this, n),
                                            o && (this.O ? (t = 'headers=' + encodeURIComponent(String($n(o))) + '&' + t) : this.o && qn(n, this.o, o)),
                                            pn(this.i, i),
                                            this.bb && zt(n, 'TYPE', 'init'),
                                            this.P ? (zt(n, '$req', t), zt(n, 'SID', 'null'), (i.aa = !0), Et(i, n, null)) : Et(i, n, t),
                                            (this.H = 2);
                                    }
                                } else 3 == this.H && (e ? Xn(this, e) : 0 == this.j.length || hn(this.i) || Xn(this));
                        }),
                        (r.Ma = function() {
                            if (((this.u = null), rr(this), this.ca && !(this.M || null == this.g || 0 >= this.S))) {
                                var e = 2 * this.S;
                                this.l.info('BP detection timer enabled: ' + e), (this.B = at(b(this.jb, this), e));
                            }
                        }),
                        (r.jb = function() {
                            this.B &&
                                ((this.B = null),
                                    this.l.info('BP detection timeout reached.'),
                                    this.l.info('Buffering proxy detected and switch to long-polling!'),
                                    (this.G = !1),
                                    (this.M = !0),
                                    ot(10),
                                    Hn(this),
                                    rr(this));
                        }),
                        (r.ib = function() {
                            null != this.v && ((this.v = null), Hn(this), tr(this), ot(19));
                        }),
                        (r.pb = function(e) {
                            e ? (this.l.info('Successfully pinged google.com'), ot(2)) : (this.l.info('Failed to ping google.com'), ot(1));
                        }),
                        (r.isActive = function() {
