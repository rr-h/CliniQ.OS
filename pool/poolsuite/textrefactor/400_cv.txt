remove firebase code from this and fix the code. NO NEED TO EXPLAIN OR TO SHOW A BEFORE. JUST DIRECTLY CARRY OUT THE TASK TO REMOVE FIREBASE ELEMENTS FROM THE GIVEN SNIPPET WITHOUT BREAKING THE PROJECT-
      function T(e) {
        const t = 'INTERNAL ASSERTION FAILED: ' + e;
        throw (y(t), new Error(t));
      }
      function A(e, t) {
        e || T(t);
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function x() {
        var e;
        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.href)) || '';
      }
      function C() {
        return 'http:' === k() || 'https:' === k();
      }
      function k() {
        var e;
        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.protocol)) || null;
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function O() {
        return (
          !(
            'undefined' !== typeof navigator &&
            navigator &&
            'onLine' in navigator &&
            'boolean' === typeof navigator.onLine &&
            (C() || (0, i.ru)() || 'connection' in navigator)
          ) || navigator.onLine
        );
      }
      function N() {
        if ('undefined' === typeof navigator) return null;
        const e = navigator;
        return (e.languages && e.languages[0]) || e.language || null;
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ class R {
        constructor(e, t) {
          (this.shortDelay = e),
            (this.longDelay = t),
            A(t > e, 'Short delay should be less than long delay!'),
            (this.isMobile = (0, i.uI)() || (0, i.b$)());
        }
        get() {
          return O() ? (this.isMobile ? this.longDelay : this.shortDelay) : Math.min(5e3, this.shortDelay);
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function P(e, t) {
        A(e.emulator, 'Emulator should always be set here');
        const { url: n } = e.emulator;
        return t ? `${n}${t.startsWith('/') ? t.slice(1) : t}` : n;
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ class D {
        static initialize(e, t, n) {
          (this.fetchImpl = e), t && (this.headersImpl = t), n && (this.responseImpl = n);
        }
        static fetch() {
          return this.fetchImpl
            ? this.fetchImpl
            : 'undefined' !== typeof self && 'fetch' in self
              ? self.fetch
              : void T('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
        }
        static headers() {
          return this.headersImpl
            ? this.headersImpl
            : 'undefined' !== typeof self && 'Headers' in self
              ? self.Headers
              : void T('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
        }
        static response() {
          return this.responseImpl
            ? this.responseImpl
            : 'undefined' !== typeof self && 'Response' in self
              ? self.Response
              : void T('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ const L = {
          ['CREDENTIAL_MISMATCH']: 'custom-token-mismatch',
          ['MISSING_CUSTOM_TOKEN']: 'internal-error',
          ['INVALID_IDENTIFIER']: 'invalid-email',
          ['MISSING_CONTINUE_URI']: 'internal-error',
          ['INVALID_PASSWORD']: 'wrong-password',
          ['MISSING_PASSWORD']: 'missing-password',
          ['EMAIL_EXISTS']: 'email-already-in-use',
          ['PASSWORD_LOGIN_DISABLED']: 'operation-not-allowed',
          ['INVALID_IDP_RESPONSE']: 'invalid-credential',
          ['INVALID_PENDING_TOKEN']: 'invalid-credential',
          ['FEDERATED_USER_ID_ALREADY_LINKED']: 'credential-already-in-use',
          ['MISSING_REQ_TYPE']: 'internal-error',
          ['EMAIL_NOT_FOUND']: 'user-not-found',
          ['RESET_PASSWORD_EXCEED_LIMIT']: 'too-many-requests',
          ['EXPIRED_OOB_CODE']: 'expired-action-code',
          ['INVALID_OOB_CODE']: 'invalid-action-code',
          ['MISSING_OOB_CODE']: 'internal-error',
          ['CREDENTIAL_TOO_OLD_LOGIN_AGAIN']: 'requires-recent-login',
          ['INVALID_ID_TOKEN']: 'invalid-user-token',
          ['TOKEN_EXPIRED']: 'user-token-expired',
          ['USER_NOT_FOUND']: 'user-token-expired',
          ['TOO_MANY_ATTEMPTS_TRY_LATER']: 'too-many-requests',
          ['INVALID_CODE']: 'invalid-verification-code',
          ['INVALID_SESSION_INFO']: 'invalid-verification-id',
          ['INVALID_TEMPORARY_PROOF']: 'invalid-credential',
          ['MISSING_SESSION_INFO']: 'missing-verification-id',
          ['SESSION_EXPIRED']: 'code-expired',
          ['MISSING_ANDROID_PACKAGE_NAME']: 'missing-android-pkg-name',
          ['UNAUTHORIZED_DOMAIN']: 'unauthorized-continue-uri',
          ['INVALID_OAUTH_CLIENT_ID']: 'invalid-oauth-client-id',
          ['ADMIN_ONLY_OPERATION']: 'admin-restricted-operation',
          ['INVALID_MFA_PENDING_CREDENTIAL']: 'invalid-multi-factor-session',
          ['MFA_ENROLLMENT_NOT_FOUND']: 'multi-factor-info-not-found',
          ['MISSING_MFA_ENROLLMENT_ID']: 'missing-multi-factor-info',
          ['MISSING_MFA_PENDING_CREDENTIAL']: 'missing-multi-factor-session',
          ['SECOND_FACTOR_EXISTS']: 'second-factor-already-in-use',
          ['SECOND_FACTOR_LIMIT_EXCEEDED']: 'maximum-second-factor-count-exceeded',
          ['BLOCKING_FUNCTION_ERROR_RESPONSE']: 'internal-error',
          ['RECAPTCHA_NOT_ENABLED']: 'recaptcha-not-enabled',
          ['MISSING_RECAPTCHA_TOKEN']: 'missing-recaptcha-token',
          ['INVALID_RECAPTCHA_TOKEN']: 'invalid-recaptcha-token',
          ['INVALID_RECAPTCHA_ACTION']: 'invalid-recaptcha-action',
          ['MISSING_CLIENT_TYPE']: 'missing-client-type',
          ['MISSING_RECAPTCHA_VERSION']: 'missing-recaptcha-version',
          ['INVALID_RECAPTCHA_VERSION']: 'invalid-recaptcha-version',
          ['INVALID_REQ_TYPE']: 'invalid-req-type'
        },
        j = new R(3e4, 6e4);
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function M(e, t) {
        return e.tenantId && !t.tenantId ? Object.assign(Object.assign({}, t), { tenantId: e.tenantId }) : t;
      }
      async function F(e, t, n, r, o = {}) {
        return U(e, o, async () => {
          let o = {},
            s = {};
          r && ('GET' === t ? (s = r) : (o = { body: JSON.stringify(r) }));
          const a = (0, i.xO)(Object.assign({ key: e.config.apiKey }, s)).slice(1),
            u = await e._getAdditionalHeaders();
          return (
            (u['Content-Type'] = 'application/json'),
            e.languageCode && (u['X-Firebase-Locale'] = e.languageCode),
            D.fetch()(B(e, e.config.apiHost, n, a), Object.assign({ method: t, headers: u, referrerPolicy: 'no-referrer' }, o))
          );
        });
      }
      async function U(e, t, n) {
        e._canInitEmulator = !1;
        const r = Object.assign(Object.assign({}, L), t);
        try {
          const t = new $(e),
            i = await Promise.race([n(), t.promise]);
          t.clearNetworkTimeout();
          const o = await i.json();
          if ('needConfirmation' in o) throw q(e, 'account-exists-with-different-credential', o);
          if (i.ok && !('errorMessage' in o)) return o;
          {
            const t = i.ok ? o.errorMessage : o.error.message,
              [n, s] = t.split(' : ');
            if ('FEDERATED_USER_ID_ALREADY_LINKED' === n) throw q(e, 'credential-already-in-use', o);
            if ('EMAIL_EXISTS' === n) throw q(e, 'email-already-in-use', o);
            if ('USER_DISABLED' === n) throw q(e, 'user-disabled', o);
            const a = r[n] || n.toLowerCase().replace(/[_\s]+/g, '-');
            if (s) throw _(e, a, s);
            w(e, a);
          }
        } catch (o) {
          if (o instanceof i.ZR) throw o;
          w(e, 'network-request-failed', { message: String(o) });
        }
      }
      async function V(e, t, n, r, i = {}) {
        const o = await F(e, t, n, r, i);
        return 'mfaPendingCredential' in o && w(e, 'multi-factor-auth-required', { _serverResponse: o }), o;
      }
      function B(e, t, n, r) {
        const i = `${t}${n}?${r}`;
        return e.config.emulator ? P(e.config, i) : `${e.config.apiScheme}://${i}`;
      }
      class $ {
        constructor(e) {
          (this.auth = e),
            (this.timer = null),
            (this.promise = new Promise((e, t) => {
              this.timer = setTimeout(() => t(b(this.auth, 'network-request-failed')), j.get());
            }));
        }
        clearNetworkTimeout() {
          clearTimeout(this.timer);
        }
      }
      function q(e, t, n) {
        const r = { appName: e.name };
        n.email && (r.email = n.email), n.phoneNumber && (r.phoneNumber = n.phoneNumber);
        const i = b(e, t, r);
        return (i.customData._tokenResponse = n), i;
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ async function z(e, t) {
        return F(e, 'POST', '/v1/accounts:delete', t);
      }
      async function G(e, t) {
        return F(e, 'POST', '/v1/accounts:update', t);
      }
      async function W(e, t) {
        return F(e, 'POST', '/v1/accounts:lookup', t);
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function H(e) {
        if (e)
          try {
            const t = new Date(Number(e));
            if (!isNaN(t.getTime())) return t.toUTCString();
          } catch (t) {}
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ async function K(e, t = !1) {
        const n = (0, i.m9)(e),
          r = await n.getIdToken(t),
          o = Y(r);
        S(o && o.exp && o.auth_time && o.iat, n.auth, 'internal-error');
        const s = 'object' === typeof o.firebase ? o.firebase : void 0,
          a = null === s || void 0 === s ? void 0 : s['sign_in_provider'];
        return {
          claims: o,
          token: r,
          authTime: H(Q(o.auth_time)),
          issuedAtTime: H(Q(o.iat)),
          expirationTime: H(Q(o.exp)),
          signInProvider: a || null,
          signInSecondFactor: (null === s || void 0 === s ? void 0 : s['sign_in_second_factor']) || null
        };
      }
      function Q(e) {
        return 1e3 * Number(e);
      }
      function Y(e) {
        const [t, n, r] = e.split('.');
        if (void 0 === t || void 0 === n || void 0 === r) return y('JWT malformed, contained fewer than 3 sections'), null;
        try {
          const e = (0, i.tV)(n);
          return e ? JSON.parse(e) : (y('Failed to decode base64 JWT payload'), null);
        } catch (o) {
          return y('Caught error parsing JWT payload as JSON', null === o || void 0 === o ? void 0 : o.toString()), null;
        }
      }
      function X(e) {
        const t = Y(e);
        return (
          S(t, 'internal-error'),
          S('undefined' !== typeof t.exp, 'internal-error'),
          S('undefined' !== typeof t.iat, 'internal-error'),
          Number(t.exp) - Number(t.iat)
        );
      }
      /**
       * @license
