remove firebase code from this and fix the code. NO NEED TO EXPLAIN OR TO SHOW A BEFORE. JUST DIRECTLY CARRY OUT THE TASK TO REMOVE FIREBASE ELEMENTS FROM THE GIVEN SNIPPET WITHOUT BREAKING THE PROJECT-
            { uid: y, emailVerified: w, isAnonymous: b, providerData: _, stsTokenManager: I } = t;
          S(y && I, e, 'internal-error');
          const E = ae.fromJSON(this.name, I);
          S('string' === typeof y, e, 'internal-error'),
            ue(l, e.name),
            ue(h, e.name),
            S('boolean' === typeof w, e, 'internal-error'),
            S('boolean' === typeof b, e, 'internal-error'),
            ue(f, e.name),
            ue(d, e.name),
            ue(p, e.name),
            ue(g, e.name),
            ue(m, e.name),
            ue(v, e.name);
          const T = new ce({
            uid: y,
            auth: e,
            email: h,
            emailVerified: w,
            displayName: l,
            isAnonymous: b,
            photoURL: d,
            phoneNumber: f,
            tenantId: p,
            stsTokenManager: E,
            createdAt: m,
            lastLoginAt: v
          });
          return _ && Array.isArray(_) && (T.providerData = _.map(e => Object.assign({}, e))), g && (T._redirectEventId = g), T;
        }
        static async _fromIdTokenResponse(e, t, n = !1) {
          const r = new ae();
          r.updateFromServerResponse(t);
          const i = new ce({ uid: t.localId, auth: e, stsTokenManager: r, isAnonymous: n });
          return await ne(i), i;
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ const le = new Map();
      function he(e) {
        A(e instanceof Function, 'Expected a class definition');
        let t = le.get(e);
        return t ? (A(t instanceof e, 'Instance stored in cache mismatched with class'), t) : ((t = new e()), le.set(e, t), t);
      }
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ class fe {
        constructor() {
          (this.type = 'NONE'), (this.storage = {});
        }
        async _isAvailable() {
          return !0;
        }
        async _set(e, t) {
          this.storage[e] = t;
        }
        async _get(e) {
          const t = this.storage[e];
          return void 0 === t ? null : t;
        }
        async _remove(e) {
          delete this.storage[e];
        }
        _addListener(e, t) {}
        _removeListener(e, t) {}
      }
      fe.type = 'NONE';
      const de = fe;
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function pe(e, t, n) {
        return `firebase:${e}:${t}:${n}`;
      }
      class ge {
        constructor(e, t, n) {
          (this.persistence = e), (this.auth = t), (this.userKey = n);
          const { config: r, name: i } = this.auth;
          (this.fullUserKey = pe(this.userKey, r.apiKey, i)),
            (this.fullPersistenceKey = pe('persistence', r.apiKey, i)),
            (this.boundEventHandler = t._onStorageEvent.bind(t)),
            this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
        }
        setCurrentUser(e) {
          return this.persistence._set(this.fullUserKey, e.toJSON());
        }
        async getCurrentUser() {
          const e = await this.persistence._get(this.fullUserKey);
          return e ? ce._fromJSON(this.auth, e) : null;
        }
        removeCurrentUser() {
          return this.persistence._remove(this.fullUserKey);
        }
        savePersistenceForRedirect() {
          return this.persistence._set(this.fullPersistenceKey, this.persistence.type);
        }
        async setPersistence(e) {
          if (this.persistence === e) return;
          const t = await this.getCurrentUser();
          return await this.removeCurrentUser(), (this.persistence = e), t ? this.setCurrentUser(t) : void 0;
        }
        delete() {
          this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);
        }
        static async create(e, t, n = 'authUser') {
          if (!t.length) return new ge(he(de), e, n);
          const r = (
            await Promise.all(
              t.map(async e => {
                if (await e._isAvailable()) return e;
              })
            )
          ).filter(e => e);
          let i = r[0] || he(de);
          const o = pe(n, e.config.apiKey, e.name);
          let s = null;
          for (const c of t)
            try {
              const t = await c._get(o);
              if (t) {
                const n = ce._fromJSON(e, t);
                c !== i && (s = n), (i = c);
                break;
              }
            } catch (u) {}
          const a = r.filter(e => e._shouldAllowMigration);
          return i._shouldAllowMigration && a.length
            ? ((i = a[0]),
              s && (await i._set(o, s.toJSON())),
              await Promise.all(
                t.map(async e => {
                  if (e !== i)
                    try {
                      await e._remove(o);
                    } catch (u) {}
                })
              ),
              new ge(i, e, n))
            : new ge(i, e, n);
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function me(e) {
        const t = e.toLowerCase();
        if (t.includes('opera/') || t.includes('opr/') || t.includes('opios/')) return 'Opera';
        if (be(t)) return 'IEMobile';
        if (t.includes('msie') || t.includes('trident/')) return 'IE';
        if (t.includes('edge/')) return 'Edge';
        if (ve(t)) return 'Firefox';
        if (t.includes('silk/')) return 'Silk';
        if (Ie(t)) return 'Blackberry';
        if (Ee(t)) return 'Webos';
        if (ye(t)) return 'Safari';
        if ((t.includes('chrome/') || we(t)) && !t.includes('edge/')) return 'Chrome';
        if (_e(t)) return 'Android';
        {
          const t = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,
            n = e.match(t);
          if (2 === (null === n || void 0 === n ? void 0 : n.length)) return n[1];
        }
        return 'Other';
      }
      function ve(e = (0, i.z$)()) {
        return /firefox\//i.test(e);
      }
      function ye(e = (0, i.z$)()) {
        const t = e.toLowerCase();
        return t.includes('safari/') && !t.includes('chrome/') && !t.includes('crios/') && !t.includes('android');
      }
      function we(e = (0, i.z$)()) {
        return /crios\//i.test(e);
      }
      function be(e = (0, i.z$)()) {
        return /iemobile/i.test(e);
      }
      function _e(e = (0, i.z$)()) {
        return /android/i.test(e);
      }
      function Ie(e = (0, i.z$)()) {
        return /blackberry/i.test(e);
      }
      function Ee(e = (0, i.z$)()) {
        return /webos/i.test(e);
      }
      function Se(e = (0, i.z$)()) {
        return /iphone|ipad|ipod/i.test(e) || (/macintosh/i.test(e) && /mobile/i.test(e));
      }
      function Te(e = (0, i.z$)()) {
        return /(iPad|iPhone|iPod).*OS 7_\d/i.test(e) || /(iPad|iPhone|iPod).*OS 8_\d/i.test(e);
      }
      function Ae(e = (0, i.z$)()) {
        var t;
        return Se(e) && !!(null === (t = window.navigator) || void 0 === t ? void 0 : t.standalone);
      }
      function xe() {
        return (0, i.w1)() && 10 === document.documentMode;
      }
      function Ce(e = (0, i.z$)()) {
        return Se(e) || _e(e) || Ee(e) || Ie(e) || /windows phone/i.test(e) || be(e);
      }
      function ke() {
        try {
          return !(!window || window === window.top);
        } catch (e) {
          return !1;
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function Oe(e, t = []) {
        let n;
        switch (e) {
          case 'Browser':
            n = me((0, i.z$)());
            break;
          case 'Worker':
            n = `${me((0, i.z$)())}-${e}`;
            break;
          default:
            n = e;
        }
        const r = t.length ? t.join(',') : 'FirebaseCore-web';
        return `${n}/JsCore/${o.SDK_VERSION}/${r}`;
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ async function Ne(e) {
        return (await F(e, 'GET', '/v1/recaptchaParams')).recaptchaSiteKey || '';
      }
      async function Re(e, t) {
        return F(e, 'GET', '/v2/recaptchaConfig', M(e, t));
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function Pe(e) {
        return void 0 !== e && void 0 !== e.getResponse;
      }
      function De(e) {
        return void 0 !== e && void 0 !== e.enterprise;
      }
      class Le {
        constructor(e) {
          if (((this.siteKey = ''), (this.emailPasswordEnabled = !1), void 0 === e.recaptchaKey)) throw new Error('recaptchaKey undefined');
          (this.siteKey = e.recaptchaKey.split('/')[3]),
            (this.emailPasswordEnabled = e.recaptchaEnforcementState.some(
              e => 'EMAIL_PASSWORD_PROVIDER' === e.provider && 'OFF' !== e.enforcementState
            ));
        }
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function je() {
        var e, t;
        return null !== (t = null === (e = document.getElementsByTagName('head')) || void 0 === e ? void 0 : e[0]) && void 0 !== t ? t : document;
      }
      function Me(e) {
        return new Promise((t, n) => {
          const r = document.createElement('script');
          r.setAttribute('src', e),
            (r.onload = t),
            (r.onerror = e => {
              const t = b('internal-error');
              (t.customData = e), n(t);
            }),
            (r.type = 'text/javascript'),
            (r.charset = 'UTF-8'),
            je().appendChild(r);
        });
      }
      function Fe(e) {
        return `__${e}${Math.floor(1e6 * Math.random())}`;
      }
      const Ue = 'https://www.google.com/recaptcha/enterprise.js?render=',
        Ve = 'recaptcha-enterprise',
        Be = 'NO_RECAPTCHA';
      class $e {
        constructor(e) {
          (this.type = Ve), (this.auth = We(e));
        }
        async verify(e = 'verify', t = !1) {
          async function n(e) {
            if (!t) {
              if (null == e.tenantId && null != e._agentRecaptchaConfig) return e._agentRecaptchaConfig.siteKey;
              if (null != e.tenantId && void 0 !== e._tenantRecaptchaConfigs[e.tenantId]) return e._tenantRecaptchaConfigs[e.tenantId].siteKey;
            }
            return new Promise(async (t, n) => {
              Re(e, { clientType: 'CLIENT_TYPE_WEB', version: 'RECAPTCHA_ENTERPRISE' })
                .then(r => {
                  if (void 0 !== r.recaptchaKey) {
                    const n = new Le(r);
                    return null == e.tenantId ? (e._agentRecaptchaConfig = n) : (e._tenantRecaptchaConfigs[e.tenantId] = n), t(n.siteKey);
                  }
                  n(new Error('recaptcha Enterprise site key undefined'));
                })
                .catch(e => {
