remove firebase code from this and fix the code. NO NEED TO EXPLAIN OR TO SHOW A BEFORE. JUST DIRECTLY CARRY OUT THE TASK TO REMOVE FIREBASE ELEMENTS FROM THE GIVEN SNIPPET WITHOUT BREAKING THE PROJECT-
          try {
            return new Hm(this.firestore, void 0 === e ? Op(this._delegate) : Op(this._delegate, e));
          } catch (t) {
            throw Km(t, 'doc()', 'CollectionReference.doc()');
          }
        }
        add(e) {
          return vm(this._delegate, e).then(e => new Hm(this.firestore, e));
        }
        isEqual(e) {
          return Np(this._delegate, e._delegate);
        }
        withConverter(e) {
          return new nv(this.firestore, e ? this._delegate.withConverter(Wm.getInstance(this.firestore, e)) : this._delegate.withConverter(null));
        }
      }
      function rv(e) {
        return bp(e, Tp);
      }
      /**
       * @license
       * Copyright 2017 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ class iv {
        constructor(...e) {
          this._delegate = new Xp(...e);
        }
        static documentId() {
          return new iv(Oi.keyField().canonicalString());
        }
        isEqual(e) {
          return (e = (0, u.m9)(e)), e instanceof Xp && this._delegate._internalPath.isEqual(e._internalPath);
        }
      }
      /**
       * @license
       * Copyright 2017 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ class ov {
        constructor(e) {
          this._delegate = e;
        }
        static serverTimestamp() {
          const e = Cm();
          return (e._methodName = 'FieldValue.serverTimestamp'), new ov(e);
        }
        static delete() {
          const e = xm();
          return (e._methodName = 'FieldValue.delete'), new ov(e);
        }
        static arrayUnion(...e) {
          const t = km(...e);
          return (t._methodName = 'FieldValue.arrayUnion'), new ov(t);
        }
        static arrayRemove(...e) {
          const t = Om(...e);
          return (t._methodName = 'FieldValue.arrayRemove'), new ov(t);
        }
        static increment(e) {
          const t = Nm(e);
          return (t._methodName = 'FieldValue.increment'), new ov(t);
        }
        isEqual(e) {
          return this._delegate.isEqual(e._delegate);
        }
      }
      /**
       * @license
       * Copyright 2021 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ const sv = {
        Firestore: Bm,
        GeoPoint: Zp,
        Timestamp: Ti,
        Blob: Mm,
        Transaction: zm,
        WriteBatch: Gm,
        DocumentReference: Hm,
        DocumentSnapshot: Xm,
        Query: Zm,
        QueryDocumentSnapshot: Jm,
        QuerySnapshot: tv,
        CollectionReference: nv,
        FieldPath: iv,
        FieldValue: ov,
        setLogLevel: qm,
        CACHE_SIZE_UNLIMITED: jp
      };
      function av(e, t) {
        e.INTERNAL.registerComponent(
          new s.wA(
            'firestore-compat',
            e => {
              const n = e.getProvider('app-compat').getImmediate(),
                r = e.getProvider('firestore').getImmediate();
              return t(n, r);
            },
            'PUBLIC'
          ).setServiceProps(Object.assign({}, sv))
        );
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ function uv(e) {
        av(e, (e, t) => new Bm(e, t, new Vm())), e.registerVersion(Rm, Pm);
      }
      uv(i.Z);
    }
  }
]);
