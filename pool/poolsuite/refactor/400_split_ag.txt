      }
      function P(e, t) {
        t = { encode: !0, strict: !0, [w]: !0, ...t };
        const n = A(e.url).split('?')[0] || '',
          r = k(e.url),
          i = { ...O(r, { sort: !1 }), ...e.query };
        let o = N(i, t);
        o && (o = `?${o}`);
        let s = x(e.url);
        if (e.fragmentIdentifier) {
          const r = new URL(n);
          (r.hash = e.fragmentIdentifier), (s = t[w] ? r.hash : `#${e.fragmentIdentifier}`);
        }
        return `${n}${o}${s}`;
      }
      function D(e, t, n) {
        n = { parseFragmentIdentifier: !0, [w]: !1, ...n };
        const { url: r, query: i, fragmentIdentifier: o } = R(e, n);
        return P({ url: r, query: m(i, t), fragmentIdentifier: o }, n);
      }
      function L(e, t, n) {
        const r = Array.isArray(t) ? e => !t.includes(e) : (e, n) => !t(e, n);
        return D(e, r, n);
      }
      var j = r,
        M = n(29293),
        F = n.n(M),
        U = (function () {
          function e() {}
          return (
            (e.prototype.getApplicationContext = function () {
              return { versionName: this.versionName, language: V(), platform: 'Web', os: void 0, deviceModel: void 0 };
            }),
            e
          );
        })(),
        V = function () {
          return ('undefined' !== typeof navigator && ((navigator.languages && navigator.languages[0]) || navigator.language)) || '';
        },
        B = (function () {
          function e() {
            this.queue = [];
          }
          return (
            (e.prototype.logEvent = function (e) {
              this.receiver ? this.receiver(e) : this.queue.length < 512 && this.queue.push(e);
            }),
            (e.prototype.setEventReceiver = function (e) {
              (this.receiver = e),
                this.queue.length > 0 &&
                  (this.queue.forEach(function (t) {
                    e(t);
                  }),
                  (this.queue = []));
            }),
            e
          );
        })(),
        $ = function () {
          return (
            ($ =
              Object.assign ||
              function (e) {
                for (var t, n = 1, r = arguments.length; n < r; n++)
                  for (var i in ((t = arguments[n]), t)) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e;
              }),
            $.apply(this, arguments)
          );
        },
        q = function (e, t) {
          var n = ['string', 'number', 'boolean', 'undefined'],
            r = typeof e,
            i = typeof t;
          if (r !== i) return !1;
          for (var o = 0, s = n; o < s.length; o++) {
            var a = s[o];
            if (a === r) return e === t;
          }
          if (null == e && null == t) return !0;
          if (null == e || null == t) return !1;
          if (e.length !== t.length) return !1;
          var u = Array.isArray(e),
            c = Array.isArray(t);
          if (u !== c) return !1;
          if (!u || !c) {
            var l = Object.keys(e).sort(),
              h = Object.keys(t).sort();
            if (!q(l, h)) return !1;
            var f = !0;
            return (
              Object.keys(e).forEach(function (n) {
                q(e[n], t[n]) || (f = !1);
              }),
              f
            );
          }
          for (var d = 0; d < e.length; d++) if (!q(e[d], t[d])) return !1;
          return !0;
        },
        z = '$set',
        G = '$unset',
        W = '$clearAll';
      Object.entries ||
        (Object.entries = function (e) {
          var t = Object.keys(e),
            n = t.length,
            r = new Array(n);
          while (n--) r[n] = [t[n], e[t[n]]];
          return r;
        });
      var H = (function () {
          function e() {
            (this.identity = { userProperties: {} }), (this.listeners = new Set());
          }
          return (
            (e.prototype.editIdentity = function () {
              var e = this,
                t = $({}, this.identity.userProperties),
                n = $($({}, this.identity), { userProperties: t });
              return {
                setUserId: function (e) {
                  return (n.userId = e), this;
                },
                setDeviceId: function (e) {
                  return (n.deviceId = e), this;
                },
                setUserProperties: function (e) {
                  return (n.userProperties = e), this;
                },
                updateUserProperties: function (e) {
                  for (var t = n.userProperties || {}, r = 0, i = Object.entries(e); r < i.length; r++) {
                    var o = i[r],
                      s = o[0],
                      a = o[1];
                    switch (s) {
                      case z:
                        for (var u = 0, c = Object.entries(a); u < c.length; u++) {
                          var l = c[u],
                            h = l[0],
                            f = l[1];
                          t[h] = f;
                        }
                        break;
                      case G:
                        for (var d = 0, p = Object.keys(a); d < p.length; d++) {
                          h = p[d];
                          delete t[h];
                        }
                        break;
                      case W:
                        t = {};
                        break;
                    }
                  }
                  return (n.userProperties = t), this;
                },
                commit: function () {
                  return e.setIdentity(n), this;
                }
              };
            }),
            (e.prototype.getIdentity = function () {
              return $({}, this.identity);
            }),
            (e.prototype.setIdentity = function (e) {
              var t = $({}, this.identity);
              (this.identity = $({}, e)),
                q(t, this.identity) ||
                  this.listeners.forEach(function (t) {
                    t(e);
                  });
            }),
            (e.prototype.addIdentityListener = function (e) {
              this.listeners.add(e);
            }),
            (e.prototype.removeIdentityListener = function (e) {
              this.listeners.delete(e);
            }),
            e
          );
        })(),
        K = 'undefined' !== typeof globalThis ? globalThis : 'undefined' !== typeof n.g ? n.g : self,
        Q = (function () {
          function e() {
            (this.identityStore = new H()), (this.eventBridge = new B()), (this.applicationContextProvider = new U());
          }
          return (
            (e.getInstance = function (t) {
              return (
                K['analyticsConnectorInstances'] || (K['analyticsConnectorInstances'] = {}),
                K['analyticsConnectorInstances'][t] || (K['analyticsConnectorInstances'][t] = new e()),
                K['analyticsConnectorInstances'][t]
              );
            }),
            e
          );
        })(),
        Y = n(48764)['Buffer'];
      function X(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function J(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? X(Object(n), !0).forEach(function (t) {
                re(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : X(Object(n)).forEach(function (t) {
                  Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                });
        }
        return e;
      }
      function Z(e) {
        return (
          (Z =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
                }),
          Z(e)
        );
      }
      function ee(e, t) {
        if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
      }
      function te(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1), (r.configurable = !0), 'value' in r && (r.writable = !0), Object.defineProperty(e, fe(r.key), r);
        }
      }
      function ne(e, t, n) {
        return t && te(e.prototype, t), n && te(e, n), Object.defineProperty(e, 'prototype', { writable: !1 }), e;
      }
      function re(e, t, n) {
        return (t = fe(t)), t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n), e;
      }
      function ie(e) {
        return oe(e) || se(e) || ae(e) || ce();
      }
      function oe(e) {
        if (Array.isArray(e)) return ue(e);
      }
      function se(e) {
        if (('undefined' !== typeof Symbol && null != e[Symbol.iterator]) || null != e['@@iterator']) return Array.from(e);
      }
      function ae(e, t) {
        if (e) {
          if ('string' === typeof e) return ue(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          return (
            'Object' === n && e.constructor && (n = e.constructor.name),
            'Map' === n || 'Set' === n ? Array.from(e) : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ue(e, t) : void 0
          );
        }
      }
      function ue(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r;
      }
      function ce() {
        throw new TypeError(
          'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
        );
      }
      function le(e, t) {
        var n = ('undefined' !== typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
        if (!n) {
          if (Array.isArray(e) || (n = ae(e)) || (t && e && 'number' === typeof e.length)) {
            n && (e = n);
            var r = 0,
              i = function () {};
            return {
              s: i,
              n: function () {
                return r >= e.length ? { done: !0 } : { done: !1, value: e[r++] };
              },
              e: function (e) {
                throw e;
              },
              f: i
            };
          }
          throw new TypeError(
            'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }
        var o,
          s = !0,
          a = !1;
        return {
          s: function () {
            n = n.call(e);
          },
          n: function () {
            var e = n.next();
            return (s = e.done), e;
          },
          e: function (e) {
            (a = !0), (o = e);
          },
          f: function () {
            try {
              s || null == n.return || n.return();
            } finally {
              if (a) throw o;
            }
          }
        };
      }
      function he(e, t) {
        if ('object' !== typeof e || null === e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
          var r = n.call(e, t || 'default');
          if ('object' !== typeof r) return r;
          throw new TypeError('@@toPrimitive must return a primitive value.');
        }
        return ('string' === t ? String : Number)(e);
      }
      function fe(e) {
        var t = he(e, 'string');
        return 'symbol' === typeof t ? t : String(t);
      }
      var de = {
          DEFAULT_INSTANCE: '$default_instance',
          API_VERSION: 2,
          MAX_STRING_LENGTH: 4096,
          MAX_PROPERTY_KEYS: 1e3,
          IDENTIFY_EVENT: '$identify',
          GROUP_IDENTIFY_EVENT: '$groupidentify',
          EVENT_LOG_URL: 'api.amplitude.com',
          EVENT_LOG_EU_URL: 'api.eu.amplitude.com',
          DYNAMIC_CONFIG_URL: 'regionconfig.amplitude.com',
          DYNAMIC_CONFIG_EU_URL: 'regionconfig.eu.amplitude.com',
          LAST_EVENT_ID: 'amplitude_lastEventId',
          LAST_EVENT_TIME: 'amplitude_lastEventTime',
          LAST_IDENTIFY_ID: 'amplitude_lastIdentifyId',
          LAST_SEQUENCE_NUMBER: 'amplitude_lastSequenceNumber',
          SESSION_ID: 'amplitude_sessionId',
          DEVICE_ID: 'amplitude_deviceId',
          OPT_OUT: 'amplitude_optOut',
          USER_ID: 'amplitude_userId',
          DEVICE_ID_INDEX: 0,
          USER_ID_INDEX: 1,
          OPT_OUT_INDEX: 2,
          SESSION_ID_INDEX: 3,
          LAST_EVENT_TIME_INDEX: 4,
          EVENT_ID_INDEX: 5,
          IDENTIFY_ID_INDEX: 6,
          SEQUENCE_NUMBER_INDEX: 7,
          COOKIE_TEST_PREFIX: 'amp_cookie_test',
          COOKIE_PREFIX: 'amp',
          STORAGE_DEFAULT: '',
          STORAGE_COOKIES: 'cookies',
          STORAGE_NONE: 'none',
          STORAGE_LOCAL: 'localStorage',
          STORAGE_SESSION: 'sessionStorage',
          REVENUE_EVENT: 'revenue_amount',
          REVENUE_PRODUCT_ID: '$productId',
          REVENUE_QUANTITY: '$quantity',
          REVENUE_PRICE: '$price',
          REVENUE_REVENUE_TYPE: '$revenueType',
          AMP_DEVICE_ID_PARAM: 'amp_device_id',
          AMP_REFERRER_PARAM: 'amp_referrer',
          REFERRER: 'referrer',
          REFERRING_DOMAIN: 'referring_domain',
          UTM_SOURCE: 'utm_source',
          UTM_MEDIUM: 'utm_medium',
          UTM_CAMPAIGN: 'utm_campaign',
          UTM_TERM: 'utm_term',
          UTM_CONTENT: 'utm_content',
          ATTRIBUTION_EVENT: '[Amplitude] Attribution Captured',
          TRANSPORT_HTTP: 'http',
          TRANSPORT_BEACON: 'beacon'
        },
        pe = {
          encode: function (e) {
            for (var t = '', n = 0; n < e.length; n++) {
              var r = e.charCodeAt(n);
              r < 128
                ? (t += String.fromCharCode(r))
