        d = new s.Yd('@firebase/app-compat'),
        p = '@firebase/app-compat',
        g = '0.2.13';
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */
      function m(e) {
        (0, o.registerVersion)(p, g, e);
      }
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ if ((0, r.jU)() && void 0 !== self.firebase) {
        d.warn('\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ');
        const e = self.firebase.SDK_VERSION;
        e &&
          e.indexOf('LITE') >= 0 &&
          d.warn(
            '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
          );
      }
      const v = f;
      m();
    },
    25816: (e, t, n) => {
      'use strict';
      n.r(t),
        n.d(t, {
          FirebaseError: () => o.ZR,
          SDK_VERSION: () => ye,
          _DEFAULT_ENTRY_NAME: () => oe,
          _addComponent: () => ce,
          _addOrOverwriteComponent: () => le,
          _apps: () => ae,
          _clearComponents: () => pe,
          _components: () => ue,
          _getProvider: () => fe,
          _registerComponent: () => he,
          _removeServiceInstance: () => de,
          deleteApp: () => Ie,
          getApp: () => be,
          getApps: () => _e,
          initializeApp: () => we,
          onLog: () => Se,
          registerVersion: () => Ee,
          setLogLevel: () => Te
        });
      var r = n(8463),
        i = n(53333),
        o = n(74444);
      const s = (e, t) => t.some(t => e instanceof t);
      let a, u;
      function c() {
        return a || (a = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);
      }
      function l() {
        return u || (u = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);
      }
      const h = new WeakMap(),
        f = new WeakMap(),
        d = new WeakMap(),
        p = new WeakMap(),
        g = new WeakMap();
      function m(e) {
        const t = new Promise((t, n) => {
          const r = () => {
              e.removeEventListener('success', i), e.removeEventListener('error', o);
            },
            i = () => {
              t(I(e.result)), r();
            },
            o = () => {
              n(e.error), r();
            };
          e.addEventListener('success', i), e.addEventListener('error', o);
        });
        return (
          t
            .then(t => {
              t instanceof IDBCursor && h.set(t, e);
            })
            .catch(() => {}),
          g.set(t, e),
          t
        );
      }
      function v(e) {
        if (f.has(e)) return;
        const t = new Promise((t, n) => {
          const r = () => {
              e.removeEventListener('complete', i), e.removeEventListener('error', o), e.removeEventListener('abort', o);
            },
            i = () => {
              t(), r();
            },
            o = () => {
              n(e.error || new DOMException('AbortError', 'AbortError')), r();
            };
          e.addEventListener('complete', i), e.addEventListener('error', o), e.addEventListener('abort', o);
        });
        f.set(e, t);
      }
      let y = {
        get(e, t, n) {
          if (e instanceof IDBTransaction) {
            if ('done' === t) return f.get(e);
            if ('objectStoreNames' === t) return e.objectStoreNames || d.get(e);
            if ('store' === t) return n.objectStoreNames[1] ? void 0 : n.objectStore(n.objectStoreNames[0]);
          }
          return I(e[t]);
        },
        set(e, t, n) {
          return (e[t] = n), !0;
        },
        has(e, t) {
          return (e instanceof IDBTransaction && ('done' === t || 'store' === t)) || t in e;
        }
      };
      function w(e) {
        y = e(y);
      }
      function b(e) {
        return e !== IDBDatabase.prototype.transaction || 'objectStoreNames' in IDBTransaction.prototype
          ? l().includes(e)
            ? function (...t) {
                return e.apply(E(this), t), I(h.get(this));
              }
            : function (...t) {
                return I(e.apply(E(this), t));
              }
          : function (t, ...n) {
              const r = e.call(E(this), t, ...n);
              return d.set(r, t.sort ? t.sort() : [t]), I(r);
            };
      }
      function _(e) {
        return 'function' === typeof e ? b(e) : (e instanceof IDBTransaction && v(e), s(e, c()) ? new Proxy(e, y) : e);
      }
      function I(e) {
        if (e instanceof IDBRequest) return m(e);
        if (p.has(e)) return p.get(e);
        const t = _(e);
        return t !== e && (p.set(e, t), g.set(t, e)), t;
      }
      const E = e => g.get(e);
      function S(e, t, { blocked: n, upgrade: r, blocking: i, terminated: o } = {}) {
        const s = indexedDB.open(e, t),
          a = I(s);
        return (
          r &&
            s.addEventListener('upgradeneeded', e => {
              r(I(s.result), e.oldVersion, e.newVersion, I(s.transaction), e);
            }),
          n && s.addEventListener('blocked', e => n(e.oldVersion, e.newVersion, e)),
          a
            .then(e => {
              o && e.addEventListener('close', () => o()), i && e.addEventListener('versionchange', e => i(e.oldVersion, e.newVersion, e));
            })
            .catch(() => {}),
          a
        );
      }
      const T = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'],
        A = ['put', 'add', 'delete', 'clear'],
        x = new Map();
      function C(e, t) {
        if (!(e instanceof IDBDatabase) || t in e || 'string' !== typeof t) return;
        if (x.get(t)) return x.get(t);
        const n = t.replace(/FromIndex$/, ''),
          r = t !== n,
          i = A.includes(n);
        if (!(n in (r ? IDBIndex : IDBObjectStore).prototype) || (!i && !T.includes(n))) return;
        const o = async function (e, ...t) {
          const o = this.transaction(e, i ? 'readwrite' : 'readonly');
          let s = o.store;
          return r && (s = s.index(t.shift())), (await Promise.all([s[n](...t), i && o.done]))[0];
        };
        return x.set(t, o), o;
      }
      w(e => ({ ...e, get: (t, n, r) => C(t, n) || e.get(t, n, r), has: (t, n) => !!C(t, n) || e.has(t, n) }));
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */
      class k {
        constructor(e) {
          this.container = e;
        }
        getPlatformInfoString() {
          const e = this.container.getProviders();
          return e
            .map(e => {
              if (O(e)) {
                const t = e.getImmediate();
                return `${t.library}/${t.version}`;
              }
              return null;
            })
            .filter(e => e)
            .join(' ');
        }
      }
      function O(e) {
        const t = e.getComponent();
        return 'VERSION' === (null === t || void 0 === t ? void 0 : t.type);
      }
      const N = '@firebase/app',
        R = '0.9.13',
        P = new i.Yd('@firebase/app'),
        D = '@firebase/app-compat',
        L = '@firebase/analytics-compat',
        j = '@firebase/analytics',
        M = '@firebase/app-check-compat',
        F = '@firebase/app-check',
        U = '@firebase/auth',
        V = '@firebase/auth-compat',
        B = '@firebase/database',
        $ = '@firebase/database-compat',
        q = '@firebase/functions',
        z = '@firebase/functions-compat',
        G = '@firebase/installations',
        W = '@firebase/installations-compat',
        H = '@firebase/messaging',
        K = '@firebase/messaging-compat',
        Q = '@firebase/performance',
        Y = '@firebase/performance-compat',
        X = '@firebase/remote-config',
        J = '@firebase/remote-config-compat',
        Z = '@firebase/storage',
        ee = '@firebase/storage-compat',
        te = '@firebase/firestore',
        ne = '@firebase/firestore-compat',
        re = 'firebase',
        ie = '9.23.0',
        oe = '[DEFAULT]',
        se = {
          [N]: 'fire-core',
          [D]: 'fire-core-compat',
          [j]: 'fire-analytics',
          [L]: 'fire-analytics-compat',
          [F]: 'fire-app-check',
          [M]: 'fire-app-check-compat',
          [U]: 'fire-auth',
          [V]: 'fire-auth-compat',
          [B]: 'fire-rtdb',
          [$]: 'fire-rtdb-compat',
          [q]: 'fire-fn',
          [z]: 'fire-fn-compat',
          [G]: 'fire-iid',
          [W]: 'fire-iid-compat',
          [H]: 'fire-fcm',
          [K]: 'fire-fcm-compat',
          [Q]: 'fire-perf',
          [Y]: 'fire-perf-compat',
          [X]: 'fire-rc',
          [J]: 'fire-rc-compat',
          [Z]: 'fire-gcs',
          [ee]: 'fire-gcs-compat',
          [te]: 'fire-fst',
          [ne]: 'fire-fst-compat',
          'fire-js': 'fire-js',
          [re]: 'fire-js-all'
        },
        ae = new Map(),
        ue = new Map();
      function ce(e, t) {
        try {
          e.container.addComponent(t);
        } catch (n) {
          P.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`, n);
        }
      }
      function le(e, t) {
        e.container.addOrOverwriteComponent(t);
      }
      function he(e) {
        const t = e.name;
        if (ue.has(t)) return P.debug(`There were multiple attempts to register component ${t}.`), !1;
        ue.set(t, e);
        for (const n of ae.values()) ce(n, e);
        return !0;
      }
      function fe(e, t) {
        const n = e.container.getProvider('heartbeat').getImmediate({ optional: !0 });
        return n && n.triggerHeartbeat(), e.container.getProvider(t);
      }
      function de(e, t, n = oe) {
        fe(e, t).clearInstance(n);
      }
      function pe() {
        ue.clear();
      }
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ const ge = {
          ['no-app']: "No Firebase App '{$appName}' has been created - call initializeApp() first",
          ['bad-app-name']: "Illegal App name: '{$appName}",
          ['duplicate-app']: "Firebase App named '{$appName}' already exists with different options or config",
          ['app-deleted']: "Firebase App named '{$appName}' already deleted",
          ['no-options']: 'Need to provide options, when not being deployed to hosting via source.',
          ['invalid-app-argument']: 'firebase.{$appName}() takes either no argument or a Firebase App instance.',
          ['invalid-log-argument']: 'First argument to `onLog` must be null or a function.',
          ['idb-open']: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',
          ['idb-get']: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',
          ['idb-set']: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',
          ['idb-delete']: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'
        },
        me = new o.LL('app', 'Firebase', ge);
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */
      class ve {
        constructor(e, t, n) {
          (this._isDeleted = !1),
            (this._options = Object.assign({}, e)),
            (this._config = Object.assign({}, t)),
            (this._name = t.name),
            (this._automaticDataCollectionEnabled = t.automaticDataCollectionEnabled),
            (this._container = n),
            this.container.addComponent(new r.wA('app', () => this, 'PUBLIC'));
        }
        get automaticDataCollectionEnabled() {
          return this.checkDestroyed(), this._automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(e) {
          this.checkDestroyed(), (this._automaticDataCollectionEnabled = e);
        }
        get name() {
          return this.checkDestroyed(), this._name;
        }
        get options() {
          return this.checkDestroyed(), this._options;
        }
        get config() {
          return this.checkDestroyed(), this._config;
        }
        get container() {
          return this._container;
        }
        get isDeleted() {
          return this._isDeleted;
        }
        set isDeleted(e) {
          this._isDeleted = e;
        }
        checkDestroyed() {
          if (this.isDeleted) throw me.create('app-deleted', { appName: this._name });
        }
      }
      /**
       * @license
       * Copyright 2019 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ const ye = ie;
      function we(e, t = {}) {
        let n = e;
        if ('object' !== typeof t) {
          const e = t;
          t = { name: e };
        }
        const i = Object.assign({ name: oe, automaticDataCollectionEnabled: !1 }, t),
          s = i.name;
        if ('string' !== typeof s || !s) throw me.create('bad-app-name', { appName: String(s) });
        if ((n || (n = (0, o.aH)()), !n)) throw me.create('no-options');
        const a = ae.get(s);
        if (a) {
          if ((0, o.vZ)(n, a.options) && (0, o.vZ)(i, a.config)) return a;
          throw me.create('duplicate-app', { appName: s });
        }
        const u = new r.H0(s);
        for (const r of ue.values()) u.addComponent(r);
        const c = new ve(n, i, u);
        return ae.set(s, c), c;
      }
      function be(e = oe) {
        const t = ae.get(e);
        if (!t && e === oe && (0, o.aH)()) return we();
        if (!t) throw me.create('no-app', { appName: e });
        return t;
      }
      function _e() {
        return Array.from(ae.values());
      }
      async function Ie(e) {
        const t = e.name;
        ae.has(t) && (ae.delete(t), await Promise.all(e.container.getProviders().map(e => e.delete())), (e.isDeleted = !0));
      }
      function Ee(e, t, n) {
        var i;
        let o = null !== (i = se[e]) && void 0 !== i ? i : e;
        n && (o += `-${n}`);
        const s = o.match(/\s|\//),
          a = t.match(/\s|\//);
        if (s || a) {
          const e = [`Unable to register library "${o}" with version "${t}":`];
          return (
            s && e.push(`library name "${o}" contains illegal characters (whitespace or "/")`),
            s && a && e.push('and'),
            a && e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),
            void P.warn(e.join(' '))
          );
        }
        he(new r.wA(`${o}-version`, () => ({ library: o, version: t }), 'VERSION'));
      }
      function Se(e, t) {
        if (null !== e && 'function' !== typeof e) throw me.create('invalid-log-argument');
        (0, i.Am)(e, t);
      }
      function Te(e) {
        (0, i.Ub)(e);
