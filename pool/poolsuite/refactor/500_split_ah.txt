                    var n = this.getCookieStorageKey() + '=',
                      r = Ye.getAll(n);
                    if (0 === r.length || 1 === r.length) e = r[0];
                    else {
                      var i = Ye.sortByEventTime(r)[0];
                      r.forEach(function () {
                        return Ye.set(t.getCookieStorageKey(), null, {});
                      }),
                        this.saveCookie(i),
                        (e = Ye.get(n));
                    }
                  }
                  if ((e || (e = gt.getItem(this.storageKey)), !e))
                    try {
                      e = ge.sessionStorage && ge.sessionStorage.getItem(this.storageKey);
                    } catch (fn) {
                      qe.log.info('window.sessionStorage unavailable. Reason: "'.concat(fn, '"'));
                    }
                  if (!e) return null;
                  var o = e.split('.'),
                    s = null;
                  if (o[de.USER_ID_INDEX])
                    try {
                      s = me.decode(o[de.USER_ID_INDEX]);
                    } catch (fn) {
                      s = null;
                    }
                  return {
                    deviceId: o[de.DEVICE_ID_INDEX],
                    userId: s,
                    optOut: '1' === o[de.OPT_OUT_INDEX],
                    sessionId: parseInt(o[de.SESSION_ID_INDEX], 32),
                    lastEventTime: parseInt(o[de.LAST_EVENT_TIME_INDEX], 32),
                    eventId: parseInt(o[de.EVENT_ID_INDEX], 32),
                    identifyId: parseInt(o[de.IDENTIFY_ID_INDEX], 32),
                    sequenceNumber: parseInt(o[de.SEQUENCE_NUMBER_INDEX], 32)
                  };
                }
              },
              {
                key: 'clear',
                value: function () {
                  var e;
                  if (
                    (this.storage === de.STORAGE_COOKIES &&
                      ((e = Ye.get(this.getCookieStorageKey() + '=')),
                      Ye.set(this.getCookieStorageKey(), null, {
                        domain: this.cookieDomain,
                        secure: this.secure,
                        sameSite: this.sameSite,
                        expirationDays: 0
                      })),
                    e || ((e = gt.getItem(this.storageKey)), gt.clear()),
                    !e)
                  )
                    try {
                      (e = ge.sessionStorage && ge.sessionStorage.getItem(this.storageKey)), ge.sessionStorage.clear();
                    } catch (fn) {
                      qe.log.info('window.sessionStorage unavailable. Reason: "'.concat(fn, '"'));
                    }
                  return !!e;
                }
              }
            ]),
            e
          );
        })(),
        wt = function (e, t) {
          var n = e ? '?' + e.split('.').slice(-1)[0].replace(/\|/g, '&') : '',
            r = function (e, t, n, r) {
              return qe.getQueryParam(e, t) || qe.getQueryParam(n, r);
            },
            i = r(de.UTM_SOURCE, t, 'utmcsr', n),
            o = r(de.UTM_MEDIUM, t, 'utmcmd', n),
            s = r(de.UTM_CAMPAIGN, t, 'utmccn', n),
            a = r(de.UTM_TERM, t, 'utmctr', n),
            u = r(de.UTM_CONTENT, t, 'utmcct', n),
            c = {},
            l = function (e, t) {
              qe.isEmptyString(t) || (c[e] = t);
            };
          return l(de.UTM_SOURCE, i), l(de.UTM_MEDIUM, o), l(de.UTM_CAMPAIGN, s), l(de.UTM_TERM, a), l(de.UTM_CONTENT, u), c;
        },
        bt = '$add',
        _t = '$append',
        It = '$clearAll',
        Et = '$prepend',
        St = '$set',
        Tt = '$setOnce',
        At = '$unset',
        xt = '$preInsert',
        Ct = '$postInsert',
        kt = '$remove',
        Ot = function () {
          (this.userPropertiesOperations = {}), (this.properties = []);
        };
      (Ot.prototype.add = function (e, t) {
        return (
          'number' === ye(t) || 'string' === ye(t)
            ? this._addOperation(bt, e, t)
            : qe.log.error('Unsupported type for value: ' + ye(t) + ', expecting number or string'),
          this
        );
      }),
        (Ot.prototype.append = function (e, t) {
          return this._addOperation(_t, e, t), this;
        }),
        (Ot.prototype.clearAll = function () {
          return Object.keys(this.userPropertiesOperations).length > 0
            ? (Object.prototype.hasOwnProperty.call(this.userPropertiesOperations, It) ||
                qe.log.error('Need to send $clearAll on its own Identify object without any other operations, skipping $clearAll'),
              this)
            : ((this.userPropertiesOperations[It] = '-'), this);
        }),
        (Ot.prototype.prepend = function (e, t) {
          return this._addOperation(Et, e, t), this;
        }),
        (Ot.prototype.set = function (e, t) {
          return this._addOperation(St, e, t), this;
        }),
        (Ot.prototype.setOnce = function (e, t) {
          return this._addOperation(Tt, e, t), this;
        }),
        (Ot.prototype.unset = function (e) {
          return this._addOperation(At, e, '-'), this;
        }),
        (Ot.prototype.preInsert = function (e, t) {
          return this._addOperation(xt, e, t), this;
        }),
        (Ot.prototype.postInsert = function (e, t) {
          return this._addOperation(Ct, e, t), this;
        }),
        (Ot.prototype.remove = function (e, t) {
          return this._addOperation(kt, e, t), this;
        }),
        (Ot.prototype._addOperation = function (e, t, n) {
          Object.prototype.hasOwnProperty.call(this.userPropertiesOperations, It)
            ? qe.log.error('This identify already contains a $clearAll operation, skipping operation ' + e)
            : -1 === this.properties.indexOf(t)
              ? (Object.prototype.hasOwnProperty.call(this.userPropertiesOperations, e) || (this.userPropertiesOperations[e] = {}),
                (this.userPropertiesOperations[e][t] = n),
                this.properties.push(t))
              : qe.log.error('User property "' + t + '" already used in this identify, skipping operation ' + e);
        });
      var Nt = function (e, t, n) {
          (this.url = e), (this.data = t || {}), (this.headers = n);
        },
        Rt = 'Cross-Origin-Resource-Policy';
      function Pt(e, t) {
        for (var n in t) (n !== Rt || t[n]) && e.setRequestHeader(n, t[n]);
      }
      Nt.prototype.send = function (e) {
        var t = !!ge.XDomainRequest;
        if (t) {
          var n = new ge.XDomainRequest();
          n.open('POST', this.url, !0),
            (n.onload = function () {
              e(200, n.responseText);
            }),
            (n.onerror = function () {
              'Request Entity Too Large' === n.responseText ? e(413, n.responseText) : e(500, n.responseText);
            }),
            (n.ontimeout = function () {}),
            (n.onprogress = function () {}),
            n.send(j.stringify(this.data));
        } else if ('undefined' !== typeof XMLHttpRequest) {
          var r = new XMLHttpRequest();
          r.open('POST', this.url, !0),
            (r.onreadystatechange = function () {
              4 === r.readyState && e(r.status, r.responseText);
            }),
            Pt(r, this.headers),
            r.send(j.stringify(this.data));
        } else {
          var i = void 0;
          fetch(this.url, { method: 'POST', headers: this.headers, body: j.stringify(this.data) })
            .then(function (e) {
              return (i = e.status), e.text();
            })
            .then(function (t) {
              e(i, t);
            });
        }
      };
      var Dt = function () {
        (this._price = null), (this._productId = null), (this._quantity = 1), (this._revenueType = null), (this._properties = null);
      };
      (Dt.prototype.setProductId = function (e) {
        return (
          'string' !== ye(e)
            ? qe.log.error('Unsupported type for productId: ' + ye(e) + ', expecting string')
            : qe.isEmptyString(e)
              ? qe.log.error('Invalid empty productId')
              : (this._productId = e),
          this
        );
      }),
        (Dt.prototype.setQuantity = function (e) {
          return (
            'number' !== ye(e) ? qe.log.error('Unsupported type for quantity: ' + ye(e) + ', expecting number') : (this._quantity = parseInt(e)), this
          );
        }),
        (Dt.prototype.setPrice = function (e) {
          return 'number' !== ye(e) ? qe.log.error('Unsupported type for price: ' + ye(e) + ', expecting number') : (this._price = e), this;
        }),
        (Dt.prototype.setRevenueType = function (e) {
          return (
            'string' !== ye(e) ? qe.log.error('Unsupported type for revenueType: ' + ye(e) + ', expecting string') : (this._revenueType = e), this
          );
        }),
        (Dt.prototype.setEventProperties = function (e) {
          return (
            'object' !== ye(e)
              ? qe.log.error('Unsupported type for eventProperties: ' + ye(e) + ', expecting object')
              : (this._properties = qe.validateProperties(e)),
            this
          );
        }),
        (Dt.prototype._isValidRevenue = function () {
          return 'number' === ye(this._price) || (qe.log.error('Invalid revenue, need to set price field'), !1);
        }),
        (Dt.prototype._toJSONObject = function () {
          var e = 'object' === ye(this._properties) ? this._properties : {};
          return (
            null !== this._productId && (e[de.REVENUE_PRODUCT_ID] = this._productId),
            null !== this._quantity && (e[de.REVENUE_QUANTITY] = this._quantity),
            null !== this._price && (e[de.REVENUE_PRICE] = this._price),
            null !== this._revenueType && (e[de.REVENUE_REVENUE_TYPE] = this._revenueType),
            e
          );
        });
      var Lt = function e(t) {
          return t ? (t ^ ((16 * Math.random()) >> (t / 4))).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, e);
        },
        jt = function () {
          return (
            ('undefined' !== typeof navigator && ((navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage)) ||
            ''
          );
        },
        Mt = { getLanguage: jt },
        Ft = { US: 'US', EU: 'EU' },
        Ut = function (e) {
          var t = de.EVENT_LOG_URL;
          switch (e) {
            case Ft.EU:
              t = de.EVENT_LOG_EU_URL;
              break;
            case Ft.US:
              t = de.EVENT_LOG_URL;
              break;
          }
          return t;
        },
        Vt = function (e) {
          var t = de.DYNAMIC_CONFIG_URL;
          switch (e) {
            case Ft.EU:
              t = de.DYNAMIC_CONFIG_EU_URL;
              break;
            case Ft.US:
              t = de.DYNAMIC_CONFIG_URL;
              break;
          }
          return t;
        },
        Bt = '8.21.9',
        $t = {
          apiEndpoint: de.EVENT_LOG_URL,
          batchEvents: !1,
          cookieExpiration: 365,
          cookieName: 'amplitude_id',
          sameSiteCookie: 'Lax',
          cookieForceUpgrade: !1,
          deferInitialization: !1,
          disableCookies: !1,
          deviceIdFromUrlParam: !1,
          domain: '',
          eventUploadPeriodMillis: 3e4,
          eventUploadThreshold: 30,
          forceHttps: !0,
          includeFbclid: !1,
          includeGclid: !1,
          includeReferrer: !1,
          includeUtm: !1,
          ingestionMetadata: { sourceName: '', sourceVersion: '' },
          language: Mt.getLanguage(),
          library: { name: 'amplitude-js', version: Bt },
          logLevel: 'WARN',
          logAttributionCapturedEvent: !1,
          optOut: !1,
          onError: function () {},
          onExitPage: function () {},
          onNewSessionStart: function () {},
          plan: { branch: '', source: '', version: '', versionId: '' },
          platform: 'Web',
          savedMaxCount: 1e3,
          saveEvents: !0,
          saveParamsReferrerOncePerSession: !0,
          secureCookie: !1,
          sessionTimeout: 18e5,
          storage: de.STORAGE_DEFAULT,
          trackingOptions: {
            city: !0,
            country: !0,
            carrier: !0,
            device_manufacturer: !0,
            device_model: !0,
            dma: !0,
            ip_address: !0,
            language: !0,
            os_name: !0,
            os_version: !0,
            platform: !0,
            region: !0,
            version_name: !0
          },
          transport: de.TRANSPORT_HTTP,
          unsetParamsReferrerOnNewSession: !1,
          unsentKey: 'amplitude_unsent',
          unsentIdentifyKey: 'amplitude_unsent_identify',
          uploadBatchSize: 100,
          headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cross-Origin-Resource-Policy': 'cross-origin' },
          serverZone: Ft.US,
          useDynamicConfig: !1,
          serverZoneBasedApi: !1,
          sessionId: null,
          partnerId: ''
        },
        qt = (function () {
          function e() {
            return ee(this, e), e.instance || ((this.ingestionEndpoint = de.EVENT_LOG_URL), (e.instance = this)), e.instance;
          }
          return (
            ne(e, [
              {
                key: 'refresh',
                value: function (e, t, n) {
                  var r = 'https';
                  t || 'https:' === ge.location.protocol || (r = 'http');
                  var i = r + '://' + Vt(e),
                    o = this,
                    s = !!ge.XDomainRequest;
                  if (s) {
                    var a = new ge.XDomainRequest();
                    a.open('GET', i, !0),
                      (a.onload = function () {
                        var e = JSON.parse(a.responseText);
                        (o.ingestionEndpoint = e['ingestionEndpoint']), n && n();
                      }),
                      (a.onerror = function () {}),
                      (a.ontimeout = function () {}),
                      (a.onprogress = function () {}),
                      a.send();
                  } else {
                    var u = new XMLHttpRequest();
                    u.open('GET', i, !0),
                      (u.onreadystatechange = function () {
                        if (4 === u.readyState && 200 === u.status) {
                          var e = JSON.parse(u.responseText);
                          (o.ingestionEndpoint = e['ingestionEndpoint']), n && n();
                        }
                      }),
                      u.send();
                  }
                }
              }
            ]),
            e
          );
        })(),
        zt = new qt(),
        Gt = function (e) {
          i() ||
            qe.isWebWorkerEnvironment() ||
            qe.log.warn(
              'amplitude-js will not work in a non-browser environment. If you are planning to add Amplitude to a node environment, please use @amplitude/node'
            ),
            (this._instanceName = qe.isEmptyString(e) ? de.DEFAULT_INSTANCE : e.toLowerCase()),
            (this._unsentEvents = []),
            (this._unsentIdentifys = []),
            (this.options = J(
              J({}, $t),
              {},
              {
                headers: J({}, $t.headers),
                ingestionMetadata: J({}, $t.ingestionMetadata),
                library: J({}, $t.library),
                plan: J({}, $t.plan),
                trackingOptions: J({}, $t.trackingOptions)
              }
            )),
            (this._q = []),
            (this._sending = !1),
            (this._updateScheduled = !1),
            (this._onInitCallbacks = []),
            (this._onNewSessionStartCallbacks = []),
            (this._eventId = 0),
            (this._identifyId = 0),
            (this._lastEventTime = null),
            (this._newSession = !1),
            (this._sequenceNumber = 0),
            (this._sessionId = null),
            (this._isInitialized = !1),
            (this._connector = null),
            (this._userAgent = ('undefined' !== typeof navigator && navigator && navigator.userAgent) || null),
            (this._ua = new (F())(this._userAgent).getResult());
        };
      (Gt.prototype.Identify = Ot),
        (Gt.prototype.Revenue = Dt),
        (Gt.prototype.init = function (e, t, n, r) {
          var s = this;
          if ('string' !== ye(e) || qe.isEmptyString(e)) qe.log.error('Invalid apiKey. Please re-initialize with a valid apiKey');
          else
            try {
              (this._connector = Q.getInstance(this._instanceName)),
                Ht(this.options, n),
                (i() || qe.isWebWorkerEnvironment()) &&
                  void 0 !== ge.Prototype &&
                  Array.prototype.toJSON &&
                  (o(), qe.log.warn('Prototype.js injected Array.prototype.toJSON. Deleting Array.prototype.toJSON to prevent double-stringify')),
                this.options.cookieName !== $t.cookieName &&
                  qe.log.warn('The cookieName option is deprecated. We will be ignoring it for newer cookies'),
                this.options.serverZoneBasedApi && (this.options.apiEndpoint = Ut(this.options.serverZone)),
                this._refreshDynamicConfig(),
                (this.options.apiKey = e),
                (this._storageSuffix = '_' + e + (this._instanceName === de.DEFAULT_INSTANCE ? '' : '_' + this._instanceName)),
                (this._storageSuffixV5 = e.slice(0, 6)),
                (this._oldCookiename = this.options.cookieName + this._storageSuffix),
                (this._unsentKey = this.options.unsentKey + this._storageSuffix),
                (this._unsentIdentifyKey = this.options.unsentIdentifyKey + this._storageSuffix),
                (this._cookieName = de.COOKIE_PREFIX + '_' + this._storageSuffixV5),
                (this.cookieStorage = new mt().getStorage(this.options.disableCookies)),
                this.cookieStorage.options({
                  expirationDays: this.options.cookieExpiration,
                  domain: this.options.domain,
                  secure: this.options.secureCookie,
                  sameSite: this.options.sameSiteCookie
                }),
                (this._metadataStorage = new yt({
                  storageKey: this._cookieName,
                  disableCookies: this.options.disableCookies,
                  expirationDays: this.options.cookieExpiration,
                  domain: this.options.domain,
                  secure: this.options.secureCookie,
                  sameSite: this.options.sameSiteCookie,
                  storage: this.options.storage
                }));
              var a = !!this.cookieStorage.get(this._oldCookiename),
                u = !!this._metadataStorage.load();
              this._useOldCookie = !u && a && !this.options.cookieForceUpgrade;
              var c = u || a;
              if (this.options.deferInitialization && !c) return void this._deferInitialization(e, t, n, r);
              (this.options.domain = this.cookieStorage.options().domain),
                'string' === ye(this.options.logLevel) && qe.setLogLevel(this.options.logLevel);
              var l = rn(this);
              (this._apiPropertiesTrackingOptions = Object.keys(l).length > 0 ? { tracking_options: l } : {}),
                this.options.cookieForceUpgrade && a && (u || Qt(this), this.cookieStorage.remove(this._oldCookiename)),
                Kt(this),
                (this._pendingReadStorage = !0);
              var h = function (e) {
                n &&
                  n.deviceId &&
                  !qe.validateDeviceId(n.deviceId) &&
                  (qe.log.error('Invalid device ID rejected. Randomly generated UUID will be used instead of "'.concat(n.deviceId, '"')),
                  delete n.deviceId),
                  (s.options.deviceId = s._getInitialDeviceId(n && n.deviceId, e)),
                  (s.options.userId =
                    ('string' === ye(t) && !qe.isEmptyString(t) && t) || ('number' === ye(t) && t.toString()) || s.options.userId || null);
                var r = new Date().getTime(),
                  i = !s._sessionId || !s._lastEventTime || r - s._lastEventTime > s.options.sessionTimeout || s.options.sessionId;
                i &&
                  (s.options.unsetParamsReferrerOnNewSession && s._unsetUTMParams(),
                  (s._newSession = !0),
                  (s._sessionId = s.options.sessionId || r),
                  (s.options.sessionId = void 0),
                  s.options.saveParamsReferrerOncePerSession && s._trackParamsAndReferrer()),
                  s.options.saveParamsReferrerOncePerSession || s._trackParamsAndReferrer(),
                  s.options.saveEvents && (Wt(s._unsentEvents), Wt(s._unsentIdentifys)),
                  (s._lastEventTime = r),
                  Xt(s),
                  (s._pendingReadStorage = !1),
                  s._sendEventsIfReady();
                for (var o = 0; o < s._onInitCallbacks.length; o++) s._onInitCallbacks[o](s);
                (s._onInitCallbacks = []), (s._isInitialized = !0), i && s._runNewSessionStartCallbacks();
              };
              this.options.saveEvents &&
                ((this._unsentEvents = this._loadSavedUnsentEvents(this.options.unsentKey)
                  .map(function (e) {
                    return { event: e };
                  })
                  .concat(this._unsentEvents)),
                (this._unsentIdentifys = this._loadSavedUnsentEvents(this.options.unsentIdentifyKey)
                  .map(function (e) {
                    return { event: e };
                  })
                  .concat(this._unsentIdentifys))),
                n && n.onNewSessionStart && this.onNewSessionStart(this.options.onNewSessionStart),
                h(),
                this.runQueuedFunctions(),
